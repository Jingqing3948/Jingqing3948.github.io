{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-arknights/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"themes/hexo-theme-arknights/source/README.md","path":"README.md","modified":0,"renderable":1},{"_id":"themes/hexo-theme-arknights/source/CNAME","path":"CNAME","modified":0,"renderable":1},{"_id":"themes/hexo-theme-arknights/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/hexo-theme-arknights/source/cursor-inner.png","path":"cursor-inner.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-arknights/source/css/arknights.css","path":"css/arknights.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-arknights/source/css/arknights.sass","path":"css/arknights.sass","modified":0,"renderable":1},{"_id":"themes/hexo-theme-arknights/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-arknights/source/css/orz.txt","path":"css/orz.txt","modified":0,"renderable":1},{"_id":"themes/hexo-theme-arknights/source/img/Alipay.png","path":"img/Alipay.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-arknights/source/img/WeChat.png","path":"img/WeChat.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-arknights/source/img/bg.jpg","path":"img/bg.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-arknights/source/img/bk.jpg","path":"img/bk.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-arknights/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-arknights/source/font/BenderLight.ttf","path":"font/BenderLight.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-arknights/source/font/JetBrainsMono-Regular.woff2","path":"font/JetBrainsMono-Regular.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-arknights/source/js/arknights.js","path":"js/arknights.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-arknights/source/js/arknights.ts","path":"js/arknights.ts","modified":0,"renderable":1},{"_id":"themes/hexo-theme-arknights/source/js/gitalk.js","path":"js/gitalk.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-arknights/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0}],"Cache":[{"_id":"source/新建文本文档.txt","hash":"acaa0e897a717af5e634670c92e29d6ac7b7ec7e","modified":1645804482685},{"_id":"source/_posts/hello-world.md","hash":"bed95b53864595048aa43274024706b21c597c30","modified":1645886753870},{"_id":"source/_posts/大一C语言大作业 函数动画.md","hash":"1ed4668b5b1459a498ac8d150ddf7219babb6d2a","modified":1650252986046},{"_id":"themes/hexo-theme-arknights/.editorconfig","hash":"57f50fc69fdc98a28c9bb04c338865a8b267b4bc","modified":1645794356529},{"_id":"themes/hexo-theme-arknights/LICENSE","hash":"438ccc3597948b7577b003ccff330f40f8e9987b","modified":1645794356529},{"_id":"themes/hexo-theme-arknights/.gitignore","hash":"213618a702e4a2029e93c53f893d973a57bc593f","modified":1645794356529},{"_id":"themes/hexo-theme-arknights/README-Ja.md","hash":"9483798d80ff263072b5b510cb4ccf8334cbd9d6","modified":1645794356530},{"_id":"themes/hexo-theme-arknights/_config.yml","hash":"3b28666b15de640438333897f5585d81d75a93c7","modified":1645794356530},{"_id":"themes/hexo-theme-arknights/README.md","hash":"7ea2e5933cf4c82a512c5141d401f5bb88702096","modified":1645794356530},{"_id":"themes/hexo-theme-arknights/package.json","hash":"4c53ad02822158ee63684bb60a5486e021838824","modified":1645794356534},{"_id":"themes/hexo-theme-arknights/layout/archive.pug","hash":"418aeceb34be64890250ed6e56ee3f9c3cc77151","modified":1645794356532},{"_id":"themes/hexo-theme-arknights/layout/category.pug","hash":"ce359c7c25abbcbd8e7f057f9a0a60e30c66ee53","modified":1645794356532},{"_id":"themes/hexo-theme-arknights/layout/index.pug","hash":"56b7ed9b68646c865797fa17319fc2a48c3a1350","modified":1645794356533},{"_id":"themes/hexo-theme-arknights/layout/page.pug","hash":"6777ef19665cc9b7d974ad26fc7e392980cd8c85","modified":1645794356533},{"_id":"themes/hexo-theme-arknights/layout/tag.pug","hash":"70032991a6232156da02567dc7e793e3033069c4","modified":1645794356533},{"_id":"themes/hexo-theme-arknights/layout/post.pug","hash":"20d65034f2000d4b598380c7ab74053dcebfd39c","modified":1645794356533},{"_id":"themes/hexo-theme-arknights/source/404.html","hash":"526399fe5be55ed75ae9fea90e7b2e38658fc55a","modified":1645794356534},{"_id":"themes/hexo-theme-arknights/source/README.md","hash":"b16955f9769cf1a2a8dd06137939a0ab61db379c","modified":1645794356535},{"_id":"themes/hexo-theme-arknights/source/CNAME","hash":"bdbbd81fa4b69a523c7ac18567a8f68978babcf9","modified":1645794356534},{"_id":"themes/hexo-theme-arknights/source/favicon.ico","hash":"10adaea9ed613e955bf761962db4af2931cf97ee","modified":1645794356540},{"_id":"themes/hexo-theme-arknights/source/cursor-inner.png","hash":"aec3f5d5924c8fa1abe503c59dc42ffa80b3afe7","modified":1645794356540},{"_id":"themes/hexo-theme-arknights/layout/includes/layout.pug","hash":"48f179b80dc69bf40b758436203c436d5aede57f","modified":1645794356532},{"_id":"themes/hexo-theme-arknights/layout/includes/recent-posts.pug","hash":"c26a4212fc729f988286bca9298159be69f8dcb4","modified":1645794356532},{"_id":"themes/hexo-theme-arknights/source/css/arknights.css","hash":"a3c9a039319af12360cef97b2f18f8c91dfa141e","modified":1645794356535},{"_id":"themes/hexo-theme-arknights/source/css/arknights.sass","hash":"ff85bdadc687354f9938fd9ba15fdf4c85f3af85","modified":1645794356535},{"_id":"themes/hexo-theme-arknights/source/css/gitalk.css","hash":"3712d4a175831b43a89c1b4e55f2d9eb87a0b3b3","modified":1645794356536},{"_id":"themes/hexo-theme-arknights/source/css/orz.txt","hash":"f2e3aeb7c5f7cefc07fcd6e749538134dbee7fa9","modified":1645794356536},{"_id":"themes/hexo-theme-arknights/source/img/Alipay.png","hash":"d0d388f8b3c98a0f229acec14e638093152e0b08","modified":1646128150458},{"_id":"themes/hexo-theme-arknights/source/img/bg.jpg","hash":"463cfbcfd68886be8564a532c38cb32d180edba4","modified":1645794356544},{"_id":"themes/hexo-theme-arknights/source/img/WeChat.png","hash":"c2d22c30cf4b4a2a7256656f0b4cfb7e7cc35d17","modified":1646128119570},{"_id":"themes/hexo-theme-arknights/source/img/logo.png","hash":"50cb3653f6406b4e936aa0ba21dc573928016a94","modified":1645794356549},{"_id":"themes/hexo-theme-arknights/source/font/JetBrainsMono-Regular.woff2","hash":"23f70e45de896a9e12798db1d1f1ce5197f33ca4","modified":1645794356542},{"_id":"themes/hexo-theme-arknights/source/js/arknights.ts","hash":"b35e8ba353d2e4b453f49411e3291c7eee2fb0b4","modified":1645794356550},{"_id":"themes/hexo-theme-arknights/source/js/arknights.js","hash":"d649a464cd50cbcb44929254a8eb74ebb29c7363","modified":1645794356550},{"_id":"themes/hexo-theme-arknights/source/js/search.js","hash":"621b44d8f023c723130cfeae25179641e36867a4","modified":1645794356555},{"_id":"themes/hexo-theme-arknights/source/css/sass/_class_style.sass","hash":"b3d3642e8036802b5cf23d6613fcf0b4b177c171","modified":1645794356537},{"_id":"themes/hexo-theme-arknights/source/css/sass/_flex_layout.sass","hash":"b70d52bf9baaf3713aa7a47149d94651885a83f6","modified":1645794356537},{"_id":"themes/hexo-theme-arknights/source/css/sass/_base_style.sass","hash":"eda9b66e448a570b9ded04b6712626c98962bab6","modified":1645794356536},{"_id":"themes/hexo-theme-arknights/source/css/sass/_font.sass","hash":"34af1a0ada35d1c68c419156a17d33d084fca3d4","modified":1645794356537},{"_id":"themes/hexo-theme-arknights/source/css/sass/_search.sass","hash":"f5300af0f922f635dfba98cc8af3646896d98c0b","modified":1645794356538},{"_id":"themes/hexo-theme-arknights/source/css/sass/layout/__main.sass","hash":"aae8630f0dfb52d0c2f4b6fcb404ea934f41aeac","modified":1645794356538},{"_id":"themes/hexo-theme-arknights/source/css/sass/layout/__main_article.sass","hash":"96ff9af5a32b04f8e33217317d4fd2044c793b0a","modified":1645794356538},{"_id":"themes/hexo-theme-arknights/source/css/sass/layout/__main_aside.sass","hash":"f012df1067637c1b794712fa140acbfcfcbf1331","modified":1645794356539},{"_id":"themes/hexo-theme-arknights/source/css/sass/layout/_post.sass","hash":"5554d2ab7fa0aa4b4a57d1caf6c8b10b43746578","modified":1645794356539},{"_id":"themes/hexo-theme-arknights/source/css/sass/layout/_archive.sass","hash":"c4c25086e218e3c535435d126acff3d287755473","modified":1645794356539},{"_id":"themes/hexo-theme-arknights/support.jpg","hash":"9ca7c5e40123bc51da82f3a01d13c32ab2b5edc3","modified":1645794356556},{"_id":"themes/hexo-theme-arknights/source/font/BenderLight.ttf","hash":"5b500dbf6f2b95adff8861c76692562d70ca7b14","modified":1645794356541},{"_id":"themes/hexo-theme-arknights/demo.png","hash":"381cacd14c50017155067930b33ece892c27cd32","modified":1645794356531},{"_id":"themes/hexo-theme-arknights/source/js/gitalk.js","hash":"aef1ac4b42ebefaafe34707b68386484aad7d325","modified":1645794356554},{"_id":"themes/hexo-theme-arknights/source/img/bk.jpg","hash":"2146714c7429ca673a38469e7f74a412dc0ef09e","modified":1645794356549},{"_id":"public/atom.xml","hash":"30b433747a897352b6f479902b56ef096fd48189","modified":1650253064604},{"_id":"public/sitemap.xml","hash":"971f6566135dfbab9ef481855eb6a13b1717c9ee","modified":1650253064604},{"_id":"public/2022/02/25/hello-world/index.html","hash":"2ae6ba2ef912e0703bd3a4a650f9fc733a3955ba","modified":1645869623706},{"_id":"public/archives/index.html","hash":"532d10b566308011ad597c1538e91310e90ae0b1","modified":1650253064604},{"_id":"public/archives/2022/index.html","hash":"d757b82a2755de2c2bca943c5c6c2e1c078b962d","modified":1650253064604},{"_id":"public/archives/2022/02/index.html","hash":"0309552e8231c6e1d9b561e95254d4d9c4941253","modified":1650253064604},{"_id":"public/index.html","hash":"3125ae35af9bf75c70c703023111c30e7cc208ae","modified":1650253064604},{"_id":"public/2022/02/25/大一C语言大作业 函数动画/index.html","hash":"1819576d011744e1f1c2e2120a2fe722a535c985","modified":1650253064604},{"_id":"public/css/arknights.sass","hash":"ff85bdadc687354f9938fd9ba15fdf4c85f3af85","modified":1645805549124},{"_id":"public/新建文本文档.txt","hash":"acaa0e897a717af5e634670c92e29d6ac7b7ec7e","modified":1645805549124},{"_id":"public/css/orz.txt","hash":"f2e3aeb7c5f7cefc07fcd6e749538134dbee7fa9","modified":1645805549124},{"_id":"public/img/Alipay.png","hash":"529d851d55de77e40cedf39620e34be11e3fd710","modified":1645805549124},{"_id":"public/img/WeChat.png","hash":"46b03d7f8800e6b9c4bb47a37ab7afadd798706f","modified":1645805549124},{"_id":"public/cursor-inner.png","hash":"aec3f5d5924c8fa1abe503c59dc42ffa80b3afe7","modified":1645805549124},{"_id":"public/CNAME","hash":"bdbbd81fa4b69a523c7ac18567a8f68978babcf9","modified":1645805549124},{"_id":"public/favicon.ico","hash":"10adaea9ed613e955bf761962db4af2931cf97ee","modified":1645805549124},{"_id":"public/img/bg.jpg","hash":"463cfbcfd68886be8564a532c38cb32d180edba4","modified":1645805549124},{"_id":"public/img/logo.png","hash":"50cb3653f6406b4e936aa0ba21dc573928016a94","modified":1645805549124},{"_id":"public/js/arknights.ts","hash":"b35e8ba353d2e4b453f49411e3291c7eee2fb0b4","modified":1645805549124},{"_id":"public/font/JetBrainsMono-Regular.woff2","hash":"23f70e45de896a9e12798db1d1f1ce5197f33ca4","modified":1645805549124},{"_id":"public/font/BenderLight.ttf","hash":"5b500dbf6f2b95adff8861c76692562d70ca7b14","modified":1645805549124},{"_id":"public/404.html","hash":"72ac49fc2b61ad4fac410e856852f1d7bf1628d8","modified":1645805549124},{"_id":"public/README.html","hash":"16c7c0b44736434dfc0026fb83b67b6a4898aab0","modified":1645805549124},{"_id":"public/css/gitalk.css","hash":"758bdeb5fcc89b850ba8885fec65397fb7db044b","modified":1645805549124},{"_id":"public/js/arknights.js","hash":"d649a464cd50cbcb44929254a8eb74ebb29c7363","modified":1645805549124},{"_id":"public/js/search.js","hash":"94a621627e8445fca6e1d41be1b9923675fa56a1","modified":1645805549124},{"_id":"public/css/arknights.css","hash":"c3dcb562e669b1825b3051855112c7b2f07efd16","modified":1645805549124},{"_id":"public/js/gitalk.js","hash":"8a190691362a21a145e35bff693058bbc5c33e3e","modified":1645805549124},{"_id":"public/img/bk.jpg","hash":"2146714c7429ca673a38469e7f74a412dc0ef09e","modified":1645805549124},{"_id":"source/CNAME","hash":"acaa0e897a717af5e634670c92e29d6ac7b7ec7e","modified":1645804482685},{"_id":"source/_posts/大一C语言大作业 五子棋（总结）.md","hash":"4b9b83b6b345fa54a4765ea29a4fcd22ba7f05ad","modified":1650252965639},{"_id":"public/2022/02/26/大一C语言大作业 五子棋（总结）/index.html","hash":"07d8e594ecdbd47d45261be75a07f655c4d66dcd","modified":1650253064604},{"_id":"public/2022/02/24/hello-world/index.html","hash":"94bf12ec53c2e778cd116bcb8ebc5c22246b4333","modified":1650253064604},{"_id":"public/categories/homework/index.html","hash":"8117f341878ae57b57ab756499612c6e32ec35cd","modified":1650252585820},{"_id":"public/tags/code/index.html","hash":"0f102a3c612d19f37342cfbb4884e0cbdcd3492b","modified":1650252585820},{"_id":"source/_posts/gets()和scanf()处理空白字符的问题.md","hash":"58fed00d67b73c8ae74e1bcdd74c84ff3809389e","modified":1650253020729},{"_id":"source/_posts/结构体指针在函数中的应用.md","hash":"a1ed5436f382ce8c56d53e2607d2b6d1abb2104e","modified":1650252998917},{"_id":"public/2022/02/26/gets()和scanf()处理空白字符的问题/index.html","hash":"5a42471f26a25ed93f15b560460ca702c667ee8f","modified":1650253064604},{"_id":"public/2022/02/26/结构体指针在函数中的应用/index.html","hash":"7bb6968d61e037969390a26cc941ca736a98f7a5","modified":1650253064604},{"_id":"public/categories/problems/index.html","hash":"f776b3562d4a8720f2d5bf3817349951472a97b7","modified":1650252585820},{"_id":"source/_posts/大二C语言大作业 订餐系统.md","hash":"d4acc81919418c877e3348ccf6fa2eaceb8c658f","modified":1645891078569},{"_id":"source/_posts/大二C语言大作业 订餐系统（总结）.md","hash":"06a0ad524e653e546df420af3ebe2c8eec911394","modified":1650252977718},{"_id":"public/2022/02/27/大二C语言大作业 订餐系统（总结）/index.html","hash":"e6946aee0326f531eb1decb54ab84a4fcd292ca6","modified":1650253064604},{"_id":"source/_posts/微信开发者工具和gitee实现多人协作.md","hash":"c46ce645616dda20a9905e177aec0a56d24df59a","modified":1650253006885},{"_id":"public/2022/03/27/微信开发者工具和gitee实现多人协作/index.html","hash":"80171cbc9deb297b6b47a5e4a5d6e5f233bcfc7b","modified":1650253064604},{"_id":"public/archives/2022/03/index.html","hash":"1982d533fef9400bc1457395516a1f6f6f8e98bd","modified":1650253064604},{"_id":"public/tags/projects/index.html","hash":"6d7123aa02792167bdb19eca9c59f54a013548e2","modified":1650252585820},{"_id":"source/_posts/Java(1).md","hash":"6ec14300679efd9043f1ea80d3d7a25d3d30cb70","modified":1649870462665},{"_id":"source/_posts/Java 学习博客_1 介绍与安装.md","hash":"58a6c4918fd9c271748043759d64968b1a041154","modified":1650253031098},{"_id":"source/_posts/Java 学习博客_2 入门——基础语法.md","hash":"6f75289e4879ce4ce6494cf78035a238d79edc1b","modified":1650253038637},{"_id":"public/2022/04/14/Java 学习博客_2 入门——基础语法/index.html","hash":"a878472ad7ce2979036959d37552d5c9cfb066b8","modified":1650253064604},{"_id":"public/2022/04/14/Java 学习博客_1 介绍与安装/index.html","hash":"c61ba188817b5279961e5166d3d4dad52236d4ac","modified":1650253064604},{"_id":"public/archives/2022/04/index.html","hash":"f63e37a561494ae72b111196bdc6f754bf48003a","modified":1650253064604},{"_id":"public/categories/study/index.html","hash":"1dcde4fa0cb4e086d06c292db3ad37b51b66697c","modified":1650252585820},{"_id":"source/_posts/ER 和 EER 模型.md","hash":"522c3c3eecb2fcc525bfab24fa93f728009c5bdb","modified":1650253013447},{"_id":"source/_posts/Mysql Command Line Client 的使用，及常用命令.md","hash":"a1dc2710c55b8924b6e688c33dcd3c87600ade55","modified":1650253052364},{"_id":"public/2022/04/18/Mysql Command Line Client 的使用，及常用命令/index.html","hash":"e59c96577d33f1ea0fd54f92cf38dc9e92d877ad","modified":1650253064604},{"_id":"public/2022/04/18/ER 和 EER 模型/index.html","hash":"3f7d7abd6e73ef06fb713718119e675dc6b27bd9","modified":1650253064604},{"_id":"public/categories/database/index.html","hash":"9dfc71c37f51bb8767007497bc62abadbd21e0ab","modified":1650253064604},{"_id":"public/categories/java/index.html","hash":"097e4e60f871cd04050d7606067a96edaa71267b","modified":1650253064604},{"_id":"public/categories/clanguage/index.html","hash":"a7785171b89e5e454ba5989d9c7327b90a755e3c","modified":1650253064604},{"_id":"public/categories/tools/index.html","hash":"ceb09d6491c21a2e56839e9bebe37ffc6588f023","modified":1650253064604},{"_id":"public/categories/course/index.html","hash":"d9b919f9cfdb4ddab953ffa286f89981f8047abd","modified":1650253064604},{"_id":"public/categories/projects/index.html","hash":"5a5aec1e871258e4c16464e319855c2b6156cfb0","modified":1650253064604},{"_id":"public/archives/page/2/index.html","hash":"0f8bfcb6764978cf15738ce4c0d38e06b0519495","modified":1650253064604},{"_id":"public/archives/2022/page/2/index.html","hash":"a45bd1b5c5402b94f242b162ddf7262f3e0d52be","modified":1650253064604},{"_id":"public/page/2/index.html","hash":"6b626807fdda441172f1daeea72d55c45642827d","modified":1650253064604},{"_id":"public/tags/problems/index.html","hash":"9207ff92e618a7adab59516fbb41a89def20a8af","modified":1650253064604},{"_id":"public/tags/study/index.html","hash":"cee4d2cdb61a3e9d207af30bd2cfd588e97dcd0d","modified":1650253064604},{"_id":"public/tags/homework/index.html","hash":"31e8d7b5c5fde7dfa5f7b2d8e8f960c317d46456","modified":1650253064604}],"Category":[{"name":"homework","_id":"cl03y1b0d00013wv2e9xof90f"},{"name":"problems","_id":"cl040g0kv0002r8v2fhkh87ol"},{"name":"study","_id":"cl1xua8el000060v2ahv2033d"},{"name":"database","_id":"cl2462ezy0001cov23z9kghje"},{"name":"java","_id":"cl2462f070004cov2f9020e3s"},{"name":"clanguage","_id":"cl2462f0g000ccov2hjrr11h0"},{"name":"tools","_id":"cl2462f0j000hcov2hcphgv5i"},{"name":"course","_id":"cl2462f0k000mcov26it14oyd"},{"name":"projects","_id":"cl2462f0n000xcov207lw48bg"}],"Data":[],"Page":[],"Post":[{"title":"Hello World","date":"2022-02-23T16:00:00.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2022-02-24\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"updated":"2022-02-26T14:45:53.870Z","_id":"cl02m4pyk0000fsv2d545f9jn","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"大一C语言大作业：函数动画","date":"2022-02-24T16:00:00.000Z","_content":"\n# 绘制一个函数动画。\n\n要求：1.碰到边界反弹；\n2.会像贪吃蛇一样消失。\n\n老师已给出提示代码：三个辅助函数\n\n```c\n#include<stdio.h>\n#include<windows.h>\n#include<math.h>\n// two functions to clear screen and set cursor position for printing.\n// one function to take a rest in 10 microseconds.\n\n// use this function to clear screen\nvoid clear()//清屏\n{\n#if defined _WIN32\n    system(\"cls\");\n#elif defined (__LINUX__) || defined(__gnu_linux__) || defined(__linux__)\n    system(\"clear\");\n#elif defined (__APPLE__)\n    system(\"clear\");\n#endif\n}\n\n#if defined _WIN32\n    #include <conio.h>\n    #include <windows.h>\n    void setcursor(int x, int y)\n    {\n        HANDLE hCon = GetStdHandle(STD_OUTPUT_HANDLE);\n        COORD setps;\n        setps.X = x; setps.Y = y;\n        SetConsoleCursorPosition(hCon, setps);\n    }\n#endif\n\n\n// use this function to positioning before calling printf  \nvoid gotoxy(int x, int y)//光标移动到x,y处\n{\n#if defined _WIN32\n    setcursor(y - 1, x - 1);\n#elif defined (__LINUX__) || defined(__gnu_linux__) || defined(__linux__)\n    printf(\"\\033[%d;%dH\", x, y);\n#elif defined (__APPLE__)\n    printf(\"\\033[%d;%dH\", x, y);\n#endif\n}\n\nint factor = 10;\n\n// rest msec * 10 microseconds\nvoid rest(int msec)//当前画面静止一定时间\n{\n#if defined _WIN32\n    Sleep(msec * factor);\n#elif defined (__LINUX__) || defined(__gnu_linux__) || defined(__linux__)\n    usleep(msec * 1000 * factor);\n#elif defined (__APPLE__)\n    usleep(msec * 1000* factor);\n#endif\n}\n```\n其中`clear()`函数清屏；`gotoxy()`函数使光标移动到指定位置；`rest()`当前画面静止。\n\n## 思路\n1.动画绘制\n动画的原理是一帧帧的图片有短暂的时间间隔，连起来放映之后就产生了会动的感觉。我们可以每打印一个点之后`rest()`一小段时间来形成动画的效果。\n\n2.边界反弹\n即为碰到边界反向输出。我想的方法是纵坐标y1不变，只需要设计分段函数让x反向即可。\n\n3.延时消失\n要求的消失是像贪吃蛇一样，前面一边画着点，后面尾巴一边消失。但自己怎么想都只能做到全部绘制完成之后再让它开始消失。\n请教助教与Mc大佬之后得知他的思路是保留点数。屏幕中最多出现50个点，第51个点之后，打印第x个点时，x-50号点打印空格覆盖，让他消失。\n\n## 注意事项\n1.审题。给定的`gotoxy()`函数的横纵坐标是反着的，而且从左上角开始为(1,1)。\n2.`rest()`的用法非常灵活，比如高人指点：用户可以输入打印速度speed，rest(100-speed)。（妙啊）\n3.程序中出现几段几乎完全相似的代码（除了字母不同），“代码复制”是程序不良的表现。因为将来做修改、维护的时候要维护很多处。所以比起重复一段好多遍，使用函数会更好。\n\n感谢Mc、fOrever_jAckY、olinr1222、--_--等人指点！\n\n```c\nint zong(int i)//纵坐标y1\n{\n\tdouble x=(i-51);\n\tdouble y=12.0*sin(x/7);\n\tint y1=(int)(15-y);\n\treturn y1;\n}\n\nint heng(int i)//横坐标j\n{\n\tint j=i;\n\tif(i>101&&i<=202)j=203-i;\n\telse if(i>202&&i<=303)j=i-202;\n\telse if(i>303&&i<=404)j=405-i;\n\treturn j;\n}\n\nvoid dayin(char ch,int j,int y1)//在(y1,j)处输出给定字符\n{\n\t\tgotoxy(y1,j);\n\t\tif(ch==' ')\n\t\t{\n\t\t\tif(y1==15)printf(\"-\");\n\t\t\telse if(j==51)printf(\"|\");\n\t\t\telse printf(\" \");\n\t\t}\n\t\telse printf(\"#\");\n\t\tgotoxy(29-y1,102-j);\n\t\tif(ch==' ')//防止坐标点和坐标轴被空格覆盖\n\t\t{\n\t\t\tif(29-y1==15)printf(\"-\");\n\t\t\telse if(102-j==51)printf(\"|\");\n\t\t\telse if(29-y1==26&&102-j==49)printf(\"-\");\n\t\t\telse if((29-y1==26&&102-j==50)||(29-y1==3&&102-j==50))printf(\"1\");\n\t\t\telse if(29-y1==16&&102-j==100)printf(\"X\");\n\t\t\telse printf(\" \");\n\t\t}\n\t\telse printf(\"#\");\n\t\tgotoxy(1,1);\n}\n\n\n\n\nint main()\n{\n\tfloat x,y;\n\tint tim=20;\n\tsystem(\"color F0\");\n\tsystem(\"mode con cols=101 lines=30\");\n\tclear();\n\t\n\tfor(int i=0;i<=100;i++)//打印x轴 \n\t{\n\t\tgotoxy(15,i+1);\n\t\tif(i!=50)printf(\"-\");\n\t\telse printf(\"+\");\n\t\tgotoxy(1,1);\n\t\trest(1);\n\t}\n\t\n\tfor(int i=29;i>=0;i--)//打印y轴 \n\t{\n\t\tgotoxy(i+1,51);\n\t\tif(i!=14)printf(\"|\");\n\t\tgotoxy(1,1); \n\t\trest(1);\n\t}\n\t//打印轴上的点\n\tgotoxy(16,52); printf(\"O\");\n\t\n\tgotoxy(16,100);printf(\"X\");\n\t\n\tgotoxy(1,49);printf(\"Y\");\n\t\n\tgotoxy(3,50);printf(\"1\");\n\t\n\tgotoxy(26,49);printf(\"-1\");\n\t\n\t\n\t\n\t\n\tint i=0,j,y1;\n\n\tfor(i=52;i<=404;i++)//打印函数 \n\t{\n\t\tj=heng(i),y1=zong(i);\n\t\tdayin('#',j,y1);\n\t\trest(4);\n\t\t\n\t\tif(i-51-tim>0)\n\t\t{\n\t\t\ty1=zong(i-tim);\n\t\t\tj=heng(i-tim);\n\t\t\tdayin(' ',j,y1);\n\t\t}\n\t}\t\n\tfor(int r=i-tim;r<=i;r++)\n\t{\n\t\tj=heng(r);\n\t\ty1=zong(r);\n\t\tdayin(' ',j,y1);\n\t\trest(4);\n\t} \n\tgotoxy(1,1);\n\trest(1000);\n\treturn 0;\n}\n```","source":"_posts/大一C语言大作业 函数动画.md","raw":"---\ntitle: 大一C语言大作业：函数动画\ndate: 2022-02-25\ntags: homework\ncategory: clanguage\n---\n\n# 绘制一个函数动画。\n\n要求：1.碰到边界反弹；\n2.会像贪吃蛇一样消失。\n\n老师已给出提示代码：三个辅助函数\n\n```c\n#include<stdio.h>\n#include<windows.h>\n#include<math.h>\n// two functions to clear screen and set cursor position for printing.\n// one function to take a rest in 10 microseconds.\n\n// use this function to clear screen\nvoid clear()//清屏\n{\n#if defined _WIN32\n    system(\"cls\");\n#elif defined (__LINUX__) || defined(__gnu_linux__) || defined(__linux__)\n    system(\"clear\");\n#elif defined (__APPLE__)\n    system(\"clear\");\n#endif\n}\n\n#if defined _WIN32\n    #include <conio.h>\n    #include <windows.h>\n    void setcursor(int x, int y)\n    {\n        HANDLE hCon = GetStdHandle(STD_OUTPUT_HANDLE);\n        COORD setps;\n        setps.X = x; setps.Y = y;\n        SetConsoleCursorPosition(hCon, setps);\n    }\n#endif\n\n\n// use this function to positioning before calling printf  \nvoid gotoxy(int x, int y)//光标移动到x,y处\n{\n#if defined _WIN32\n    setcursor(y - 1, x - 1);\n#elif defined (__LINUX__) || defined(__gnu_linux__) || defined(__linux__)\n    printf(\"\\033[%d;%dH\", x, y);\n#elif defined (__APPLE__)\n    printf(\"\\033[%d;%dH\", x, y);\n#endif\n}\n\nint factor = 10;\n\n// rest msec * 10 microseconds\nvoid rest(int msec)//当前画面静止一定时间\n{\n#if defined _WIN32\n    Sleep(msec * factor);\n#elif defined (__LINUX__) || defined(__gnu_linux__) || defined(__linux__)\n    usleep(msec * 1000 * factor);\n#elif defined (__APPLE__)\n    usleep(msec * 1000* factor);\n#endif\n}\n```\n其中`clear()`函数清屏；`gotoxy()`函数使光标移动到指定位置；`rest()`当前画面静止。\n\n## 思路\n1.动画绘制\n动画的原理是一帧帧的图片有短暂的时间间隔，连起来放映之后就产生了会动的感觉。我们可以每打印一个点之后`rest()`一小段时间来形成动画的效果。\n\n2.边界反弹\n即为碰到边界反向输出。我想的方法是纵坐标y1不变，只需要设计分段函数让x反向即可。\n\n3.延时消失\n要求的消失是像贪吃蛇一样，前面一边画着点，后面尾巴一边消失。但自己怎么想都只能做到全部绘制完成之后再让它开始消失。\n请教助教与Mc大佬之后得知他的思路是保留点数。屏幕中最多出现50个点，第51个点之后，打印第x个点时，x-50号点打印空格覆盖，让他消失。\n\n## 注意事项\n1.审题。给定的`gotoxy()`函数的横纵坐标是反着的，而且从左上角开始为(1,1)。\n2.`rest()`的用法非常灵活，比如高人指点：用户可以输入打印速度speed，rest(100-speed)。（妙啊）\n3.程序中出现几段几乎完全相似的代码（除了字母不同），“代码复制”是程序不良的表现。因为将来做修改、维护的时候要维护很多处。所以比起重复一段好多遍，使用函数会更好。\n\n感谢Mc、fOrever_jAckY、olinr1222、--_--等人指点！\n\n```c\nint zong(int i)//纵坐标y1\n{\n\tdouble x=(i-51);\n\tdouble y=12.0*sin(x/7);\n\tint y1=(int)(15-y);\n\treturn y1;\n}\n\nint heng(int i)//横坐标j\n{\n\tint j=i;\n\tif(i>101&&i<=202)j=203-i;\n\telse if(i>202&&i<=303)j=i-202;\n\telse if(i>303&&i<=404)j=405-i;\n\treturn j;\n}\n\nvoid dayin(char ch,int j,int y1)//在(y1,j)处输出给定字符\n{\n\t\tgotoxy(y1,j);\n\t\tif(ch==' ')\n\t\t{\n\t\t\tif(y1==15)printf(\"-\");\n\t\t\telse if(j==51)printf(\"|\");\n\t\t\telse printf(\" \");\n\t\t}\n\t\telse printf(\"#\");\n\t\tgotoxy(29-y1,102-j);\n\t\tif(ch==' ')//防止坐标点和坐标轴被空格覆盖\n\t\t{\n\t\t\tif(29-y1==15)printf(\"-\");\n\t\t\telse if(102-j==51)printf(\"|\");\n\t\t\telse if(29-y1==26&&102-j==49)printf(\"-\");\n\t\t\telse if((29-y1==26&&102-j==50)||(29-y1==3&&102-j==50))printf(\"1\");\n\t\t\telse if(29-y1==16&&102-j==100)printf(\"X\");\n\t\t\telse printf(\" \");\n\t\t}\n\t\telse printf(\"#\");\n\t\tgotoxy(1,1);\n}\n\n\n\n\nint main()\n{\n\tfloat x,y;\n\tint tim=20;\n\tsystem(\"color F0\");\n\tsystem(\"mode con cols=101 lines=30\");\n\tclear();\n\t\n\tfor(int i=0;i<=100;i++)//打印x轴 \n\t{\n\t\tgotoxy(15,i+1);\n\t\tif(i!=50)printf(\"-\");\n\t\telse printf(\"+\");\n\t\tgotoxy(1,1);\n\t\trest(1);\n\t}\n\t\n\tfor(int i=29;i>=0;i--)//打印y轴 \n\t{\n\t\tgotoxy(i+1,51);\n\t\tif(i!=14)printf(\"|\");\n\t\tgotoxy(1,1); \n\t\trest(1);\n\t}\n\t//打印轴上的点\n\tgotoxy(16,52); printf(\"O\");\n\t\n\tgotoxy(16,100);printf(\"X\");\n\t\n\tgotoxy(1,49);printf(\"Y\");\n\t\n\tgotoxy(3,50);printf(\"1\");\n\t\n\tgotoxy(26,49);printf(\"-1\");\n\t\n\t\n\t\n\t\n\tint i=0,j,y1;\n\n\tfor(i=52;i<=404;i++)//打印函数 \n\t{\n\t\tj=heng(i),y1=zong(i);\n\t\tdayin('#',j,y1);\n\t\trest(4);\n\t\t\n\t\tif(i-51-tim>0)\n\t\t{\n\t\t\ty1=zong(i-tim);\n\t\t\tj=heng(i-tim);\n\t\t\tdayin(' ',j,y1);\n\t\t}\n\t}\t\n\tfor(int r=i-tim;r<=i;r++)\n\t{\n\t\tj=heng(r);\n\t\ty1=zong(r);\n\t\tdayin(' ',j,y1);\n\t\trest(4);\n\t} \n\tgotoxy(1,1);\n\trest(1000);\n\treturn 0;\n}\n```","slug":"大一C语言大作业 函数动画","published":1,"updated":"2022-04-18T03:36:26.046Z","_id":"cl02m4pyp0001fsv2bf156buq","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"绘制一个函数动画。\"><a href=\"#绘制一个函数动画。\" class=\"headerlink\" title=\"绘制一个函数动画。\"></a>绘制一个函数动画。</h1><p>要求：1.碰到边界反弹；<br>2.会像贪吃蛇一样消失。</p>\n<p>老师已给出提示代码：三个辅助函数</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span><span class=\"hljs-string\">&lt;stdio.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span><span class=\"hljs-string\">&lt;windows.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span><span class=\"hljs-string\">&lt;math.h&gt;</span></span><br><span class=\"hljs-comment\">// two functions to clear screen and set cursor position for printing.</span><br><span class=\"hljs-comment\">// one function to take a rest in 10 microseconds.</span><br><br><span class=\"hljs-comment\">// use this function to clear screen</span><br><span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">clear</span><span class=\"hljs-params\">()</span><span class=\"hljs-comment\">//清屏</span><br>&#123;<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">if</span> defined _WIN32</span><br>    system(<span class=\"hljs-string\">&quot;cls&quot;</span>);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">elif</span> defined (__LINUX__) || defined(__gnu_linux__) || defined(__linux__)</span><br>    system(<span class=\"hljs-string\">&quot;clear&quot;</span>);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">elif</span> defined (__APPLE__)</span><br>    system(<span class=\"hljs-string\">&quot;clear&quot;</span>);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endif</span></span><br>&#125;<br><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">if</span> defined _WIN32</span><br>    <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;conio.h&gt;</span></span><br>    <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;windows.h&gt;</span></span><br>    <span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">setcursor</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span><br>    &#123;<br>        HANDLE hCon = GetStdHandle(STD_OUTPUT_HANDLE);<br>        COORD setps;<br>        setps.X = x; setps.Y = y;<br>        SetConsoleCursorPosition(hCon, setps);<br>    &#125;<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endif</span></span><br><br><br><span class=\"hljs-comment\">// use this function to positioning before calling printf  </span><br><span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">gotoxy</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span><span class=\"hljs-comment\">//光标移动到x,y处</span><br>&#123;<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">if</span> defined _WIN32</span><br>    setcursor(y - <span class=\"hljs-number\">1</span>, x - <span class=\"hljs-number\">1</span>);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">elif</span> defined (__LINUX__) || defined(__gnu_linux__) || defined(__linux__)</span><br>    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\033[%d;%dH&quot;</span>, x, y);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">elif</span> defined (__APPLE__)</span><br>    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\033[%d;%dH&quot;</span>, x, y);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endif</span></span><br>&#125;<br><br><span class=\"hljs-type\">int</span> factor = <span class=\"hljs-number\">10</span>;<br><br><span class=\"hljs-comment\">// rest msec * 10 microseconds</span><br><span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">rest</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> msec)</span><span class=\"hljs-comment\">//当前画面静止一定时间</span><br>&#123;<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">if</span> defined _WIN32</span><br>    Sleep(msec * factor);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">elif</span> defined (__LINUX__) || defined(__gnu_linux__) || defined(__linux__)</span><br>    usleep(msec * <span class=\"hljs-number\">1000</span> * factor);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">elif</span> defined (__APPLE__)</span><br>    usleep(msec * <span class=\"hljs-number\">1000</span>* factor);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endif</span></span><br>&#125;<br></code></pre></td></tr></table></figure>\n<p>其中<code>clear()</code>函数清屏；<code>gotoxy()</code>函数使光标移动到指定位置；<code>rest()</code>当前画面静止。</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>1.动画绘制<br>动画的原理是一帧帧的图片有短暂的时间间隔，连起来放映之后就产生了会动的感觉。我们可以每打印一个点之后<code>rest()</code>一小段时间来形成动画的效果。</p>\n<p>2.边界反弹<br>即为碰到边界反向输出。我想的方法是纵坐标y1不变，只需要设计分段函数让x反向即可。</p>\n<p>3.延时消失<br>要求的消失是像贪吃蛇一样，前面一边画着点，后面尾巴一边消失。但自己怎么想都只能做到全部绘制完成之后再让它开始消失。<br>请教助教与Mc大佬之后得知他的思路是保留点数。屏幕中最多出现50个点，第51个点之后，打印第x个点时，x-50号点打印空格覆盖，让他消失。</p>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><p>1.审题。给定的<code>gotoxy()</code>函数的横纵坐标是反着的，而且从左上角开始为(1,1)。<br>2.<code>rest()</code>的用法非常灵活，比如高人指点：用户可以输入打印速度speed，rest(100-speed)。（妙啊）<br>3.程序中出现几段几乎完全相似的代码（除了字母不同），“代码复制”是程序不良的表现。因为将来做修改、维护的时候要维护很多处。所以比起重复一段好多遍，使用函数会更好。</p>\n<p>感谢Mc、fOrever_jAckY、olinr1222、–_–等人指点！</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">zong</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> i)</span><span class=\"hljs-comment\">//纵坐标y1</span><br>&#123;<br>\t<span class=\"hljs-type\">double</span> x=(i<span class=\"hljs-number\">-51</span>);<br>\t<span class=\"hljs-type\">double</span> y=<span class=\"hljs-number\">12.0</span>*<span class=\"hljs-built_in\">sin</span>(x/<span class=\"hljs-number\">7</span>);<br>\t<span class=\"hljs-type\">int</span> y1=(<span class=\"hljs-type\">int</span>)(<span class=\"hljs-number\">15</span>-y);<br>\t<span class=\"hljs-keyword\">return</span> y1;<br>&#125;<br><br><span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">heng</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> i)</span><span class=\"hljs-comment\">//横坐标j</span><br>&#123;<br>\t<span class=\"hljs-type\">int</span> j=i;<br>\t<span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">101</span>&amp;&amp;i&lt;=<span class=\"hljs-number\">202</span>)j=<span class=\"hljs-number\">203</span>-i;<br>\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">202</span>&amp;&amp;i&lt;=<span class=\"hljs-number\">303</span>)j=i<span class=\"hljs-number\">-202</span>;<br>\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">303</span>&amp;&amp;i&lt;=<span class=\"hljs-number\">404</span>)j=<span class=\"hljs-number\">405</span>-i;<br>\t<span class=\"hljs-keyword\">return</span> j;<br>&#125;<br><br><span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">dayin</span><span class=\"hljs-params\">(<span class=\"hljs-type\">char</span> ch,<span class=\"hljs-type\">int</span> j,<span class=\"hljs-type\">int</span> y1)</span><span class=\"hljs-comment\">//在(y1,j)处输出给定字符</span><br>&#123;<br>\t\tgotoxy(y1,j);<br>\t\t<span class=\"hljs-keyword\">if</span>(ch==<span class=\"hljs-string\">&#x27; &#x27;</span>)<br>\t\t&#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span>(y1==<span class=\"hljs-number\">15</span>)<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;-&quot;</span>);<br>\t\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(j==<span class=\"hljs-number\">51</span>)<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;|&quot;</span>);<br>\t\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot; &quot;</span>);<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;#&quot;</span>);<br>\t\tgotoxy(<span class=\"hljs-number\">29</span>-y1,<span class=\"hljs-number\">102</span>-j);<br>\t\t<span class=\"hljs-keyword\">if</span>(ch==<span class=\"hljs-string\">&#x27; &#x27;</span>)<span class=\"hljs-comment\">//防止坐标点和坐标轴被空格覆盖</span><br>\t\t&#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span>(<span class=\"hljs-number\">29</span>-y1==<span class=\"hljs-number\">15</span>)<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;-&quot;</span>);<br>\t\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-number\">102</span>-j==<span class=\"hljs-number\">51</span>)<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;|&quot;</span>);<br>\t\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-number\">29</span>-y1==<span class=\"hljs-number\">26</span>&amp;&amp;<span class=\"hljs-number\">102</span>-j==<span class=\"hljs-number\">49</span>)<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;-&quot;</span>);<br>\t\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>((<span class=\"hljs-number\">29</span>-y1==<span class=\"hljs-number\">26</span>&amp;&amp;<span class=\"hljs-number\">102</span>-j==<span class=\"hljs-number\">50</span>)||(<span class=\"hljs-number\">29</span>-y1==<span class=\"hljs-number\">3</span>&amp;&amp;<span class=\"hljs-number\">102</span>-j==<span class=\"hljs-number\">50</span>))<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;1&quot;</span>);<br>\t\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-number\">29</span>-y1==<span class=\"hljs-number\">16</span>&amp;&amp;<span class=\"hljs-number\">102</span>-j==<span class=\"hljs-number\">100</span>)<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;X&quot;</span>);<br>\t\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot; &quot;</span>);<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;#&quot;</span>);<br>\t\tgotoxy(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>);<br>&#125;<br><br><br><br><br><span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span><br>&#123;<br>\t<span class=\"hljs-type\">float</span> x,y;<br>\t<span class=\"hljs-type\">int</span> tim=<span class=\"hljs-number\">20</span>;<br>\tsystem(<span class=\"hljs-string\">&quot;color F0&quot;</span>);<br>\tsystem(<span class=\"hljs-string\">&quot;mode con cols=101 lines=30&quot;</span>);<br>\tclear();<br>\t<br>\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;=<span class=\"hljs-number\">100</span>;i++)<span class=\"hljs-comment\">//打印x轴 </span><br>\t&#123;<br>\t\tgotoxy(<span class=\"hljs-number\">15</span>,i+<span class=\"hljs-number\">1</span>);<br>\t\t<span class=\"hljs-keyword\">if</span>(i!=<span class=\"hljs-number\">50</span>)<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;-&quot;</span>);<br>\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;+&quot;</span>);<br>\t\tgotoxy(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>);<br>\t\trest(<span class=\"hljs-number\">1</span>);<br>\t&#125;<br>\t<br>\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i=<span class=\"hljs-number\">29</span>;i&gt;=<span class=\"hljs-number\">0</span>;i--)<span class=\"hljs-comment\">//打印y轴 </span><br>\t&#123;<br>\t\tgotoxy(i+<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">51</span>);<br>\t\t<span class=\"hljs-keyword\">if</span>(i!=<span class=\"hljs-number\">14</span>)<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;|&quot;</span>);<br>\t\tgotoxy(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>); <br>\t\trest(<span class=\"hljs-number\">1</span>);<br>\t&#125;<br>\t<span class=\"hljs-comment\">//打印轴上的点</span><br>\tgotoxy(<span class=\"hljs-number\">16</span>,<span class=\"hljs-number\">52</span>); <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;O&quot;</span>);<br>\t<br>\tgotoxy(<span class=\"hljs-number\">16</span>,<span class=\"hljs-number\">100</span>);<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;X&quot;</span>);<br>\t<br>\tgotoxy(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">49</span>);<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Y&quot;</span>);<br>\t<br>\tgotoxy(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">50</span>);<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;1&quot;</span>);<br>\t<br>\tgotoxy(<span class=\"hljs-number\">26</span>,<span class=\"hljs-number\">49</span>);<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;-1&quot;</span>);<br>\t<br>\t<br>\t<br>\t<br>\t<span class=\"hljs-type\">int</span> i=<span class=\"hljs-number\">0</span>,j,y1;<br><br>\t<span class=\"hljs-keyword\">for</span>(i=<span class=\"hljs-number\">52</span>;i&lt;=<span class=\"hljs-number\">404</span>;i++)<span class=\"hljs-comment\">//打印函数 </span><br>\t&#123;<br>\t\tj=heng(i),y1=zong(i);<br>\t\tdayin(<span class=\"hljs-string\">&#x27;#&#x27;</span>,j,y1);<br>\t\trest(<span class=\"hljs-number\">4</span>);<br>\t\t<br>\t\t<span class=\"hljs-keyword\">if</span>(i<span class=\"hljs-number\">-51</span>-tim&gt;<span class=\"hljs-number\">0</span>)<br>\t\t&#123;<br>\t\t\ty1=zong(i-tim);<br>\t\t\tj=heng(i-tim);<br>\t\t\tdayin(<span class=\"hljs-string\">&#x27; &#x27;</span>,j,y1);<br>\t\t&#125;<br>\t&#125;\t<br>\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> r=i-tim;r&lt;=i;r++)<br>\t&#123;<br>\t\tj=heng(r);<br>\t\ty1=zong(r);<br>\t\tdayin(<span class=\"hljs-string\">&#x27; &#x27;</span>,j,y1);<br>\t\trest(<span class=\"hljs-number\">4</span>);<br>\t&#125; <br>\tgotoxy(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>);<br>\trest(<span class=\"hljs-number\">1000</span>);<br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"绘制一个函数动画。\"><a href=\"#绘制一个函数动画。\" class=\"headerlink\" title=\"绘制一个函数动画。\"></a>绘制一个函数动画。</h1><p>要求：1.碰到边界反弹；<br>2.会像贪吃蛇一样消失。</p>\n<p>老师已给出提示代码：三个辅助函数</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span><span class=\"hljs-string\">&lt;stdio.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span><span class=\"hljs-string\">&lt;windows.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span><span class=\"hljs-string\">&lt;math.h&gt;</span></span><br><span class=\"hljs-comment\">// two functions to clear screen and set cursor position for printing.</span><br><span class=\"hljs-comment\">// one function to take a rest in 10 microseconds.</span><br><br><span class=\"hljs-comment\">// use this function to clear screen</span><br><span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">clear</span><span class=\"hljs-params\">()</span><span class=\"hljs-comment\">//清屏</span><br>&#123;<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">if</span> defined _WIN32</span><br>    system(<span class=\"hljs-string\">&quot;cls&quot;</span>);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">elif</span> defined (__LINUX__) || defined(__gnu_linux__) || defined(__linux__)</span><br>    system(<span class=\"hljs-string\">&quot;clear&quot;</span>);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">elif</span> defined (__APPLE__)</span><br>    system(<span class=\"hljs-string\">&quot;clear&quot;</span>);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endif</span></span><br>&#125;<br><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">if</span> defined _WIN32</span><br>    <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;conio.h&gt;</span></span><br>    <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;windows.h&gt;</span></span><br>    <span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">setcursor</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span><br>    &#123;<br>        HANDLE hCon = GetStdHandle(STD_OUTPUT_HANDLE);<br>        COORD setps;<br>        setps.X = x; setps.Y = y;<br>        SetConsoleCursorPosition(hCon, setps);<br>    &#125;<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endif</span></span><br><br><br><span class=\"hljs-comment\">// use this function to positioning before calling printf  </span><br><span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">gotoxy</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span><span class=\"hljs-comment\">//光标移动到x,y处</span><br>&#123;<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">if</span> defined _WIN32</span><br>    setcursor(y - <span class=\"hljs-number\">1</span>, x - <span class=\"hljs-number\">1</span>);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">elif</span> defined (__LINUX__) || defined(__gnu_linux__) || defined(__linux__)</span><br>    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\033[%d;%dH&quot;</span>, x, y);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">elif</span> defined (__APPLE__)</span><br>    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\033[%d;%dH&quot;</span>, x, y);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endif</span></span><br>&#125;<br><br><span class=\"hljs-type\">int</span> factor = <span class=\"hljs-number\">10</span>;<br><br><span class=\"hljs-comment\">// rest msec * 10 microseconds</span><br><span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">rest</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> msec)</span><span class=\"hljs-comment\">//当前画面静止一定时间</span><br>&#123;<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">if</span> defined _WIN32</span><br>    Sleep(msec * factor);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">elif</span> defined (__LINUX__) || defined(__gnu_linux__) || defined(__linux__)</span><br>    usleep(msec * <span class=\"hljs-number\">1000</span> * factor);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">elif</span> defined (__APPLE__)</span><br>    usleep(msec * <span class=\"hljs-number\">1000</span>* factor);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endif</span></span><br>&#125;<br></code></pre></td></tr></table></figure>\n<p>其中<code>clear()</code>函数清屏；<code>gotoxy()</code>函数使光标移动到指定位置；<code>rest()</code>当前画面静止。</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>1.动画绘制<br>动画的原理是一帧帧的图片有短暂的时间间隔，连起来放映之后就产生了会动的感觉。我们可以每打印一个点之后<code>rest()</code>一小段时间来形成动画的效果。</p>\n<p>2.边界反弹<br>即为碰到边界反向输出。我想的方法是纵坐标y1不变，只需要设计分段函数让x反向即可。</p>\n<p>3.延时消失<br>要求的消失是像贪吃蛇一样，前面一边画着点，后面尾巴一边消失。但自己怎么想都只能做到全部绘制完成之后再让它开始消失。<br>请教助教与Mc大佬之后得知他的思路是保留点数。屏幕中最多出现50个点，第51个点之后，打印第x个点时，x-50号点打印空格覆盖，让他消失。</p>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><p>1.审题。给定的<code>gotoxy()</code>函数的横纵坐标是反着的，而且从左上角开始为(1,1)。<br>2.<code>rest()</code>的用法非常灵活，比如高人指点：用户可以输入打印速度speed，rest(100-speed)。（妙啊）<br>3.程序中出现几段几乎完全相似的代码（除了字母不同），“代码复制”是程序不良的表现。因为将来做修改、维护的时候要维护很多处。所以比起重复一段好多遍，使用函数会更好。</p>\n<p>感谢Mc、fOrever_jAckY、olinr1222、–_–等人指点！</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">zong</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> i)</span><span class=\"hljs-comment\">//纵坐标y1</span><br>&#123;<br>\t<span class=\"hljs-type\">double</span> x=(i<span class=\"hljs-number\">-51</span>);<br>\t<span class=\"hljs-type\">double</span> y=<span class=\"hljs-number\">12.0</span>*<span class=\"hljs-built_in\">sin</span>(x/<span class=\"hljs-number\">7</span>);<br>\t<span class=\"hljs-type\">int</span> y1=(<span class=\"hljs-type\">int</span>)(<span class=\"hljs-number\">15</span>-y);<br>\t<span class=\"hljs-keyword\">return</span> y1;<br>&#125;<br><br><span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">heng</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> i)</span><span class=\"hljs-comment\">//横坐标j</span><br>&#123;<br>\t<span class=\"hljs-type\">int</span> j=i;<br>\t<span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">101</span>&amp;&amp;i&lt;=<span class=\"hljs-number\">202</span>)j=<span class=\"hljs-number\">203</span>-i;<br>\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">202</span>&amp;&amp;i&lt;=<span class=\"hljs-number\">303</span>)j=i<span class=\"hljs-number\">-202</span>;<br>\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">303</span>&amp;&amp;i&lt;=<span class=\"hljs-number\">404</span>)j=<span class=\"hljs-number\">405</span>-i;<br>\t<span class=\"hljs-keyword\">return</span> j;<br>&#125;<br><br><span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">dayin</span><span class=\"hljs-params\">(<span class=\"hljs-type\">char</span> ch,<span class=\"hljs-type\">int</span> j,<span class=\"hljs-type\">int</span> y1)</span><span class=\"hljs-comment\">//在(y1,j)处输出给定字符</span><br>&#123;<br>\t\tgotoxy(y1,j);<br>\t\t<span class=\"hljs-keyword\">if</span>(ch==<span class=\"hljs-string\">&#x27; &#x27;</span>)<br>\t\t&#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span>(y1==<span class=\"hljs-number\">15</span>)<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;-&quot;</span>);<br>\t\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(j==<span class=\"hljs-number\">51</span>)<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;|&quot;</span>);<br>\t\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot; &quot;</span>);<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;#&quot;</span>);<br>\t\tgotoxy(<span class=\"hljs-number\">29</span>-y1,<span class=\"hljs-number\">102</span>-j);<br>\t\t<span class=\"hljs-keyword\">if</span>(ch==<span class=\"hljs-string\">&#x27; &#x27;</span>)<span class=\"hljs-comment\">//防止坐标点和坐标轴被空格覆盖</span><br>\t\t&#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span>(<span class=\"hljs-number\">29</span>-y1==<span class=\"hljs-number\">15</span>)<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;-&quot;</span>);<br>\t\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-number\">102</span>-j==<span class=\"hljs-number\">51</span>)<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;|&quot;</span>);<br>\t\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-number\">29</span>-y1==<span class=\"hljs-number\">26</span>&amp;&amp;<span class=\"hljs-number\">102</span>-j==<span class=\"hljs-number\">49</span>)<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;-&quot;</span>);<br>\t\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>((<span class=\"hljs-number\">29</span>-y1==<span class=\"hljs-number\">26</span>&amp;&amp;<span class=\"hljs-number\">102</span>-j==<span class=\"hljs-number\">50</span>)||(<span class=\"hljs-number\">29</span>-y1==<span class=\"hljs-number\">3</span>&amp;&amp;<span class=\"hljs-number\">102</span>-j==<span class=\"hljs-number\">50</span>))<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;1&quot;</span>);<br>\t\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-number\">29</span>-y1==<span class=\"hljs-number\">16</span>&amp;&amp;<span class=\"hljs-number\">102</span>-j==<span class=\"hljs-number\">100</span>)<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;X&quot;</span>);<br>\t\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot; &quot;</span>);<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;#&quot;</span>);<br>\t\tgotoxy(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>);<br>&#125;<br><br><br><br><br><span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span><br>&#123;<br>\t<span class=\"hljs-type\">float</span> x,y;<br>\t<span class=\"hljs-type\">int</span> tim=<span class=\"hljs-number\">20</span>;<br>\tsystem(<span class=\"hljs-string\">&quot;color F0&quot;</span>);<br>\tsystem(<span class=\"hljs-string\">&quot;mode con cols=101 lines=30&quot;</span>);<br>\tclear();<br>\t<br>\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;=<span class=\"hljs-number\">100</span>;i++)<span class=\"hljs-comment\">//打印x轴 </span><br>\t&#123;<br>\t\tgotoxy(<span class=\"hljs-number\">15</span>,i+<span class=\"hljs-number\">1</span>);<br>\t\t<span class=\"hljs-keyword\">if</span>(i!=<span class=\"hljs-number\">50</span>)<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;-&quot;</span>);<br>\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;+&quot;</span>);<br>\t\tgotoxy(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>);<br>\t\trest(<span class=\"hljs-number\">1</span>);<br>\t&#125;<br>\t<br>\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i=<span class=\"hljs-number\">29</span>;i&gt;=<span class=\"hljs-number\">0</span>;i--)<span class=\"hljs-comment\">//打印y轴 </span><br>\t&#123;<br>\t\tgotoxy(i+<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">51</span>);<br>\t\t<span class=\"hljs-keyword\">if</span>(i!=<span class=\"hljs-number\">14</span>)<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;|&quot;</span>);<br>\t\tgotoxy(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>); <br>\t\trest(<span class=\"hljs-number\">1</span>);<br>\t&#125;<br>\t<span class=\"hljs-comment\">//打印轴上的点</span><br>\tgotoxy(<span class=\"hljs-number\">16</span>,<span class=\"hljs-number\">52</span>); <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;O&quot;</span>);<br>\t<br>\tgotoxy(<span class=\"hljs-number\">16</span>,<span class=\"hljs-number\">100</span>);<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;X&quot;</span>);<br>\t<br>\tgotoxy(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">49</span>);<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Y&quot;</span>);<br>\t<br>\tgotoxy(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">50</span>);<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;1&quot;</span>);<br>\t<br>\tgotoxy(<span class=\"hljs-number\">26</span>,<span class=\"hljs-number\">49</span>);<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;-1&quot;</span>);<br>\t<br>\t<br>\t<br>\t<br>\t<span class=\"hljs-type\">int</span> i=<span class=\"hljs-number\">0</span>,j,y1;<br><br>\t<span class=\"hljs-keyword\">for</span>(i=<span class=\"hljs-number\">52</span>;i&lt;=<span class=\"hljs-number\">404</span>;i++)<span class=\"hljs-comment\">//打印函数 </span><br>\t&#123;<br>\t\tj=heng(i),y1=zong(i);<br>\t\tdayin(<span class=\"hljs-string\">&#x27;#&#x27;</span>,j,y1);<br>\t\trest(<span class=\"hljs-number\">4</span>);<br>\t\t<br>\t\t<span class=\"hljs-keyword\">if</span>(i<span class=\"hljs-number\">-51</span>-tim&gt;<span class=\"hljs-number\">0</span>)<br>\t\t&#123;<br>\t\t\ty1=zong(i-tim);<br>\t\t\tj=heng(i-tim);<br>\t\t\tdayin(<span class=\"hljs-string\">&#x27; &#x27;</span>,j,y1);<br>\t\t&#125;<br>\t&#125;\t<br>\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> r=i-tim;r&lt;=i;r++)<br>\t&#123;<br>\t\tj=heng(r);<br>\t\ty1=zong(r);<br>\t\tdayin(<span class=\"hljs-string\">&#x27; &#x27;</span>,j,y1);<br>\t\trest(<span class=\"hljs-number\">4</span>);<br>\t&#125; <br>\tgotoxy(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>);<br>\trest(<span class=\"hljs-number\">1000</span>);<br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>"},{"title":"大一C语言大作业：五子棋（总结）","date":"2022-02-25T16:00:00.000Z","_content":"\n# 计算与设计思维大作业\n\n这次看了几位大佬的做法，我们也做了很多修改尝试。算是第一次尝试合作完成项目。\n我认为学到的东西：\n\n1. 第一次尝试写项目，把函数分到不同的.c文件中后更好看了一些。\n2. 在研究过程中应该分清主次。代码正确运行才是基础要求，其他什么美化界面，调字体调颜色都并非重点。（8月4日更新：评价算法的五个特性，正确性，简明性，健壮性，效率，最优性）\n3. 从代码中学到的，①是采用落子数来判断该轮到黑方下还是白方下（落子数为2的倍数时黑方下，否则白方下），这样也能判断出是哪一方胜利，而且落子数还可以判断棋盘是否下满（==16*16时棋盘落满，平局） ②是胜利条件的判断，以中间子为参考，看两边的四个子是否和他颜色相同。\n4. 8月4日更新：在这次尝试中在文件中使用了全局变量，不同文件中用extern调用。但是在后来学习中意识到全局变量最好不要写在文件里，会增加耦合性。以后多人合作写不同函数的时候也要注意，尽量不要出现。\n\n## 规则\n\n在一个16\\*16的棋盘上，黑白双方交替落子，每次落下子后如果棋盘上出现了五个同色棋子横向/竖向/斜向连接，则该方胜利。如果在棋盘下满后（即下了16\\*16个子后）仍未分出胜负，则为平局。\n\n## 逻辑\n\n初始化棋盘，是一个`16*16`的二维数组（定义宏 N=16），一开始每一格都初始化为0。用一个不断++的落子数变量%2来判断本回合是黑方下还是白方下，；每次玩家输入横纵坐标，该处的变量值改变（黑子为1，白子为2）。每次落子判断全盘是否有五子连珠，如果有则结束游戏，如果没有则继续下。当落子数达到`N*N`即棋盘下满，还没有出现五子连珠时，则判断为平局，结束游戏。\n\n## 五子棋胜负条件判断\n\n判断原理 :\n胜负的判断是在每颗棋子落下之后进行，所以用这一子的坐标为基准前后左右斜各个方向来看是否取胜。\n具体思想:\n按照五子棋规则，当一方的棋子，在横向，纵向或斜向连续五个均为同一用户的棋子时，代表胜利。\n另外，胜利判断只需要在一个新子落子时判断，且仅需要判断新子所在的四条线上(纵横加两个斜线)是否满足条件即可。\n所以，可以以新子坐标为基准点，判断四次。\n比如横向的，需要判断左侧和右侧连续的同类棋子个数，如果左侧+右侧+1（自身）总数>=5，则为胜利。\n在判断胜利的时候,首先我们要排除空子的情况,然后当两个斜线的时候, 无胜情况下，判断直线,当为两斜线及直线无胜情况下，判断横线。\n参考代码如下：\n\n```c\nint win()\n{\n\textern int arr[100][100];\n\tint k = 0,l = 0;\n\tint flag = 0; \n\tfor(k=2;k<N-2;k++) \n\t\tfor(l=2;l<N-2;l++)\n\t\t{\n\t\t\tif(arr[k][l]!=0&&arr[k-2][l-2]==arr[k][l]&&arr[k-1][l-1]==arr[k][l]&&arr[k+1][l+1]==arr[k][l]&&arr[k+2][l+2]==arr[k][l])\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(arr[k][l]!=0&&arr[k+2][l-2]==arr[k][l]&&arr[k+1][l-1]==arr[k][l]&&arr[k-1][l+1]==arr[k][l]&&arr[k-2][l+2]==arr[k][l])\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\tif(flag==0) \n\t\tfor(k=0;k<N;k++)\n\t\t\tfor(l=2;l<N-2;l++)\n\t\t\t{\n\t\t\t\tif(arr[k][l]!=0&&arr[k][l-2]==arr[k][l]&&arr[k][l-1]==arr[k][l]&&arr[k][l+1]==arr[k][l]&&arr[k][l+2]==arr[k][l])\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\tif(flag==0) \n\t\tfor(k=2;k<N-2;k++)\n\t\t\tfor(l=0;l<N;l++)\n\t\t\t{\n\t\t\t\tif(arr[k][l]!=0&&arr[k+2][l]==arr[k][l]&&arr[k+1][l]==arr[k][l]&&arr[k-1][l]==arr[k][l]&&arr[k-2][l]==arr[k][l])\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\treturn flag; \n}\n```\n\n注:\n1.\t中的arr[k][l]!=0是排除空子的情况。\n2.\t最后返回判断结果时, 有胜为1,无为0,谁胜无必要判断，因为，谁尾手了的一定是胜的。\n### 演示\n开始\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/ae0a75087855494bbde21f978da69805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70)\n\n\n输入坐标\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/d5998cff325649e6b674ed2a6051b673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70)\n\n\n\n\n\n第二回合\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/20f9995d17b04e17979f8fdc73b65363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70)\n\n游戏结束\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/500ed64c7833490abfece68802bb8c84.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70)","source":"_posts/大一C语言大作业 五子棋（总结）.md","raw":"---\ntitle: 大一C语言大作业：五子棋（总结）\ndate: 2022-02-26\ntags: homework\ncategory: course\n---\n\n# 计算与设计思维大作业\n\n这次看了几位大佬的做法，我们也做了很多修改尝试。算是第一次尝试合作完成项目。\n我认为学到的东西：\n\n1. 第一次尝试写项目，把函数分到不同的.c文件中后更好看了一些。\n2. 在研究过程中应该分清主次。代码正确运行才是基础要求，其他什么美化界面，调字体调颜色都并非重点。（8月4日更新：评价算法的五个特性，正确性，简明性，健壮性，效率，最优性）\n3. 从代码中学到的，①是采用落子数来判断该轮到黑方下还是白方下（落子数为2的倍数时黑方下，否则白方下），这样也能判断出是哪一方胜利，而且落子数还可以判断棋盘是否下满（==16*16时棋盘落满，平局） ②是胜利条件的判断，以中间子为参考，看两边的四个子是否和他颜色相同。\n4. 8月4日更新：在这次尝试中在文件中使用了全局变量，不同文件中用extern调用。但是在后来学习中意识到全局变量最好不要写在文件里，会增加耦合性。以后多人合作写不同函数的时候也要注意，尽量不要出现。\n\n## 规则\n\n在一个16\\*16的棋盘上，黑白双方交替落子，每次落下子后如果棋盘上出现了五个同色棋子横向/竖向/斜向连接，则该方胜利。如果在棋盘下满后（即下了16\\*16个子后）仍未分出胜负，则为平局。\n\n## 逻辑\n\n初始化棋盘，是一个`16*16`的二维数组（定义宏 N=16），一开始每一格都初始化为0。用一个不断++的落子数变量%2来判断本回合是黑方下还是白方下，；每次玩家输入横纵坐标，该处的变量值改变（黑子为1，白子为2）。每次落子判断全盘是否有五子连珠，如果有则结束游戏，如果没有则继续下。当落子数达到`N*N`即棋盘下满，还没有出现五子连珠时，则判断为平局，结束游戏。\n\n## 五子棋胜负条件判断\n\n判断原理 :\n胜负的判断是在每颗棋子落下之后进行，所以用这一子的坐标为基准前后左右斜各个方向来看是否取胜。\n具体思想:\n按照五子棋规则，当一方的棋子，在横向，纵向或斜向连续五个均为同一用户的棋子时，代表胜利。\n另外，胜利判断只需要在一个新子落子时判断，且仅需要判断新子所在的四条线上(纵横加两个斜线)是否满足条件即可。\n所以，可以以新子坐标为基准点，判断四次。\n比如横向的，需要判断左侧和右侧连续的同类棋子个数，如果左侧+右侧+1（自身）总数>=5，则为胜利。\n在判断胜利的时候,首先我们要排除空子的情况,然后当两个斜线的时候, 无胜情况下，判断直线,当为两斜线及直线无胜情况下，判断横线。\n参考代码如下：\n\n```c\nint win()\n{\n\textern int arr[100][100];\n\tint k = 0,l = 0;\n\tint flag = 0; \n\tfor(k=2;k<N-2;k++) \n\t\tfor(l=2;l<N-2;l++)\n\t\t{\n\t\t\tif(arr[k][l]!=0&&arr[k-2][l-2]==arr[k][l]&&arr[k-1][l-1]==arr[k][l]&&arr[k+1][l+1]==arr[k][l]&&arr[k+2][l+2]==arr[k][l])\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(arr[k][l]!=0&&arr[k+2][l-2]==arr[k][l]&&arr[k+1][l-1]==arr[k][l]&&arr[k-1][l+1]==arr[k][l]&&arr[k-2][l+2]==arr[k][l])\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\tif(flag==0) \n\t\tfor(k=0;k<N;k++)\n\t\t\tfor(l=2;l<N-2;l++)\n\t\t\t{\n\t\t\t\tif(arr[k][l]!=0&&arr[k][l-2]==arr[k][l]&&arr[k][l-1]==arr[k][l]&&arr[k][l+1]==arr[k][l]&&arr[k][l+2]==arr[k][l])\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\tif(flag==0) \n\t\tfor(k=2;k<N-2;k++)\n\t\t\tfor(l=0;l<N;l++)\n\t\t\t{\n\t\t\t\tif(arr[k][l]!=0&&arr[k+2][l]==arr[k][l]&&arr[k+1][l]==arr[k][l]&&arr[k-1][l]==arr[k][l]&&arr[k-2][l]==arr[k][l])\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\treturn flag; \n}\n```\n\n注:\n1.\t中的arr[k][l]!=0是排除空子的情况。\n2.\t最后返回判断结果时, 有胜为1,无为0,谁胜无必要判断，因为，谁尾手了的一定是胜的。\n### 演示\n开始\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/ae0a75087855494bbde21f978da69805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70)\n\n\n输入坐标\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/d5998cff325649e6b674ed2a6051b673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70)\n\n\n\n\n\n第二回合\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/20f9995d17b04e17979f8fdc73b65363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70)\n\n游戏结束\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/500ed64c7833490abfece68802bb8c84.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70)","slug":"大一C语言大作业 五子棋（总结）","published":1,"updated":"2022-04-18T03:36:05.639Z","_id":"cl03y1b0800003wv2hx8mg9y2","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"计算与设计思维大作业\"><a href=\"#计算与设计思维大作业\" class=\"headerlink\" title=\"计算与设计思维大作业\"></a>计算与设计思维大作业</h1><p>这次看了几位大佬的做法，我们也做了很多修改尝试。算是第一次尝试合作完成项目。<br>我认为学到的东西：</p>\n<ol>\n<li>第一次尝试写项目，把函数分到不同的.c文件中后更好看了一些。</li>\n<li>在研究过程中应该分清主次。代码正确运行才是基础要求，其他什么美化界面，调字体调颜色都并非重点。（8月4日更新：评价算法的五个特性，正确性，简明性，健壮性，效率，最优性）</li>\n<li>从代码中学到的，①是采用落子数来判断该轮到黑方下还是白方下（落子数为2的倍数时黑方下，否则白方下），这样也能判断出是哪一方胜利，而且落子数还可以判断棋盘是否下满（==16*16时棋盘落满，平局） ②是胜利条件的判断，以中间子为参考，看两边的四个子是否和他颜色相同。</li>\n<li>8月4日更新：在这次尝试中在文件中使用了全局变量，不同文件中用extern调用。但是在后来学习中意识到全局变量最好不要写在文件里，会增加耦合性。以后多人合作写不同函数的时候也要注意，尽量不要出现。</li>\n</ol>\n<h2 id=\"规则\"><a href=\"#规则\" class=\"headerlink\" title=\"规则\"></a>规则</h2><p>在一个16*16的棋盘上，黑白双方交替落子，每次落下子后如果棋盘上出现了五个同色棋子横向/竖向/斜向连接，则该方胜利。如果在棋盘下满后（即下了16*16个子后）仍未分出胜负，则为平局。</p>\n<h2 id=\"逻辑\"><a href=\"#逻辑\" class=\"headerlink\" title=\"逻辑\"></a>逻辑</h2><p>初始化棋盘，是一个<code>16*16</code>的二维数组（定义宏 N=16），一开始每一格都初始化为0。用一个不断++的落子数变量%2来判断本回合是黑方下还是白方下，；每次玩家输入横纵坐标，该处的变量值改变（黑子为1，白子为2）。每次落子判断全盘是否有五子连珠，如果有则结束游戏，如果没有则继续下。当落子数达到<code>N*N</code>即棋盘下满，还没有出现五子连珠时，则判断为平局，结束游戏。</p>\n<h2 id=\"五子棋胜负条件判断\"><a href=\"#五子棋胜负条件判断\" class=\"headerlink\" title=\"五子棋胜负条件判断\"></a>五子棋胜负条件判断</h2><p>判断原理 :<br>胜负的判断是在每颗棋子落下之后进行，所以用这一子的坐标为基准前后左右斜各个方向来看是否取胜。<br>具体思想:<br>按照五子棋规则，当一方的棋子，在横向，纵向或斜向连续五个均为同一用户的棋子时，代表胜利。<br>另外，胜利判断只需要在一个新子落子时判断，且仅需要判断新子所在的四条线上(纵横加两个斜线)是否满足条件即可。<br>所以，可以以新子坐标为基准点，判断四次。<br>比如横向的，需要判断左侧和右侧连续的同类棋子个数，如果左侧+右侧+1（自身）总数&gt;=5，则为胜利。<br>在判断胜利的时候,首先我们要排除空子的情况,然后当两个斜线的时候, 无胜情况下，判断直线,当为两斜线及直线无胜情况下，判断横线。<br>参考代码如下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">win</span><span class=\"hljs-params\">()</span><br>&#123;<br>\t<span class=\"hljs-keyword\">extern</span> <span class=\"hljs-type\">int</span> arr[<span class=\"hljs-number\">100</span>][<span class=\"hljs-number\">100</span>];<br>\t<span class=\"hljs-type\">int</span> k = <span class=\"hljs-number\">0</span>,l = <span class=\"hljs-number\">0</span>;<br>\t<span class=\"hljs-type\">int</span> flag = <span class=\"hljs-number\">0</span>; <br>\t<span class=\"hljs-keyword\">for</span>(k=<span class=\"hljs-number\">2</span>;k&lt;N<span class=\"hljs-number\">-2</span>;k++) <br>\t\t<span class=\"hljs-keyword\">for</span>(l=<span class=\"hljs-number\">2</span>;l&lt;N<span class=\"hljs-number\">-2</span>;l++)<br>\t\t&#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span>(arr[k][l]!=<span class=\"hljs-number\">0</span>&amp;&amp;arr[k<span class=\"hljs-number\">-2</span>][l<span class=\"hljs-number\">-2</span>]==arr[k][l]&amp;&amp;arr[k<span class=\"hljs-number\">-1</span>][l<span class=\"hljs-number\">-1</span>]==arr[k][l]&amp;&amp;arr[k+<span class=\"hljs-number\">1</span>][l+<span class=\"hljs-number\">1</span>]==arr[k][l]&amp;&amp;arr[k+<span class=\"hljs-number\">2</span>][l+<span class=\"hljs-number\">2</span>]==arr[k][l])<br>\t\t\t&#123;<br>\t\t\t\tflag=<span class=\"hljs-number\">1</span>;<br>\t\t\t\t<span class=\"hljs-keyword\">break</span>;<br>\t\t\t&#125;<br>\t\t\t<span class=\"hljs-keyword\">if</span>(arr[k][l]!=<span class=\"hljs-number\">0</span>&amp;&amp;arr[k+<span class=\"hljs-number\">2</span>][l<span class=\"hljs-number\">-2</span>]==arr[k][l]&amp;&amp;arr[k+<span class=\"hljs-number\">1</span>][l<span class=\"hljs-number\">-1</span>]==arr[k][l]&amp;&amp;arr[k<span class=\"hljs-number\">-1</span>][l+<span class=\"hljs-number\">1</span>]==arr[k][l]&amp;&amp;arr[k<span class=\"hljs-number\">-2</span>][l+<span class=\"hljs-number\">2</span>]==arr[k][l])<br>\t\t\t&#123;<br>\t\t\t\tflag=<span class=\"hljs-number\">1</span>;<br>\t\t\t\t<span class=\"hljs-keyword\">break</span>;<br>\t\t\t&#125;<br>\t\t&#125;<br>\t<span class=\"hljs-keyword\">if</span>(flag==<span class=\"hljs-number\">0</span>) <br>\t\t<span class=\"hljs-keyword\">for</span>(k=<span class=\"hljs-number\">0</span>;k&lt;N;k++)<br>\t\t\t<span class=\"hljs-keyword\">for</span>(l=<span class=\"hljs-number\">2</span>;l&lt;N<span class=\"hljs-number\">-2</span>;l++)<br>\t\t\t&#123;<br>\t\t\t\t<span class=\"hljs-keyword\">if</span>(arr[k][l]!=<span class=\"hljs-number\">0</span>&amp;&amp;arr[k][l<span class=\"hljs-number\">-2</span>]==arr[k][l]&amp;&amp;arr[k][l<span class=\"hljs-number\">-1</span>]==arr[k][l]&amp;&amp;arr[k][l+<span class=\"hljs-number\">1</span>]==arr[k][l]&amp;&amp;arr[k][l+<span class=\"hljs-number\">2</span>]==arr[k][l])<br>\t\t\t\t&#123;<br>\t\t\t\t\tflag=<span class=\"hljs-number\">1</span>;<br>\t\t\t\t\t<span class=\"hljs-keyword\">break</span>;<br>\t\t\t\t&#125;<br>\t\t\t&#125;<br>\t<span class=\"hljs-keyword\">if</span>(flag==<span class=\"hljs-number\">0</span>) <br>\t\t<span class=\"hljs-keyword\">for</span>(k=<span class=\"hljs-number\">2</span>;k&lt;N<span class=\"hljs-number\">-2</span>;k++)<br>\t\t\t<span class=\"hljs-keyword\">for</span>(l=<span class=\"hljs-number\">0</span>;l&lt;N;l++)<br>\t\t\t&#123;<br>\t\t\t\t<span class=\"hljs-keyword\">if</span>(arr[k][l]!=<span class=\"hljs-number\">0</span>&amp;&amp;arr[k+<span class=\"hljs-number\">2</span>][l]==arr[k][l]&amp;&amp;arr[k+<span class=\"hljs-number\">1</span>][l]==arr[k][l]&amp;&amp;arr[k<span class=\"hljs-number\">-1</span>][l]==arr[k][l]&amp;&amp;arr[k<span class=\"hljs-number\">-2</span>][l]==arr[k][l])<br>\t\t\t\t&#123;<br>\t\t\t\t\tflag=<span class=\"hljs-number\">1</span>;<br>\t\t\t\t\t<span class=\"hljs-keyword\">break</span>;<br>\t\t\t\t&#125;<br>\t\t\t&#125;<br>\t<span class=\"hljs-keyword\">return</span> flag; <br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>注:</p>\n<ol>\n<li>   中的arr[k][l]!=0是排除空子的情况。</li>\n<li>最后返回判断结果时, 有胜为1,无为0,谁胜无必要判断，因为，谁尾手了的一定是胜的。<h3 id=\"演示\"><a href=\"#演示\" class=\"headerlink\" title=\"演示\"></a>演示</h3>开始<br><img src=\"https://img-blog.csdnimg.cn/ae0a75087855494bbde21f978da69805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ol>\n<p>输入坐标<br> <img src=\"https://img-blog.csdnimg.cn/d5998cff325649e6b674ed2a6051b673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>第二回合<br> <img src=\"https://img-blog.csdnimg.cn/20f9995d17b04e17979f8fdc73b65363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>游戏结束<br> <img src=\"https://img-blog.csdnimg.cn/500ed64c7833490abfece68802bb8c84.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"计算与设计思维大作业\"><a href=\"#计算与设计思维大作业\" class=\"headerlink\" title=\"计算与设计思维大作业\"></a>计算与设计思维大作业</h1><p>这次看了几位大佬的做法，我们也做了很多修改尝试。算是第一次尝试合作完成项目。<br>我认为学到的东西：</p>\n<ol>\n<li>第一次尝试写项目，把函数分到不同的.c文件中后更好看了一些。</li>\n<li>在研究过程中应该分清主次。代码正确运行才是基础要求，其他什么美化界面，调字体调颜色都并非重点。（8月4日更新：评价算法的五个特性，正确性，简明性，健壮性，效率，最优性）</li>\n<li>从代码中学到的，①是采用落子数来判断该轮到黑方下还是白方下（落子数为2的倍数时黑方下，否则白方下），这样也能判断出是哪一方胜利，而且落子数还可以判断棋盘是否下满（==16*16时棋盘落满，平局） ②是胜利条件的判断，以中间子为参考，看两边的四个子是否和他颜色相同。</li>\n<li>8月4日更新：在这次尝试中在文件中使用了全局变量，不同文件中用extern调用。但是在后来学习中意识到全局变量最好不要写在文件里，会增加耦合性。以后多人合作写不同函数的时候也要注意，尽量不要出现。</li>\n</ol>\n<h2 id=\"规则\"><a href=\"#规则\" class=\"headerlink\" title=\"规则\"></a>规则</h2><p>在一个16*16的棋盘上，黑白双方交替落子，每次落下子后如果棋盘上出现了五个同色棋子横向/竖向/斜向连接，则该方胜利。如果在棋盘下满后（即下了16*16个子后）仍未分出胜负，则为平局。</p>\n<h2 id=\"逻辑\"><a href=\"#逻辑\" class=\"headerlink\" title=\"逻辑\"></a>逻辑</h2><p>初始化棋盘，是一个<code>16*16</code>的二维数组（定义宏 N=16），一开始每一格都初始化为0。用一个不断++的落子数变量%2来判断本回合是黑方下还是白方下，；每次玩家输入横纵坐标，该处的变量值改变（黑子为1，白子为2）。每次落子判断全盘是否有五子连珠，如果有则结束游戏，如果没有则继续下。当落子数达到<code>N*N</code>即棋盘下满，还没有出现五子连珠时，则判断为平局，结束游戏。</p>\n<h2 id=\"五子棋胜负条件判断\"><a href=\"#五子棋胜负条件判断\" class=\"headerlink\" title=\"五子棋胜负条件判断\"></a>五子棋胜负条件判断</h2><p>判断原理 :<br>胜负的判断是在每颗棋子落下之后进行，所以用这一子的坐标为基准前后左右斜各个方向来看是否取胜。<br>具体思想:<br>按照五子棋规则，当一方的棋子，在横向，纵向或斜向连续五个均为同一用户的棋子时，代表胜利。<br>另外，胜利判断只需要在一个新子落子时判断，且仅需要判断新子所在的四条线上(纵横加两个斜线)是否满足条件即可。<br>所以，可以以新子坐标为基准点，判断四次。<br>比如横向的，需要判断左侧和右侧连续的同类棋子个数，如果左侧+右侧+1（自身）总数&gt;=5，则为胜利。<br>在判断胜利的时候,首先我们要排除空子的情况,然后当两个斜线的时候, 无胜情况下，判断直线,当为两斜线及直线无胜情况下，判断横线。<br>参考代码如下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">win</span><span class=\"hljs-params\">()</span><br>&#123;<br>\t<span class=\"hljs-keyword\">extern</span> <span class=\"hljs-type\">int</span> arr[<span class=\"hljs-number\">100</span>][<span class=\"hljs-number\">100</span>];<br>\t<span class=\"hljs-type\">int</span> k = <span class=\"hljs-number\">0</span>,l = <span class=\"hljs-number\">0</span>;<br>\t<span class=\"hljs-type\">int</span> flag = <span class=\"hljs-number\">0</span>; <br>\t<span class=\"hljs-keyword\">for</span>(k=<span class=\"hljs-number\">2</span>;k&lt;N<span class=\"hljs-number\">-2</span>;k++) <br>\t\t<span class=\"hljs-keyword\">for</span>(l=<span class=\"hljs-number\">2</span>;l&lt;N<span class=\"hljs-number\">-2</span>;l++)<br>\t\t&#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span>(arr[k][l]!=<span class=\"hljs-number\">0</span>&amp;&amp;arr[k<span class=\"hljs-number\">-2</span>][l<span class=\"hljs-number\">-2</span>]==arr[k][l]&amp;&amp;arr[k<span class=\"hljs-number\">-1</span>][l<span class=\"hljs-number\">-1</span>]==arr[k][l]&amp;&amp;arr[k+<span class=\"hljs-number\">1</span>][l+<span class=\"hljs-number\">1</span>]==arr[k][l]&amp;&amp;arr[k+<span class=\"hljs-number\">2</span>][l+<span class=\"hljs-number\">2</span>]==arr[k][l])<br>\t\t\t&#123;<br>\t\t\t\tflag=<span class=\"hljs-number\">1</span>;<br>\t\t\t\t<span class=\"hljs-keyword\">break</span>;<br>\t\t\t&#125;<br>\t\t\t<span class=\"hljs-keyword\">if</span>(arr[k][l]!=<span class=\"hljs-number\">0</span>&amp;&amp;arr[k+<span class=\"hljs-number\">2</span>][l<span class=\"hljs-number\">-2</span>]==arr[k][l]&amp;&amp;arr[k+<span class=\"hljs-number\">1</span>][l<span class=\"hljs-number\">-1</span>]==arr[k][l]&amp;&amp;arr[k<span class=\"hljs-number\">-1</span>][l+<span class=\"hljs-number\">1</span>]==arr[k][l]&amp;&amp;arr[k<span class=\"hljs-number\">-2</span>][l+<span class=\"hljs-number\">2</span>]==arr[k][l])<br>\t\t\t&#123;<br>\t\t\t\tflag=<span class=\"hljs-number\">1</span>;<br>\t\t\t\t<span class=\"hljs-keyword\">break</span>;<br>\t\t\t&#125;<br>\t\t&#125;<br>\t<span class=\"hljs-keyword\">if</span>(flag==<span class=\"hljs-number\">0</span>) <br>\t\t<span class=\"hljs-keyword\">for</span>(k=<span class=\"hljs-number\">0</span>;k&lt;N;k++)<br>\t\t\t<span class=\"hljs-keyword\">for</span>(l=<span class=\"hljs-number\">2</span>;l&lt;N<span class=\"hljs-number\">-2</span>;l++)<br>\t\t\t&#123;<br>\t\t\t\t<span class=\"hljs-keyword\">if</span>(arr[k][l]!=<span class=\"hljs-number\">0</span>&amp;&amp;arr[k][l<span class=\"hljs-number\">-2</span>]==arr[k][l]&amp;&amp;arr[k][l<span class=\"hljs-number\">-1</span>]==arr[k][l]&amp;&amp;arr[k][l+<span class=\"hljs-number\">1</span>]==arr[k][l]&amp;&amp;arr[k][l+<span class=\"hljs-number\">2</span>]==arr[k][l])<br>\t\t\t\t&#123;<br>\t\t\t\t\tflag=<span class=\"hljs-number\">1</span>;<br>\t\t\t\t\t<span class=\"hljs-keyword\">break</span>;<br>\t\t\t\t&#125;<br>\t\t\t&#125;<br>\t<span class=\"hljs-keyword\">if</span>(flag==<span class=\"hljs-number\">0</span>) <br>\t\t<span class=\"hljs-keyword\">for</span>(k=<span class=\"hljs-number\">2</span>;k&lt;N<span class=\"hljs-number\">-2</span>;k++)<br>\t\t\t<span class=\"hljs-keyword\">for</span>(l=<span class=\"hljs-number\">0</span>;l&lt;N;l++)<br>\t\t\t&#123;<br>\t\t\t\t<span class=\"hljs-keyword\">if</span>(arr[k][l]!=<span class=\"hljs-number\">0</span>&amp;&amp;arr[k+<span class=\"hljs-number\">2</span>][l]==arr[k][l]&amp;&amp;arr[k+<span class=\"hljs-number\">1</span>][l]==arr[k][l]&amp;&amp;arr[k<span class=\"hljs-number\">-1</span>][l]==arr[k][l]&amp;&amp;arr[k<span class=\"hljs-number\">-2</span>][l]==arr[k][l])<br>\t\t\t\t&#123;<br>\t\t\t\t\tflag=<span class=\"hljs-number\">1</span>;<br>\t\t\t\t\t<span class=\"hljs-keyword\">break</span>;<br>\t\t\t\t&#125;<br>\t\t\t&#125;<br>\t<span class=\"hljs-keyword\">return</span> flag; <br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>注:</p>\n<ol>\n<li>   中的arr[k][l]!=0是排除空子的情况。</li>\n<li>最后返回判断结果时, 有胜为1,无为0,谁胜无必要判断，因为，谁尾手了的一定是胜的。<h3 id=\"演示\"><a href=\"#演示\" class=\"headerlink\" title=\"演示\"></a>演示</h3>开始<br><img src=\"https://img-blog.csdnimg.cn/ae0a75087855494bbde21f978da69805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ol>\n<p>输入坐标<br> <img src=\"https://img-blog.csdnimg.cn/d5998cff325649e6b674ed2a6051b673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>第二回合<br> <img src=\"https://img-blog.csdnimg.cn/20f9995d17b04e17979f8fdc73b65363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>游戏结束<br> <img src=\"https://img-blog.csdnimg.cn/500ed64c7833490abfece68802bb8c84.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"关于gets()和scanf()处理空白字符的问题","date":"2022-02-25T16:00:00.000Z","_content":"\n## scanf()\n\nscanf()如果读入字符、字符串，就要注意回车、空格、制表符（统称为空白符）的问题。\n字符还比较好处理，比如要输入abc三个字符，中间就直接不加入任何空白符，直接连着输入”abc”即可。\nscanf()使用%s读入字符串，读到空白符时会自动结束，所以不能读入英文句子(“hello world”中间有空格，一次只能读一个单词)\n想要读入带有空格的句子，一种方法是用scanf读入一个个字符串（单词）。字符串以空白符结尾，且当空白符在开头时%s是不会读取空白符的，会跳过这里的空白符（和scanf读入整数或浮点数时类似）\n```c\nscanf(\"%s%s\",str1,str2);//输入\"hello world\"\nprintf(\"%s%s\\n\",str1,str2);//输出\"helloworld\"\nprintf(\"%s %s\\n\",str1,str2);//输出\"hello world\"\n```\n只要补齐空格就可以了。当然这种方法用来读入输出英文句子时局限性很大，每个单词都要定义一个字符串变量（或许可以定义一个char的二维数组/指向char一维数组的指针/指向指针的指针），而且还要自己补空格。\n另一个有趣的地方是scanf()里可以放空格，意思是跳过这里的空白符。\n```c\nscanf(\"%s %s\",str1,str2);//输入\"hello world\"\nprintf(\"%s%s\\n\",str1,str2);//输出\"helloworld\"\n```\n如果还是上例，其实没有影响，因为就算scanf里没有这个空格，str2也会自动跳过开头的空格从后面的w开始读入。不过这种方法在读入字符的时候处理输入的空白符，以及下文中和gets()的结合中就比较有用。\n\n## gets()\n\ngets()就可以读入空白符，空格、回车、制表符都能读入，并且读入回车时结束。因此可以借助gets()读入英文短句式的字符串（带有空格）\n```c\ngets(str);//输入\"hello world\\n\"\nprintf(\"%s\",str);//输出\"hello world\"\n```\n但是要注意回车的问题。\n当gets()读入的第一个数据是回车，则停止继续读入，并且str的内容就是回车。\n当gets()读入\"hello world\\n\",回车是不会被gets()读入的，还留在缓冲区。\n所以连着使用两个gets()，而中间不想办法处理掉回车，就会出错。\n```c\ngets(str1);//abc\\n\ngets(str2);//abc\\n\ngets(str3);//abc\\n\n//输出的结果是：abc\\nabc,str2读到的是回车。\n```\n此时可以用getchar()读掉中间的回车。\n在做翁恺老师C语言程序设计的PTA习题时，碰到了这样一道题：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2bf40d6f06ca4f999f51eefe9bea5cfd.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70)\n要交替输入浮点数和带空格的字符串，一开始没有细想回车的问题：\n```c\n//循环执行：\nscanf(\"%lf\",book[i].price);//读入浮点数\ngets(books[i].name);//读入字符串\n```\n后来经一番查询理解了两种函数对空白符的处理，也写了这篇博文。\n这道题有趣的地方是scanf和gets的结合，因此除了getchar()读掉中间的回车的办法，还可以在scanf末尾加空格：\n```c\n//循环执行：\nscanf(\"%lf \",book[i].price);//读入浮点数，并读掉结尾的空白符（回车）\ngets(books[i].name);//读入字符串\n```\n非常巧妙。\n以上是本人经试验、查询资料后得出的结论，也欢迎读者多多尝试，如有错误，还请读者雅正！","source":"_posts/gets()和scanf()处理空白字符的问题.md","raw":"---\ntitle: 关于gets()和scanf()处理空白字符的问题\ndate: 2022-02-26\ntags: problems\ncategory: clanguage\n---\n\n## scanf()\n\nscanf()如果读入字符、字符串，就要注意回车、空格、制表符（统称为空白符）的问题。\n字符还比较好处理，比如要输入abc三个字符，中间就直接不加入任何空白符，直接连着输入”abc”即可。\nscanf()使用%s读入字符串，读到空白符时会自动结束，所以不能读入英文句子(“hello world”中间有空格，一次只能读一个单词)\n想要读入带有空格的句子，一种方法是用scanf读入一个个字符串（单词）。字符串以空白符结尾，且当空白符在开头时%s是不会读取空白符的，会跳过这里的空白符（和scanf读入整数或浮点数时类似）\n```c\nscanf(\"%s%s\",str1,str2);//输入\"hello world\"\nprintf(\"%s%s\\n\",str1,str2);//输出\"helloworld\"\nprintf(\"%s %s\\n\",str1,str2);//输出\"hello world\"\n```\n只要补齐空格就可以了。当然这种方法用来读入输出英文句子时局限性很大，每个单词都要定义一个字符串变量（或许可以定义一个char的二维数组/指向char一维数组的指针/指向指针的指针），而且还要自己补空格。\n另一个有趣的地方是scanf()里可以放空格，意思是跳过这里的空白符。\n```c\nscanf(\"%s %s\",str1,str2);//输入\"hello world\"\nprintf(\"%s%s\\n\",str1,str2);//输出\"helloworld\"\n```\n如果还是上例，其实没有影响，因为就算scanf里没有这个空格，str2也会自动跳过开头的空格从后面的w开始读入。不过这种方法在读入字符的时候处理输入的空白符，以及下文中和gets()的结合中就比较有用。\n\n## gets()\n\ngets()就可以读入空白符，空格、回车、制表符都能读入，并且读入回车时结束。因此可以借助gets()读入英文短句式的字符串（带有空格）\n```c\ngets(str);//输入\"hello world\\n\"\nprintf(\"%s\",str);//输出\"hello world\"\n```\n但是要注意回车的问题。\n当gets()读入的第一个数据是回车，则停止继续读入，并且str的内容就是回车。\n当gets()读入\"hello world\\n\",回车是不会被gets()读入的，还留在缓冲区。\n所以连着使用两个gets()，而中间不想办法处理掉回车，就会出错。\n```c\ngets(str1);//abc\\n\ngets(str2);//abc\\n\ngets(str3);//abc\\n\n//输出的结果是：abc\\nabc,str2读到的是回车。\n```\n此时可以用getchar()读掉中间的回车。\n在做翁恺老师C语言程序设计的PTA习题时，碰到了这样一道题：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2bf40d6f06ca4f999f51eefe9bea5cfd.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70)\n要交替输入浮点数和带空格的字符串，一开始没有细想回车的问题：\n```c\n//循环执行：\nscanf(\"%lf\",book[i].price);//读入浮点数\ngets(books[i].name);//读入字符串\n```\n后来经一番查询理解了两种函数对空白符的处理，也写了这篇博文。\n这道题有趣的地方是scanf和gets的结合，因此除了getchar()读掉中间的回车的办法，还可以在scanf末尾加空格：\n```c\n//循环执行：\nscanf(\"%lf \",book[i].price);//读入浮点数，并读掉结尾的空白符（回车）\ngets(books[i].name);//读入字符串\n```\n非常巧妙。\n以上是本人经试验、查询资料后得出的结论，也欢迎读者多多尝试，如有错误，还请读者雅正！","slug":"gets()和scanf()处理空白字符的问题","published":1,"updated":"2022-04-18T03:37:00.729Z","_id":"cl040g0kp0000r8v2920taes1","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"scanf\"><a href=\"#scanf\" class=\"headerlink\" title=\"scanf()\"></a>scanf()</h2><p>scanf()如果读入字符、字符串，就要注意回车、空格、制表符（统称为空白符）的问题。<br>字符还比较好处理，比如要输入abc三个字符，中间就直接不加入任何空白符，直接连着输入”abc”即可。<br>scanf()使用%s读入字符串，读到空白符时会自动结束，所以不能读入英文句子(“hello world”中间有空格，一次只能读一个单词)<br>想要读入带有空格的句子，一种方法是用scanf读入一个个字符串（单词）。字符串以空白符结尾，且当空白符在开头时%s是不会读取空白符的，会跳过这里的空白符（和scanf读入整数或浮点数时类似）</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%s%s&quot;</span>,str1,str2);<span class=\"hljs-comment\">//输入&quot;hello world&quot;</span><br><span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%s%s\\n&quot;</span>,str1,str2);<span class=\"hljs-comment\">//输出&quot;helloworld&quot;</span><br><span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%s %s\\n&quot;</span>,str1,str2);<span class=\"hljs-comment\">//输出&quot;hello world&quot;</span><br></code></pre></td></tr></table></figure>\n<p>只要补齐空格就可以了。当然这种方法用来读入输出英文句子时局限性很大，每个单词都要定义一个字符串变量（或许可以定义一个char的二维数组/指向char一维数组的指针/指向指针的指针），而且还要自己补空格。<br>另一个有趣的地方是scanf()里可以放空格，意思是跳过这里的空白符。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%s %s&quot;</span>,str1,str2);<span class=\"hljs-comment\">//输入&quot;hello world&quot;</span><br><span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%s%s\\n&quot;</span>,str1,str2);<span class=\"hljs-comment\">//输出&quot;helloworld&quot;</span><br></code></pre></td></tr></table></figure>\n<p>如果还是上例，其实没有影响，因为就算scanf里没有这个空格，str2也会自动跳过开头的空格从后面的w开始读入。不过这种方法在读入字符的时候处理输入的空白符，以及下文中和gets()的结合中就比较有用。</p>\n<h2 id=\"gets\"><a href=\"#gets\" class=\"headerlink\" title=\"gets()\"></a>gets()</h2><p>gets()就可以读入空白符，空格、回车、制表符都能读入，并且读入回车时结束。因此可以借助gets()读入英文短句式的字符串（带有空格）</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\">gets(str);<span class=\"hljs-comment\">//输入&quot;hello world\\n&quot;</span><br><span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%s&quot;</span>,str);<span class=\"hljs-comment\">//输出&quot;hello world&quot;</span><br></code></pre></td></tr></table></figure>\n<p>但是要注意回车的问题。<br>当gets()读入的第一个数据是回车，则停止继续读入，并且str的内容就是回车。<br>当gets()读入”hello world\\n”,回车是不会被gets()读入的，还留在缓冲区。<br>所以连着使用两个gets()，而中间不想办法处理掉回车，就会出错。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\">gets(str1);<span class=\"hljs-comment\">//abc\\n</span><br>gets(str2);<span class=\"hljs-comment\">//abc\\n</span><br>gets(str3);<span class=\"hljs-comment\">//abc\\n</span><br><span class=\"hljs-comment\">//输出的结果是：abc\\nabc,str2读到的是回车。</span><br></code></pre></td></tr></table></figure>\n<p>此时可以用getchar()读掉中间的回车。<br>在做翁恺老师C语言程序设计的PTA习题时，碰到了这样一道题：<br><img src=\"https://img-blog.csdnimg.cn/2bf40d6f06ca4f999f51eefe9bea5cfd.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>要交替输入浮点数和带空格的字符串，一开始没有细想回车的问题：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-comment\">//循环执行：</span><br><span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%lf&quot;</span>,book[i].price);<span class=\"hljs-comment\">//读入浮点数</span><br>gets(books[i].name);<span class=\"hljs-comment\">//读入字符串</span><br></code></pre></td></tr></table></figure>\n<p>后来经一番查询理解了两种函数对空白符的处理，也写了这篇博文。<br>这道题有趣的地方是scanf和gets的结合，因此除了getchar()读掉中间的回车的办法，还可以在scanf末尾加空格：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-comment\">//循环执行：</span><br><span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%lf &quot;</span>,book[i].price);<span class=\"hljs-comment\">//读入浮点数，并读掉结尾的空白符（回车）</span><br>gets(books[i].name);<span class=\"hljs-comment\">//读入字符串</span><br></code></pre></td></tr></table></figure>\n<p>非常巧妙。<br>以上是本人经试验、查询资料后得出的结论，也欢迎读者多多尝试，如有错误，还请读者雅正！</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"scanf\"><a href=\"#scanf\" class=\"headerlink\" title=\"scanf()\"></a>scanf()</h2><p>scanf()如果读入字符、字符串，就要注意回车、空格、制表符（统称为空白符）的问题。<br>字符还比较好处理，比如要输入abc三个字符，中间就直接不加入任何空白符，直接连着输入”abc”即可。<br>scanf()使用%s读入字符串，读到空白符时会自动结束，所以不能读入英文句子(“hello world”中间有空格，一次只能读一个单词)<br>想要读入带有空格的句子，一种方法是用scanf读入一个个字符串（单词）。字符串以空白符结尾，且当空白符在开头时%s是不会读取空白符的，会跳过这里的空白符（和scanf读入整数或浮点数时类似）</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%s%s&quot;</span>,str1,str2);<span class=\"hljs-comment\">//输入&quot;hello world&quot;</span><br><span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%s%s\\n&quot;</span>,str1,str2);<span class=\"hljs-comment\">//输出&quot;helloworld&quot;</span><br><span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%s %s\\n&quot;</span>,str1,str2);<span class=\"hljs-comment\">//输出&quot;hello world&quot;</span><br></code></pre></td></tr></table></figure>\n<p>只要补齐空格就可以了。当然这种方法用来读入输出英文句子时局限性很大，每个单词都要定义一个字符串变量（或许可以定义一个char的二维数组/指向char一维数组的指针/指向指针的指针），而且还要自己补空格。<br>另一个有趣的地方是scanf()里可以放空格，意思是跳过这里的空白符。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%s %s&quot;</span>,str1,str2);<span class=\"hljs-comment\">//输入&quot;hello world&quot;</span><br><span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%s%s\\n&quot;</span>,str1,str2);<span class=\"hljs-comment\">//输出&quot;helloworld&quot;</span><br></code></pre></td></tr></table></figure>\n<p>如果还是上例，其实没有影响，因为就算scanf里没有这个空格，str2也会自动跳过开头的空格从后面的w开始读入。不过这种方法在读入字符的时候处理输入的空白符，以及下文中和gets()的结合中就比较有用。</p>\n<h2 id=\"gets\"><a href=\"#gets\" class=\"headerlink\" title=\"gets()\"></a>gets()</h2><p>gets()就可以读入空白符，空格、回车、制表符都能读入，并且读入回车时结束。因此可以借助gets()读入英文短句式的字符串（带有空格）</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\">gets(str);<span class=\"hljs-comment\">//输入&quot;hello world\\n&quot;</span><br><span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%s&quot;</span>,str);<span class=\"hljs-comment\">//输出&quot;hello world&quot;</span><br></code></pre></td></tr></table></figure>\n<p>但是要注意回车的问题。<br>当gets()读入的第一个数据是回车，则停止继续读入，并且str的内容就是回车。<br>当gets()读入”hello world\\n”,回车是不会被gets()读入的，还留在缓冲区。<br>所以连着使用两个gets()，而中间不想办法处理掉回车，就会出错。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\">gets(str1);<span class=\"hljs-comment\">//abc\\n</span><br>gets(str2);<span class=\"hljs-comment\">//abc\\n</span><br>gets(str3);<span class=\"hljs-comment\">//abc\\n</span><br><span class=\"hljs-comment\">//输出的结果是：abc\\nabc,str2读到的是回车。</span><br></code></pre></td></tr></table></figure>\n<p>此时可以用getchar()读掉中间的回车。<br>在做翁恺老师C语言程序设计的PTA习题时，碰到了这样一道题：<br><img src=\"https://img-blog.csdnimg.cn/2bf40d6f06ca4f999f51eefe9bea5cfd.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p0d3F3cQ==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>要交替输入浮点数和带空格的字符串，一开始没有细想回车的问题：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-comment\">//循环执行：</span><br><span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%lf&quot;</span>,book[i].price);<span class=\"hljs-comment\">//读入浮点数</span><br>gets(books[i].name);<span class=\"hljs-comment\">//读入字符串</span><br></code></pre></td></tr></table></figure>\n<p>后来经一番查询理解了两种函数对空白符的处理，也写了这篇博文。<br>这道题有趣的地方是scanf和gets的结合，因此除了getchar()读掉中间的回车的办法，还可以在scanf末尾加空格：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-comment\">//循环执行：</span><br><span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%lf &quot;</span>,book[i].price);<span class=\"hljs-comment\">//读入浮点数，并读掉结尾的空白符（回车）</span><br>gets(books[i].name);<span class=\"hljs-comment\">//读入字符串</span><br></code></pre></td></tr></table></figure>\n<p>非常巧妙。<br>以上是本人经试验、查询资料后得出的结论，也欢迎读者多多尝试，如有错误，还请读者雅正！</p>\n"},{"title":"关于C/C++中结构体指针作为形参传入函数，为什么主函数中实参不会被修改的问题","date":"2022-02-25T16:00:00.000Z","_content":"\n主函数传入函数的变量叫实参，而函数中的对应变量叫形参。形参实际上是实参的拷贝，所以如果我们修改形参的值，实参不会发生变化。\n后来学习了指针，指针就相当于钥匙，能打开对应房间（地址）的门。当指针作为函数参数时，实参和形参相当于拷贝的两把钥匙，但他们都指向同一个房间，同一个地址。借由形参访问地址，并改变地址中的值，能够真正修改地址中的值。\n而在学习结构体、链表时，常常进行的操作是对结构体指针赋值。\n比如添加新链表结点add函数，传入实参head（要修改的链表的头指针）先将新结点的内容赋给临时结构体指针p，然后将p的值赋给head或last->next，即挂在链表的结尾。\n```c\nhead=p;//当head为NULL的时候\nlast->next=p;//当head不为NULL的时候\n```\n最后返回head指针。\n但是这样做并不会直接对主函数中的head指针进行修改，为什么？\n因为我们修改的不是指针对应地址中的值，而是直接修改指针的值，改变了指针的指向（对钥匙本身的修改，让这把钥匙指向另一个房间；而不是对钥匙指向房间里的内容的修改）。当我们令head=p时，相当于让head自身的地址值改变，和指针p指向的地址一样。这就和修改普通变量一样，对形参的修改不会影响实参。\n解决方法：(翁恺老师的建议）\n1. head定义为全局变量，这样在所有函数中都能访问。但这种方法并不好，只对这个链表的head生效。如果还定义了其他链表，此add函数就不能对其他链表生效了。\n2. add函数返回新的我们想要的head结构体指针，在原函数中把add函数的返回值赋给head.\n3. 既然可以传递指针对应地址的值，我们就让指针所指的地址中的值是我们要修改的指针，即传入**phead指向指针的指针。这样就可以直接修改*phead的值了。\n4. 我们定义一个结构list，其中包含*head。在原函数中定义list，list.head=NULL；然后把list的指针`&list`传入add函数，add的参数是list的指针，在函数中就可以对list->head进行修改。","source":"_posts/结构体指针在函数中的应用.md","raw":"---\ntitle: 关于C/C++中结构体指针作为形参传入函数，为什么主函数中实参不会被修改的问题\ndate: 2022-02-26\ntags: problems\ncategory: clanguage\n---\n\n主函数传入函数的变量叫实参，而函数中的对应变量叫形参。形参实际上是实参的拷贝，所以如果我们修改形参的值，实参不会发生变化。\n后来学习了指针，指针就相当于钥匙，能打开对应房间（地址）的门。当指针作为函数参数时，实参和形参相当于拷贝的两把钥匙，但他们都指向同一个房间，同一个地址。借由形参访问地址，并改变地址中的值，能够真正修改地址中的值。\n而在学习结构体、链表时，常常进行的操作是对结构体指针赋值。\n比如添加新链表结点add函数，传入实参head（要修改的链表的头指针）先将新结点的内容赋给临时结构体指针p，然后将p的值赋给head或last->next，即挂在链表的结尾。\n```c\nhead=p;//当head为NULL的时候\nlast->next=p;//当head不为NULL的时候\n```\n最后返回head指针。\n但是这样做并不会直接对主函数中的head指针进行修改，为什么？\n因为我们修改的不是指针对应地址中的值，而是直接修改指针的值，改变了指针的指向（对钥匙本身的修改，让这把钥匙指向另一个房间；而不是对钥匙指向房间里的内容的修改）。当我们令head=p时，相当于让head自身的地址值改变，和指针p指向的地址一样。这就和修改普通变量一样，对形参的修改不会影响实参。\n解决方法：(翁恺老师的建议）\n1. head定义为全局变量，这样在所有函数中都能访问。但这种方法并不好，只对这个链表的head生效。如果还定义了其他链表，此add函数就不能对其他链表生效了。\n2. add函数返回新的我们想要的head结构体指针，在原函数中把add函数的返回值赋给head.\n3. 既然可以传递指针对应地址的值，我们就让指针所指的地址中的值是我们要修改的指针，即传入**phead指向指针的指针。这样就可以直接修改*phead的值了。\n4. 我们定义一个结构list，其中包含*head。在原函数中定义list，list.head=NULL；然后把list的指针`&list`传入add函数，add的参数是list的指针，在函数中就可以对list->head进行修改。","slug":"结构体指针在函数中的应用","published":1,"updated":"2022-04-18T03:36:38.917Z","_id":"cl040g0ku0001r8v26vv7bdwz","comments":1,"layout":"post","photos":[],"link":"","content":"<p>主函数传入函数的变量叫实参，而函数中的对应变量叫形参。形参实际上是实参的拷贝，所以如果我们修改形参的值，实参不会发生变化。<br>后来学习了指针，指针就相当于钥匙，能打开对应房间（地址）的门。当指针作为函数参数时，实参和形参相当于拷贝的两把钥匙，但他们都指向同一个房间，同一个地址。借由形参访问地址，并改变地址中的值，能够真正修改地址中的值。<br>而在学习结构体、链表时，常常进行的操作是对结构体指针赋值。<br>比如添加新链表结点add函数，传入实参head（要修改的链表的头指针）先将新结点的内容赋给临时结构体指针p，然后将p的值赋给head或last-&gt;next，即挂在链表的结尾。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\">head=p;<span class=\"hljs-comment\">//当head为NULL的时候</span><br>last-&gt;next=p;<span class=\"hljs-comment\">//当head不为NULL的时候</span><br></code></pre></td></tr></table></figure>\n<p>最后返回head指针。<br>但是这样做并不会直接对主函数中的head指针进行修改，为什么？<br>因为我们修改的不是指针对应地址中的值，而是直接修改指针的值，改变了指针的指向（对钥匙本身的修改，让这把钥匙指向另一个房间；而不是对钥匙指向房间里的内容的修改）。当我们令head=p时，相当于让head自身的地址值改变，和指针p指向的地址一样。这就和修改普通变量一样，对形参的修改不会影响实参。<br>解决方法：(翁恺老师的建议）</p>\n<ol>\n<li>head定义为全局变量，这样在所有函数中都能访问。但这种方法并不好，只对这个链表的head生效。如果还定义了其他链表，此add函数就不能对其他链表生效了。</li>\n<li>add函数返回新的我们想要的head结构体指针，在原函数中把add函数的返回值赋给head.</li>\n<li>既然可以传递指针对应地址的值，我们就让指针所指的地址中的值是我们要修改的指针，即传入*<em>phead指向指针的指针。这样就可以直接修改</em>phead的值了。</li>\n<li>我们定义一个结构list，其中包含*head。在原函数中定义list，list.head=NULL；然后把list的指针<code>&amp;list</code>传入add函数，add的参数是list的指针，在函数中就可以对list-&gt;head进行修改。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>主函数传入函数的变量叫实参，而函数中的对应变量叫形参。形参实际上是实参的拷贝，所以如果我们修改形参的值，实参不会发生变化。<br>后来学习了指针，指针就相当于钥匙，能打开对应房间（地址）的门。当指针作为函数参数时，实参和形参相当于拷贝的两把钥匙，但他们都指向同一个房间，同一个地址。借由形参访问地址，并改变地址中的值，能够真正修改地址中的值。<br>而在学习结构体、链表时，常常进行的操作是对结构体指针赋值。<br>比如添加新链表结点add函数，传入实参head（要修改的链表的头指针）先将新结点的内容赋给临时结构体指针p，然后将p的值赋给head或last-&gt;next，即挂在链表的结尾。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\">head=p;<span class=\"hljs-comment\">//当head为NULL的时候</span><br>last-&gt;next=p;<span class=\"hljs-comment\">//当head不为NULL的时候</span><br></code></pre></td></tr></table></figure>\n<p>最后返回head指针。<br>但是这样做并不会直接对主函数中的head指针进行修改，为什么？<br>因为我们修改的不是指针对应地址中的值，而是直接修改指针的值，改变了指针的指向（对钥匙本身的修改，让这把钥匙指向另一个房间；而不是对钥匙指向房间里的内容的修改）。当我们令head=p时，相当于让head自身的地址值改变，和指针p指向的地址一样。这就和修改普通变量一样，对形参的修改不会影响实参。<br>解决方法：(翁恺老师的建议）</p>\n<ol>\n<li>head定义为全局变量，这样在所有函数中都能访问。但这种方法并不好，只对这个链表的head生效。如果还定义了其他链表，此add函数就不能对其他链表生效了。</li>\n<li>add函数返回新的我们想要的head结构体指针，在原函数中把add函数的返回值赋给head.</li>\n<li>既然可以传递指针对应地址的值，我们就让指针所指的地址中的值是我们要修改的指针，即传入*<em>phead指向指针的指针。这样就可以直接修改</em>phead的值了。</li>\n<li>我们定义一个结构list，其中包含*head。在原函数中定义list，list.head=NULL；然后把list的指针<code>&amp;list</code>传入add函数，add的参数是list的指针，在函数中就可以对list-&gt;head进行修改。</li>\n</ol>\n"},{"title":"大二C语言大作业：订餐系统（总结）","date":"2022-02-26T16:00:00.000Z","_content":"\n尽管快半年没有学c了，好在回顾起来还是蛮快的。而且也发现比去年的自己熟练了许多。\n小学期要求5人合作，用C语言做一个订餐系统，能够实现用户的登录、选择餐馆、订餐、按各种规则查询与排序、修改个人信息，管理员的登录、添加菜品、按各种规则查询与排序、修改个人信息。\n首先，我们调研了几个流行的订餐系统，~~并解决了午饭~~分析其页面逻辑顺序，借此设定了我们自己的订餐系统的逻辑顺序。\n感谢blue、peppa、214、Mar鼎力相助！\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d8feaa5c8fab43efb78c7dd073d37419.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_20,color_FFFFFF,t_70,g_se,x_16)\n至于写法，主要尝试了两个新知识点：**文件操作与链表**。\n想要实现这样的订餐系统，必须有地方可以存储其数据。不能说放在程序里吧，每次一关一开又恢复原状了。我们使用FILE文件操作，对存放在指定位置的txt进行读写操作，读取其中的数据。\n至于数据结构采用结构体数组还是链表，在之前学习翁恺老师的网课时我们认识到了结构体数组的一些弊端。数组大小固定，一旦初始化无法修改，少了可能越界，多了浪费内存空间，链表就可以想用一个结点开辟一个结点。而且对于插入、删除等操作还是链表香啊，数组中间插入或删除一个，后面的都要跟着动。\n至于如何实现多人合作，可参考翁恺老师网课12.3.1多个源代码文件用devc++创建项目的方法。我们每人负责了几个函数，最后对好接口和返回值合并。其实就像同学说的，在合并之前是最没底的，也没法测试知道自己写的什么样。好在最终完成的还算顺利。\n\n链表中嵌套链表，是这回我们做的一个非常有意思的尝试。我们发现每次订单中所点的菜品及其数量，和每次订单结束后推荐的菜品数量都是不固定的。对于数据结构还没开始学的我们来说有些困难。后来去问了老师，老师给出了“那你们只能在链表里套一个链表了吧”的解决方案。没想到这个方案真的能做，虽然这铁不是最佳方案。但是也非常有趣。\n```c\ntypedef struct list_dish //订单中的菜品链表\n{\n\tint dish_id; //菜品号\n\tint number;\t //该菜品数量\n\tstruct list_dish *next;\n} LISTDISH;\ntypedef struct recommend_d\n{\n\tchar dish_name[len]; //推荐的菜品名称\n\tstruct recommend_d *next;\n} RECOMMEND;\ntypedef struct list //订单链表\n{\n\tint number;\t\t\t\t//订单号\n\tchar user_id[len];\t\t//用户id，据此可以找到用户地址\n\tint restaurant_id;\t\t//餐馆id\n\tint score;\t\t\t\t//本次订单对餐馆的打分\n\tint price;\t\t\t\t//本次订单的总价格\n\tTIME delivery_time_s;\t//起始配送时间。TIME是一个包含月、日、时、分成员的结构体\n\tTIME delivery_time_e;\t//结束配送时间\n\tRECOMMEND *recommend_d; //本次用户推荐菜品头结点指针 \n\tLISTDISH *head_ld;\t\t//本次订单的菜品链表头结点指针\n\tstruct list *next;\n} LIST;\n```\n如上，在订单链表的每个结点中，都包含着一个listdish（存储本次订单所选菜品及其数量）链表的头结点和一个recommend（存储本次订单推荐的菜品）链表的头结点。访问的时候可以通过list->recommend->dish_name这样的方法直接得到本次订单中推荐菜品的菜品名称。\n这样的结构，如何从文件中读取？\n其他的链表都还好办。至于这三个链表，我们建立了3个txt文件（虽然listdish和recommend有许多链表，但是最好还是都存在一个txt里，不然每次新点订单还要新建txt文件。）其中listdish和recommend文本文档是这样的：![在这里插入图片描述](https://img-blog.csdnimg.cn/bcd7964a59194715921f1261517f5d50.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_18,color_FFFFFF,t_70,g_se,x_16)\n每一行代表第几个订单。每两个数字为一组，第一个数字为菜品号，第二个数字为该菜品所点数量。由于不固定长度，我们采用两个-1作为结尾，当读到-1时本订单结束。\n```c\nLIST *read_inf_l()\n{\n\tLIST *head = (LIST *)malloc(sizeof(LIST))\n\t, *last = head, *p, *temp = (LIST *)malloc(sizeof(LIST));\n\thead->next = NULL;\n\tFILE *fp_l = fopen(\"D:\\\\小学期\\\\list.txt\", \"r\");\n\twhile (fscanf(fp_l, \"%d %s %d %d %d %d %d %d %d %d %d %d %d \"\n\t, &temp->number, temp->user_id, &temp->restaurant_id\n\t, &temp->score, &temp->price\n\t, &temp->delivery_time_s.month, &temp->delivery_time_s.day\n\t, &temp->delivery_time_s.hour, &temp->delivery_time_s.minute\n\t, &temp->delivery_time_e.month, &temp->delivery_time_e.day\n\t, &temp->delivery_time_e.hour, &temp->delivery_time_e.minute) != EOF)\n\t{\n\t\tp = (LIST *)malloc(sizeof(LIST));\n\t\tp->next = NULL;\n\t\tp->head_ld = read_inf_ld(temp->number);//跳转到read_inf_ld(int number)函数中获得本次订单listdish链表的头结点，number是订单号\n\t\tp->recommend_d = read_inf_recommend(temp->number);//跳转到read_inf_recommend(int number)函数中获得本次订单recommend链表的头结点，number是订单号\n\t\tp->number = temp->number;\n\t\tstrcpy(p->user_id, temp->user_id);\n\t\tp->restaurant_id = temp->restaurant_id;\n\t\tp->score = temp->score;\n\t\tp->price = temp->price;\n\t\tp->delivery_time_s.month = temp->delivery_time_s.month;\n\t\tp->delivery_time_s.day = temp->delivery_time_s.day;\n\t\tp->delivery_time_s.hour = temp->delivery_time_s.hour;\n\t\tp->delivery_time_s.minute = temp->delivery_time_s.minute;\n\t\tp->delivery_time_e.month = temp->delivery_time_e.month;\n\t\tp->delivery_time_e.day = temp->delivery_time_e.day;\n\t\tp->delivery_time_e.hour = temp->delivery_time_e.hour;\n\t\tp->delivery_time_e.minute = temp->delivery_time_e.minute;\n\t\tlast->next = p;\n\t\tlast = last->next;\n\t\tlast->next = NULL;\n\t}\n\tfclose(fp_l);\n\treturn head;\n}\n```\n```c\nLISTDISH *read_inf_ld(int id) //Read the Information of List-Dish linklist\n{\n\tLISTDISH *head = (LISTDISH *)malloc(sizeof(LISTDISH))\n\t, *last = head, *p, *temp = (LISTDISH *)malloc(sizeof(LISTDISH));\n\thead->next = NULL;\n\tFILE *fp_ld;\n\tfp_ld = fopen(\"D:\\\\小学期\\\\listdish.txt\", \"r\");\n\tint cnt = 1;\n\tif (id != 0)\n\t\twhile (cnt != id)\n\t\t{\n\n\t\t\ttemp->dish_id = 0;\n\t\t\twhile (temp->dish_id != -1)\n\t\t\t{\n\t\t\t\tfscanf(fp_ld, \"%d %d \", &temp->dish_id, &temp->number);\n\t\t\t}\n\t\t\tcnt++;\n\t\t}\n\tfscanf(fp_ld, \"%d %d \", &temp->dish_id, &temp->number);\n\twhile (temp->dish_id != -1)\n\t{\n\t\tp = (LISTDISH *)malloc(sizeof(LISTDISH));\n\t\tp->dish_id = temp->dish_id;\n\t\tp->number = temp->number;\n\t\tlast->next = p;\n\t\tlast = last->next;\n\t\tlast->next = NULL;\n\t\tfscanf(fp_ld, \"%d %d \", &temp->dish_id, &temp->number);\n\t}\n\tfclose(fp_ld);\n\treturn head;\n}\n```\n比如要读取第三个订单所点菜品信息，传入read_inf_ld()的number订单号为3.`int cnt = 1`代表当前文件指针读取的订单号，从1开始计数，每次读到-1 -1证明又读完了一单，cnt++，直到cnt == number为止。然后读取接下来的这个链表，最后返回头结点，作为该订单中的一个成员。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/6b66117ee8b641998ea580f57da912ee.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_15,color_FFFFFF,t_70,g_se,x_16)\n```c\nRECOMMEND *read_inf_recommend(int id)\n{\n\tRECOMMEND *head = (RECOMMEND *)malloc(sizeof(RECOMMEND)),*last=head\n\t,*p,*temp = (RECOMMEND *)malloc(sizeof(RECOMMEND));\n\thead->next=NULL;\n\tFILE *fp_recommend = fopen(\"D:\\\\小学期\\\\recommend.txt\", \"r\"); \n\tint cnt = 1;\n    if (id != 0)\n        while (cnt != id)\n        {\n            strcpy(temp->dish_name,\"0\");\n            while (strcmp(temp->dish_name , \"-1\")!=0)\n            {\n                fscanf(fp_recommend, \"%s \", temp->dish_name);\n            }\n            cnt++;\n        }\n    fscanf(fp_recommend, \"%s \", temp->dish_name);\n    while (strcmp(temp->dish_name ,\"-1\")!=0)\n    {\n        p = (RECOMMEND *)malloc(sizeof(RECOMMEND));\n        strcpy(p->dish_name, temp->dish_name);\n        last->next = p;\n        last = last->next;\n        last->next=NULL;\n        fscanf(fp_recommend, \"%s \", temp->dish_name);\n    }\n\tfclose(fp_recommend);\n\treturn head;\n}\n```\n读取推荐菜品链表也是类似。\n得到的链表全都包括头结点（里链表也是），不包含结尾的-1，只要通过->->就能访问hh。\n总之，结束了~","source":"_posts/大二C语言大作业 订餐系统（总结）.md","raw":"---\ntitle: 大二C语言大作业：订餐系统（总结）\ndate: 2022-02-27\ntags: homework\ncategory: clanguage\n---\n\n尽管快半年没有学c了，好在回顾起来还是蛮快的。而且也发现比去年的自己熟练了许多。\n小学期要求5人合作，用C语言做一个订餐系统，能够实现用户的登录、选择餐馆、订餐、按各种规则查询与排序、修改个人信息，管理员的登录、添加菜品、按各种规则查询与排序、修改个人信息。\n首先，我们调研了几个流行的订餐系统，~~并解决了午饭~~分析其页面逻辑顺序，借此设定了我们自己的订餐系统的逻辑顺序。\n感谢blue、peppa、214、Mar鼎力相助！\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d8feaa5c8fab43efb78c7dd073d37419.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_20,color_FFFFFF,t_70,g_se,x_16)\n至于写法，主要尝试了两个新知识点：**文件操作与链表**。\n想要实现这样的订餐系统，必须有地方可以存储其数据。不能说放在程序里吧，每次一关一开又恢复原状了。我们使用FILE文件操作，对存放在指定位置的txt进行读写操作，读取其中的数据。\n至于数据结构采用结构体数组还是链表，在之前学习翁恺老师的网课时我们认识到了结构体数组的一些弊端。数组大小固定，一旦初始化无法修改，少了可能越界，多了浪费内存空间，链表就可以想用一个结点开辟一个结点。而且对于插入、删除等操作还是链表香啊，数组中间插入或删除一个，后面的都要跟着动。\n至于如何实现多人合作，可参考翁恺老师网课12.3.1多个源代码文件用devc++创建项目的方法。我们每人负责了几个函数，最后对好接口和返回值合并。其实就像同学说的，在合并之前是最没底的，也没法测试知道自己写的什么样。好在最终完成的还算顺利。\n\n链表中嵌套链表，是这回我们做的一个非常有意思的尝试。我们发现每次订单中所点的菜品及其数量，和每次订单结束后推荐的菜品数量都是不固定的。对于数据结构还没开始学的我们来说有些困难。后来去问了老师，老师给出了“那你们只能在链表里套一个链表了吧”的解决方案。没想到这个方案真的能做，虽然这铁不是最佳方案。但是也非常有趣。\n```c\ntypedef struct list_dish //订单中的菜品链表\n{\n\tint dish_id; //菜品号\n\tint number;\t //该菜品数量\n\tstruct list_dish *next;\n} LISTDISH;\ntypedef struct recommend_d\n{\n\tchar dish_name[len]; //推荐的菜品名称\n\tstruct recommend_d *next;\n} RECOMMEND;\ntypedef struct list //订单链表\n{\n\tint number;\t\t\t\t//订单号\n\tchar user_id[len];\t\t//用户id，据此可以找到用户地址\n\tint restaurant_id;\t\t//餐馆id\n\tint score;\t\t\t\t//本次订单对餐馆的打分\n\tint price;\t\t\t\t//本次订单的总价格\n\tTIME delivery_time_s;\t//起始配送时间。TIME是一个包含月、日、时、分成员的结构体\n\tTIME delivery_time_e;\t//结束配送时间\n\tRECOMMEND *recommend_d; //本次用户推荐菜品头结点指针 \n\tLISTDISH *head_ld;\t\t//本次订单的菜品链表头结点指针\n\tstruct list *next;\n} LIST;\n```\n如上，在订单链表的每个结点中，都包含着一个listdish（存储本次订单所选菜品及其数量）链表的头结点和一个recommend（存储本次订单推荐的菜品）链表的头结点。访问的时候可以通过list->recommend->dish_name这样的方法直接得到本次订单中推荐菜品的菜品名称。\n这样的结构，如何从文件中读取？\n其他的链表都还好办。至于这三个链表，我们建立了3个txt文件（虽然listdish和recommend有许多链表，但是最好还是都存在一个txt里，不然每次新点订单还要新建txt文件。）其中listdish和recommend文本文档是这样的：![在这里插入图片描述](https://img-blog.csdnimg.cn/bcd7964a59194715921f1261517f5d50.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_18,color_FFFFFF,t_70,g_se,x_16)\n每一行代表第几个订单。每两个数字为一组，第一个数字为菜品号，第二个数字为该菜品所点数量。由于不固定长度，我们采用两个-1作为结尾，当读到-1时本订单结束。\n```c\nLIST *read_inf_l()\n{\n\tLIST *head = (LIST *)malloc(sizeof(LIST))\n\t, *last = head, *p, *temp = (LIST *)malloc(sizeof(LIST));\n\thead->next = NULL;\n\tFILE *fp_l = fopen(\"D:\\\\小学期\\\\list.txt\", \"r\");\n\twhile (fscanf(fp_l, \"%d %s %d %d %d %d %d %d %d %d %d %d %d \"\n\t, &temp->number, temp->user_id, &temp->restaurant_id\n\t, &temp->score, &temp->price\n\t, &temp->delivery_time_s.month, &temp->delivery_time_s.day\n\t, &temp->delivery_time_s.hour, &temp->delivery_time_s.minute\n\t, &temp->delivery_time_e.month, &temp->delivery_time_e.day\n\t, &temp->delivery_time_e.hour, &temp->delivery_time_e.minute) != EOF)\n\t{\n\t\tp = (LIST *)malloc(sizeof(LIST));\n\t\tp->next = NULL;\n\t\tp->head_ld = read_inf_ld(temp->number);//跳转到read_inf_ld(int number)函数中获得本次订单listdish链表的头结点，number是订单号\n\t\tp->recommend_d = read_inf_recommend(temp->number);//跳转到read_inf_recommend(int number)函数中获得本次订单recommend链表的头结点，number是订单号\n\t\tp->number = temp->number;\n\t\tstrcpy(p->user_id, temp->user_id);\n\t\tp->restaurant_id = temp->restaurant_id;\n\t\tp->score = temp->score;\n\t\tp->price = temp->price;\n\t\tp->delivery_time_s.month = temp->delivery_time_s.month;\n\t\tp->delivery_time_s.day = temp->delivery_time_s.day;\n\t\tp->delivery_time_s.hour = temp->delivery_time_s.hour;\n\t\tp->delivery_time_s.minute = temp->delivery_time_s.minute;\n\t\tp->delivery_time_e.month = temp->delivery_time_e.month;\n\t\tp->delivery_time_e.day = temp->delivery_time_e.day;\n\t\tp->delivery_time_e.hour = temp->delivery_time_e.hour;\n\t\tp->delivery_time_e.minute = temp->delivery_time_e.minute;\n\t\tlast->next = p;\n\t\tlast = last->next;\n\t\tlast->next = NULL;\n\t}\n\tfclose(fp_l);\n\treturn head;\n}\n```\n```c\nLISTDISH *read_inf_ld(int id) //Read the Information of List-Dish linklist\n{\n\tLISTDISH *head = (LISTDISH *)malloc(sizeof(LISTDISH))\n\t, *last = head, *p, *temp = (LISTDISH *)malloc(sizeof(LISTDISH));\n\thead->next = NULL;\n\tFILE *fp_ld;\n\tfp_ld = fopen(\"D:\\\\小学期\\\\listdish.txt\", \"r\");\n\tint cnt = 1;\n\tif (id != 0)\n\t\twhile (cnt != id)\n\t\t{\n\n\t\t\ttemp->dish_id = 0;\n\t\t\twhile (temp->dish_id != -1)\n\t\t\t{\n\t\t\t\tfscanf(fp_ld, \"%d %d \", &temp->dish_id, &temp->number);\n\t\t\t}\n\t\t\tcnt++;\n\t\t}\n\tfscanf(fp_ld, \"%d %d \", &temp->dish_id, &temp->number);\n\twhile (temp->dish_id != -1)\n\t{\n\t\tp = (LISTDISH *)malloc(sizeof(LISTDISH));\n\t\tp->dish_id = temp->dish_id;\n\t\tp->number = temp->number;\n\t\tlast->next = p;\n\t\tlast = last->next;\n\t\tlast->next = NULL;\n\t\tfscanf(fp_ld, \"%d %d \", &temp->dish_id, &temp->number);\n\t}\n\tfclose(fp_ld);\n\treturn head;\n}\n```\n比如要读取第三个订单所点菜品信息，传入read_inf_ld()的number订单号为3.`int cnt = 1`代表当前文件指针读取的订单号，从1开始计数，每次读到-1 -1证明又读完了一单，cnt++，直到cnt == number为止。然后读取接下来的这个链表，最后返回头结点，作为该订单中的一个成员。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/6b66117ee8b641998ea580f57da912ee.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_15,color_FFFFFF,t_70,g_se,x_16)\n```c\nRECOMMEND *read_inf_recommend(int id)\n{\n\tRECOMMEND *head = (RECOMMEND *)malloc(sizeof(RECOMMEND)),*last=head\n\t,*p,*temp = (RECOMMEND *)malloc(sizeof(RECOMMEND));\n\thead->next=NULL;\n\tFILE *fp_recommend = fopen(\"D:\\\\小学期\\\\recommend.txt\", \"r\"); \n\tint cnt = 1;\n    if (id != 0)\n        while (cnt != id)\n        {\n            strcpy(temp->dish_name,\"0\");\n            while (strcmp(temp->dish_name , \"-1\")!=0)\n            {\n                fscanf(fp_recommend, \"%s \", temp->dish_name);\n            }\n            cnt++;\n        }\n    fscanf(fp_recommend, \"%s \", temp->dish_name);\n    while (strcmp(temp->dish_name ,\"-1\")!=0)\n    {\n        p = (RECOMMEND *)malloc(sizeof(RECOMMEND));\n        strcpy(p->dish_name, temp->dish_name);\n        last->next = p;\n        last = last->next;\n        last->next=NULL;\n        fscanf(fp_recommend, \"%s \", temp->dish_name);\n    }\n\tfclose(fp_recommend);\n\treturn head;\n}\n```\n读取推荐菜品链表也是类似。\n得到的链表全都包括头结点（里链表也是），不包含结尾的-1，只要通过->->就能访问hh。\n总之，结束了~","slug":"大二C语言大作业 订餐系统（总结）","published":1,"updated":"2022-04-18T03:36:17.718Z","_id":"cl04122ju0001pgv2ah9oewd6","comments":1,"layout":"post","photos":[],"link":"","content":"<p>尽管快半年没有学c了，好在回顾起来还是蛮快的。而且也发现比去年的自己熟练了许多。<br>小学期要求5人合作，用C语言做一个订餐系统，能够实现用户的登录、选择餐馆、订餐、按各种规则查询与排序、修改个人信息，管理员的登录、添加菜品、按各种规则查询与排序、修改个人信息。<br>首先，我们调研了几个流行的订餐系统，<del>并解决了午饭</del>分析其页面逻辑顺序，借此设定了我们自己的订餐系统的逻辑顺序。<br>感谢blue、peppa、214、Mar鼎力相助！<br><img src=\"https://img-blog.csdnimg.cn/d8feaa5c8fab43efb78c7dd073d37419.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>至于写法，主要尝试了两个新知识点：<strong>文件操作与链表</strong>。<br>想要实现这样的订餐系统，必须有地方可以存储其数据。不能说放在程序里吧，每次一关一开又恢复原状了。我们使用FILE文件操作，对存放在指定位置的txt进行读写操作，读取其中的数据。<br>至于数据结构采用结构体数组还是链表，在之前学习翁恺老师的网课时我们认识到了结构体数组的一些弊端。数组大小固定，一旦初始化无法修改，少了可能越界，多了浪费内存空间，链表就可以想用一个结点开辟一个结点。而且对于插入、删除等操作还是链表香啊，数组中间插入或删除一个，后面的都要跟着动。<br>至于如何实现多人合作，可参考翁恺老师网课12.3.1多个源代码文件用devc++创建项目的方法。我们每人负责了几个函数，最后对好接口和返回值合并。其实就像同学说的，在合并之前是最没底的，也没法测试知道自己写的什么样。好在最终完成的还算顺利。</p>\n<p>链表中嵌套链表，是这回我们做的一个非常有意思的尝试。我们发现每次订单中所点的菜品及其数量，和每次订单结束后推荐的菜品数量都是不固定的。对于数据结构还没开始学的我们来说有些困难。后来去问了老师，老师给出了“那你们只能在链表里套一个链表了吧”的解决方案。没想到这个方案真的能做，虽然这铁不是最佳方案。但是也非常有趣。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-keyword\">typedef</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">list_dish</span> //订单中的菜品链表</span><br><span class=\"hljs-class\">&#123;</span><br>\t<span class=\"hljs-type\">int</span> dish_id; <span class=\"hljs-comment\">//菜品号</span><br>\t<span class=\"hljs-type\">int</span> number;\t <span class=\"hljs-comment\">//该菜品数量</span><br>\t<span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">list_dish</span> *<span class=\"hljs-title\">next</span>;</span><br>&#125; LISTDISH;<br><span class=\"hljs-keyword\">typedef</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">recommend_d</span></span><br><span class=\"hljs-class\">&#123;</span><br>\t<span class=\"hljs-type\">char</span> dish_name[len]; <span class=\"hljs-comment\">//推荐的菜品名称</span><br>\t<span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">recommend_d</span> *<span class=\"hljs-title\">next</span>;</span><br>&#125; RECOMMEND;<br><span class=\"hljs-keyword\">typedef</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">list</span> //订单链表</span><br><span class=\"hljs-class\">&#123;</span><br>\t<span class=\"hljs-type\">int</span> number;\t\t\t\t<span class=\"hljs-comment\">//订单号</span><br>\t<span class=\"hljs-type\">char</span> user_id[len];\t\t<span class=\"hljs-comment\">//用户id，据此可以找到用户地址</span><br>\t<span class=\"hljs-type\">int</span> restaurant_id;\t\t<span class=\"hljs-comment\">//餐馆id</span><br>\t<span class=\"hljs-type\">int</span> score;\t\t\t\t<span class=\"hljs-comment\">//本次订单对餐馆的打分</span><br>\t<span class=\"hljs-type\">int</span> price;\t\t\t\t<span class=\"hljs-comment\">//本次订单的总价格</span><br>\tTIME delivery_time_s;\t<span class=\"hljs-comment\">//起始配送时间。TIME是一个包含月、日、时、分成员的结构体</span><br>\tTIME delivery_time_e;\t<span class=\"hljs-comment\">//结束配送时间</span><br>\tRECOMMEND *recommend_d; <span class=\"hljs-comment\">//本次用户推荐菜品头结点指针 </span><br>\tLISTDISH *head_ld;\t\t<span class=\"hljs-comment\">//本次订单的菜品链表头结点指针</span><br>\t<span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">list</span> *<span class=\"hljs-title\">next</span>;</span><br>&#125; LIST;<br></code></pre></td></tr></table></figure>\n<p>如上，在订单链表的每个结点中，都包含着一个listdish（存储本次订单所选菜品及其数量）链表的头结点和一个recommend（存储本次订单推荐的菜品）链表的头结点。访问的时候可以通过list-&gt;recommend-&gt;dish_name这样的方法直接得到本次订单中推荐菜品的菜品名称。<br>这样的结构，如何从文件中读取？<br>其他的链表都还好办。至于这三个链表，我们建立了3个txt文件（虽然listdish和recommend有许多链表，但是最好还是都存在一个txt里，不然每次新点订单还要新建txt文件。）其中listdish和recommend文本文档是这样的：<img src=\"https://img-blog.csdnimg.cn/bcd7964a59194715921f1261517f5d50.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_18,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>每一行代表第几个订单。每两个数字为一组，第一个数字为菜品号，第二个数字为该菜品所点数量。由于不固定长度，我们采用两个-1作为结尾，当读到-1时本订单结束。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\">LIST *<span class=\"hljs-title function_\">read_inf_l</span><span class=\"hljs-params\">()</span><br>&#123;<br>\tLIST *head = (LIST *)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-keyword\">sizeof</span>(LIST))<br>\t, *last = head, *p, *temp = (LIST *)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-keyword\">sizeof</span>(LIST));<br>\thead-&gt;next = <span class=\"hljs-literal\">NULL</span>;<br>\tFILE *fp_l = fopen(<span class=\"hljs-string\">&quot;D:\\\\小学期\\\\list.txt&quot;</span>, <span class=\"hljs-string\">&quot;r&quot;</span>);<br>\t<span class=\"hljs-keyword\">while</span> (<span class=\"hljs-built_in\">fscanf</span>(fp_l, <span class=\"hljs-string\">&quot;%d %s %d %d %d %d %d %d %d %d %d %d %d &quot;</span><br>\t, &amp;temp-&gt;number, temp-&gt;user_id, &amp;temp-&gt;restaurant_id<br>\t, &amp;temp-&gt;score, &amp;temp-&gt;price<br>\t, &amp;temp-&gt;delivery_time_s.month, &amp;temp-&gt;delivery_time_s.day<br>\t, &amp;temp-&gt;delivery_time_s.hour, &amp;temp-&gt;delivery_time_s.minute<br>\t, &amp;temp-&gt;delivery_time_e.month, &amp;temp-&gt;delivery_time_e.day<br>\t, &amp;temp-&gt;delivery_time_e.hour, &amp;temp-&gt;delivery_time_e.minute) != EOF)<br>\t&#123;<br>\t\tp = (LIST *)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-keyword\">sizeof</span>(LIST));<br>\t\tp-&gt;next = <span class=\"hljs-literal\">NULL</span>;<br>\t\tp-&gt;head_ld = read_inf_ld(temp-&gt;number);<span class=\"hljs-comment\">//跳转到read_inf_ld(int number)函数中获得本次订单listdish链表的头结点，number是订单号</span><br>\t\tp-&gt;recommend_d = read_inf_recommend(temp-&gt;number);<span class=\"hljs-comment\">//跳转到read_inf_recommend(int number)函数中获得本次订单recommend链表的头结点，number是订单号</span><br>\t\tp-&gt;number = temp-&gt;number;<br>\t\t<span class=\"hljs-built_in\">strcpy</span>(p-&gt;user_id, temp-&gt;user_id);<br>\t\tp-&gt;restaurant_id = temp-&gt;restaurant_id;<br>\t\tp-&gt;score = temp-&gt;score;<br>\t\tp-&gt;price = temp-&gt;price;<br>\t\tp-&gt;delivery_time_s.month = temp-&gt;delivery_time_s.month;<br>\t\tp-&gt;delivery_time_s.day = temp-&gt;delivery_time_s.day;<br>\t\tp-&gt;delivery_time_s.hour = temp-&gt;delivery_time_s.hour;<br>\t\tp-&gt;delivery_time_s.minute = temp-&gt;delivery_time_s.minute;<br>\t\tp-&gt;delivery_time_e.month = temp-&gt;delivery_time_e.month;<br>\t\tp-&gt;delivery_time_e.day = temp-&gt;delivery_time_e.day;<br>\t\tp-&gt;delivery_time_e.hour = temp-&gt;delivery_time_e.hour;<br>\t\tp-&gt;delivery_time_e.minute = temp-&gt;delivery_time_e.minute;<br>\t\tlast-&gt;next = p;<br>\t\tlast = last-&gt;next;<br>\t\tlast-&gt;next = <span class=\"hljs-literal\">NULL</span>;<br>\t&#125;<br>\tfclose(fp_l);<br>\t<span class=\"hljs-keyword\">return</span> head;<br>&#125;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\">LISTDISH *<span class=\"hljs-title function_\">read_inf_ld</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> id)</span> <span class=\"hljs-comment\">//Read the Information of List-Dish linklist</span><br>&#123;<br>\tLISTDISH *head = (LISTDISH *)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-keyword\">sizeof</span>(LISTDISH))<br>\t, *last = head, *p, *temp = (LISTDISH *)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-keyword\">sizeof</span>(LISTDISH));<br>\thead-&gt;next = <span class=\"hljs-literal\">NULL</span>;<br>\tFILE *fp_ld;<br>\tfp_ld = fopen(<span class=\"hljs-string\">&quot;D:\\\\小学期\\\\listdish.txt&quot;</span>, <span class=\"hljs-string\">&quot;r&quot;</span>);<br>\t<span class=\"hljs-type\">int</span> cnt = <span class=\"hljs-number\">1</span>;<br>\t<span class=\"hljs-keyword\">if</span> (id != <span class=\"hljs-number\">0</span>)<br>\t\t<span class=\"hljs-keyword\">while</span> (cnt != id)<br>\t\t&#123;<br><br>\t\t\ttemp-&gt;dish_id = <span class=\"hljs-number\">0</span>;<br>\t\t\t<span class=\"hljs-keyword\">while</span> (temp-&gt;dish_id != <span class=\"hljs-number\">-1</span>)<br>\t\t\t&#123;<br>\t\t\t\t<span class=\"hljs-built_in\">fscanf</span>(fp_ld, <span class=\"hljs-string\">&quot;%d %d &quot;</span>, &amp;temp-&gt;dish_id, &amp;temp-&gt;number);<br>\t\t\t&#125;<br>\t\t\tcnt++;<br>\t\t&#125;<br>\t<span class=\"hljs-built_in\">fscanf</span>(fp_ld, <span class=\"hljs-string\">&quot;%d %d &quot;</span>, &amp;temp-&gt;dish_id, &amp;temp-&gt;number);<br>\t<span class=\"hljs-keyword\">while</span> (temp-&gt;dish_id != <span class=\"hljs-number\">-1</span>)<br>\t&#123;<br>\t\tp = (LISTDISH *)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-keyword\">sizeof</span>(LISTDISH));<br>\t\tp-&gt;dish_id = temp-&gt;dish_id;<br>\t\tp-&gt;number = temp-&gt;number;<br>\t\tlast-&gt;next = p;<br>\t\tlast = last-&gt;next;<br>\t\tlast-&gt;next = <span class=\"hljs-literal\">NULL</span>;<br>\t\t<span class=\"hljs-built_in\">fscanf</span>(fp_ld, <span class=\"hljs-string\">&quot;%d %d &quot;</span>, &amp;temp-&gt;dish_id, &amp;temp-&gt;number);<br>\t&#125;<br>\tfclose(fp_ld);<br>\t<span class=\"hljs-keyword\">return</span> head;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>比如要读取第三个订单所点菜品信息，传入read_inf_ld()的number订单号为3.<code>int cnt = 1</code>代表当前文件指针读取的订单号，从1开始计数，每次读到-1 -1证明又读完了一单，cnt++，直到cnt == number为止。然后读取接下来的这个链表，最后返回头结点，作为该订单中的一个成员。<br><img src=\"https://img-blog.csdnimg.cn/6b66117ee8b641998ea580f57da912ee.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_15,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\">RECOMMEND *<span class=\"hljs-title function_\">read_inf_recommend</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> id)</span><br>&#123;<br>\tRECOMMEND *head = (RECOMMEND *)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-keyword\">sizeof</span>(RECOMMEND)),*last=head<br>\t,*p,*temp = (RECOMMEND *)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-keyword\">sizeof</span>(RECOMMEND));<br>\thead-&gt;next=<span class=\"hljs-literal\">NULL</span>;<br>\tFILE *fp_recommend = fopen(<span class=\"hljs-string\">&quot;D:\\\\小学期\\\\recommend.txt&quot;</span>, <span class=\"hljs-string\">&quot;r&quot;</span>); <br>\t<span class=\"hljs-type\">int</span> cnt = <span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-keyword\">if</span> (id != <span class=\"hljs-number\">0</span>)<br>        <span class=\"hljs-keyword\">while</span> (cnt != id)<br>        &#123;<br>            <span class=\"hljs-built_in\">strcpy</span>(temp-&gt;dish_name,<span class=\"hljs-string\">&quot;0&quot;</span>);<br>            <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-built_in\">strcmp</span>(temp-&gt;dish_name , <span class=\"hljs-string\">&quot;-1&quot;</span>)!=<span class=\"hljs-number\">0</span>)<br>            &#123;<br>                <span class=\"hljs-built_in\">fscanf</span>(fp_recommend, <span class=\"hljs-string\">&quot;%s &quot;</span>, temp-&gt;dish_name);<br>            &#125;<br>            cnt++;<br>        &#125;<br>    <span class=\"hljs-built_in\">fscanf</span>(fp_recommend, <span class=\"hljs-string\">&quot;%s &quot;</span>, temp-&gt;dish_name);<br>    <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-built_in\">strcmp</span>(temp-&gt;dish_name ,<span class=\"hljs-string\">&quot;-1&quot;</span>)!=<span class=\"hljs-number\">0</span>)<br>    &#123;<br>        p = (RECOMMEND *)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-keyword\">sizeof</span>(RECOMMEND));<br>        <span class=\"hljs-built_in\">strcpy</span>(p-&gt;dish_name, temp-&gt;dish_name);<br>        last-&gt;next = p;<br>        last = last-&gt;next;<br>        last-&gt;next=<span class=\"hljs-literal\">NULL</span>;<br>        <span class=\"hljs-built_in\">fscanf</span>(fp_recommend, <span class=\"hljs-string\">&quot;%s &quot;</span>, temp-&gt;dish_name);<br>    &#125;<br>\tfclose(fp_recommend);<br>\t<span class=\"hljs-keyword\">return</span> head;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>读取推荐菜品链表也是类似。<br>得到的链表全都包括头结点（里链表也是），不包含结尾的-1，只要通过-&gt;-&gt;就能访问hh。<br>总之，结束了~</p>\n","site":{"data":{}},"excerpt":"","more":"<p>尽管快半年没有学c了，好在回顾起来还是蛮快的。而且也发现比去年的自己熟练了许多。<br>小学期要求5人合作，用C语言做一个订餐系统，能够实现用户的登录、选择餐馆、订餐、按各种规则查询与排序、修改个人信息，管理员的登录、添加菜品、按各种规则查询与排序、修改个人信息。<br>首先，我们调研了几个流行的订餐系统，<del>并解决了午饭</del>分析其页面逻辑顺序，借此设定了我们自己的订餐系统的逻辑顺序。<br>感谢blue、peppa、214、Mar鼎力相助！<br><img src=\"https://img-blog.csdnimg.cn/d8feaa5c8fab43efb78c7dd073d37419.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>至于写法，主要尝试了两个新知识点：<strong>文件操作与链表</strong>。<br>想要实现这样的订餐系统，必须有地方可以存储其数据。不能说放在程序里吧，每次一关一开又恢复原状了。我们使用FILE文件操作，对存放在指定位置的txt进行读写操作，读取其中的数据。<br>至于数据结构采用结构体数组还是链表，在之前学习翁恺老师的网课时我们认识到了结构体数组的一些弊端。数组大小固定，一旦初始化无法修改，少了可能越界，多了浪费内存空间，链表就可以想用一个结点开辟一个结点。而且对于插入、删除等操作还是链表香啊，数组中间插入或删除一个，后面的都要跟着动。<br>至于如何实现多人合作，可参考翁恺老师网课12.3.1多个源代码文件用devc++创建项目的方法。我们每人负责了几个函数，最后对好接口和返回值合并。其实就像同学说的，在合并之前是最没底的，也没法测试知道自己写的什么样。好在最终完成的还算顺利。</p>\n<p>链表中嵌套链表，是这回我们做的一个非常有意思的尝试。我们发现每次订单中所点的菜品及其数量，和每次订单结束后推荐的菜品数量都是不固定的。对于数据结构还没开始学的我们来说有些困难。后来去问了老师，老师给出了“那你们只能在链表里套一个链表了吧”的解决方案。没想到这个方案真的能做，虽然这铁不是最佳方案。但是也非常有趣。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-keyword\">typedef</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">list_dish</span> //订单中的菜品链表</span><br><span class=\"hljs-class\">&#123;</span><br>\t<span class=\"hljs-type\">int</span> dish_id; <span class=\"hljs-comment\">//菜品号</span><br>\t<span class=\"hljs-type\">int</span> number;\t <span class=\"hljs-comment\">//该菜品数量</span><br>\t<span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">list_dish</span> *<span class=\"hljs-title\">next</span>;</span><br>&#125; LISTDISH;<br><span class=\"hljs-keyword\">typedef</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">recommend_d</span></span><br><span class=\"hljs-class\">&#123;</span><br>\t<span class=\"hljs-type\">char</span> dish_name[len]; <span class=\"hljs-comment\">//推荐的菜品名称</span><br>\t<span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">recommend_d</span> *<span class=\"hljs-title\">next</span>;</span><br>&#125; RECOMMEND;<br><span class=\"hljs-keyword\">typedef</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">list</span> //订单链表</span><br><span class=\"hljs-class\">&#123;</span><br>\t<span class=\"hljs-type\">int</span> number;\t\t\t\t<span class=\"hljs-comment\">//订单号</span><br>\t<span class=\"hljs-type\">char</span> user_id[len];\t\t<span class=\"hljs-comment\">//用户id，据此可以找到用户地址</span><br>\t<span class=\"hljs-type\">int</span> restaurant_id;\t\t<span class=\"hljs-comment\">//餐馆id</span><br>\t<span class=\"hljs-type\">int</span> score;\t\t\t\t<span class=\"hljs-comment\">//本次订单对餐馆的打分</span><br>\t<span class=\"hljs-type\">int</span> price;\t\t\t\t<span class=\"hljs-comment\">//本次订单的总价格</span><br>\tTIME delivery_time_s;\t<span class=\"hljs-comment\">//起始配送时间。TIME是一个包含月、日、时、分成员的结构体</span><br>\tTIME delivery_time_e;\t<span class=\"hljs-comment\">//结束配送时间</span><br>\tRECOMMEND *recommend_d; <span class=\"hljs-comment\">//本次用户推荐菜品头结点指针 </span><br>\tLISTDISH *head_ld;\t\t<span class=\"hljs-comment\">//本次订单的菜品链表头结点指针</span><br>\t<span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">list</span> *<span class=\"hljs-title\">next</span>;</span><br>&#125; LIST;<br></code></pre></td></tr></table></figure>\n<p>如上，在订单链表的每个结点中，都包含着一个listdish（存储本次订单所选菜品及其数量）链表的头结点和一个recommend（存储本次订单推荐的菜品）链表的头结点。访问的时候可以通过list-&gt;recommend-&gt;dish_name这样的方法直接得到本次订单中推荐菜品的菜品名称。<br>这样的结构，如何从文件中读取？<br>其他的链表都还好办。至于这三个链表，我们建立了3个txt文件（虽然listdish和recommend有许多链表，但是最好还是都存在一个txt里，不然每次新点订单还要新建txt文件。）其中listdish和recommend文本文档是这样的：<img src=\"https://img-blog.csdnimg.cn/bcd7964a59194715921f1261517f5d50.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_18,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>每一行代表第几个订单。每两个数字为一组，第一个数字为菜品号，第二个数字为该菜品所点数量。由于不固定长度，我们采用两个-1作为结尾，当读到-1时本订单结束。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\">LIST *<span class=\"hljs-title function_\">read_inf_l</span><span class=\"hljs-params\">()</span><br>&#123;<br>\tLIST *head = (LIST *)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-keyword\">sizeof</span>(LIST))<br>\t, *last = head, *p, *temp = (LIST *)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-keyword\">sizeof</span>(LIST));<br>\thead-&gt;next = <span class=\"hljs-literal\">NULL</span>;<br>\tFILE *fp_l = fopen(<span class=\"hljs-string\">&quot;D:\\\\小学期\\\\list.txt&quot;</span>, <span class=\"hljs-string\">&quot;r&quot;</span>);<br>\t<span class=\"hljs-keyword\">while</span> (<span class=\"hljs-built_in\">fscanf</span>(fp_l, <span class=\"hljs-string\">&quot;%d %s %d %d %d %d %d %d %d %d %d %d %d &quot;</span><br>\t, &amp;temp-&gt;number, temp-&gt;user_id, &amp;temp-&gt;restaurant_id<br>\t, &amp;temp-&gt;score, &amp;temp-&gt;price<br>\t, &amp;temp-&gt;delivery_time_s.month, &amp;temp-&gt;delivery_time_s.day<br>\t, &amp;temp-&gt;delivery_time_s.hour, &amp;temp-&gt;delivery_time_s.minute<br>\t, &amp;temp-&gt;delivery_time_e.month, &amp;temp-&gt;delivery_time_e.day<br>\t, &amp;temp-&gt;delivery_time_e.hour, &amp;temp-&gt;delivery_time_e.minute) != EOF)<br>\t&#123;<br>\t\tp = (LIST *)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-keyword\">sizeof</span>(LIST));<br>\t\tp-&gt;next = <span class=\"hljs-literal\">NULL</span>;<br>\t\tp-&gt;head_ld = read_inf_ld(temp-&gt;number);<span class=\"hljs-comment\">//跳转到read_inf_ld(int number)函数中获得本次订单listdish链表的头结点，number是订单号</span><br>\t\tp-&gt;recommend_d = read_inf_recommend(temp-&gt;number);<span class=\"hljs-comment\">//跳转到read_inf_recommend(int number)函数中获得本次订单recommend链表的头结点，number是订单号</span><br>\t\tp-&gt;number = temp-&gt;number;<br>\t\t<span class=\"hljs-built_in\">strcpy</span>(p-&gt;user_id, temp-&gt;user_id);<br>\t\tp-&gt;restaurant_id = temp-&gt;restaurant_id;<br>\t\tp-&gt;score = temp-&gt;score;<br>\t\tp-&gt;price = temp-&gt;price;<br>\t\tp-&gt;delivery_time_s.month = temp-&gt;delivery_time_s.month;<br>\t\tp-&gt;delivery_time_s.day = temp-&gt;delivery_time_s.day;<br>\t\tp-&gt;delivery_time_s.hour = temp-&gt;delivery_time_s.hour;<br>\t\tp-&gt;delivery_time_s.minute = temp-&gt;delivery_time_s.minute;<br>\t\tp-&gt;delivery_time_e.month = temp-&gt;delivery_time_e.month;<br>\t\tp-&gt;delivery_time_e.day = temp-&gt;delivery_time_e.day;<br>\t\tp-&gt;delivery_time_e.hour = temp-&gt;delivery_time_e.hour;<br>\t\tp-&gt;delivery_time_e.minute = temp-&gt;delivery_time_e.minute;<br>\t\tlast-&gt;next = p;<br>\t\tlast = last-&gt;next;<br>\t\tlast-&gt;next = <span class=\"hljs-literal\">NULL</span>;<br>\t&#125;<br>\tfclose(fp_l);<br>\t<span class=\"hljs-keyword\">return</span> head;<br>&#125;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\">LISTDISH *<span class=\"hljs-title function_\">read_inf_ld</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> id)</span> <span class=\"hljs-comment\">//Read the Information of List-Dish linklist</span><br>&#123;<br>\tLISTDISH *head = (LISTDISH *)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-keyword\">sizeof</span>(LISTDISH))<br>\t, *last = head, *p, *temp = (LISTDISH *)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-keyword\">sizeof</span>(LISTDISH));<br>\thead-&gt;next = <span class=\"hljs-literal\">NULL</span>;<br>\tFILE *fp_ld;<br>\tfp_ld = fopen(<span class=\"hljs-string\">&quot;D:\\\\小学期\\\\listdish.txt&quot;</span>, <span class=\"hljs-string\">&quot;r&quot;</span>);<br>\t<span class=\"hljs-type\">int</span> cnt = <span class=\"hljs-number\">1</span>;<br>\t<span class=\"hljs-keyword\">if</span> (id != <span class=\"hljs-number\">0</span>)<br>\t\t<span class=\"hljs-keyword\">while</span> (cnt != id)<br>\t\t&#123;<br><br>\t\t\ttemp-&gt;dish_id = <span class=\"hljs-number\">0</span>;<br>\t\t\t<span class=\"hljs-keyword\">while</span> (temp-&gt;dish_id != <span class=\"hljs-number\">-1</span>)<br>\t\t\t&#123;<br>\t\t\t\t<span class=\"hljs-built_in\">fscanf</span>(fp_ld, <span class=\"hljs-string\">&quot;%d %d &quot;</span>, &amp;temp-&gt;dish_id, &amp;temp-&gt;number);<br>\t\t\t&#125;<br>\t\t\tcnt++;<br>\t\t&#125;<br>\t<span class=\"hljs-built_in\">fscanf</span>(fp_ld, <span class=\"hljs-string\">&quot;%d %d &quot;</span>, &amp;temp-&gt;dish_id, &amp;temp-&gt;number);<br>\t<span class=\"hljs-keyword\">while</span> (temp-&gt;dish_id != <span class=\"hljs-number\">-1</span>)<br>\t&#123;<br>\t\tp = (LISTDISH *)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-keyword\">sizeof</span>(LISTDISH));<br>\t\tp-&gt;dish_id = temp-&gt;dish_id;<br>\t\tp-&gt;number = temp-&gt;number;<br>\t\tlast-&gt;next = p;<br>\t\tlast = last-&gt;next;<br>\t\tlast-&gt;next = <span class=\"hljs-literal\">NULL</span>;<br>\t\t<span class=\"hljs-built_in\">fscanf</span>(fp_ld, <span class=\"hljs-string\">&quot;%d %d &quot;</span>, &amp;temp-&gt;dish_id, &amp;temp-&gt;number);<br>\t&#125;<br>\tfclose(fp_ld);<br>\t<span class=\"hljs-keyword\">return</span> head;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>比如要读取第三个订单所点菜品信息，传入read_inf_ld()的number订单号为3.<code>int cnt = 1</code>代表当前文件指针读取的订单号，从1开始计数，每次读到-1 -1证明又读完了一单，cnt++，直到cnt == number为止。然后读取接下来的这个链表，最后返回头结点，作为该订单中的一个成员。<br><img src=\"https://img-blog.csdnimg.cn/6b66117ee8b641998ea580f57da912ee.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_15,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\">RECOMMEND *<span class=\"hljs-title function_\">read_inf_recommend</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> id)</span><br>&#123;<br>\tRECOMMEND *head = (RECOMMEND *)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-keyword\">sizeof</span>(RECOMMEND)),*last=head<br>\t,*p,*temp = (RECOMMEND *)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-keyword\">sizeof</span>(RECOMMEND));<br>\thead-&gt;next=<span class=\"hljs-literal\">NULL</span>;<br>\tFILE *fp_recommend = fopen(<span class=\"hljs-string\">&quot;D:\\\\小学期\\\\recommend.txt&quot;</span>, <span class=\"hljs-string\">&quot;r&quot;</span>); <br>\t<span class=\"hljs-type\">int</span> cnt = <span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-keyword\">if</span> (id != <span class=\"hljs-number\">0</span>)<br>        <span class=\"hljs-keyword\">while</span> (cnt != id)<br>        &#123;<br>            <span class=\"hljs-built_in\">strcpy</span>(temp-&gt;dish_name,<span class=\"hljs-string\">&quot;0&quot;</span>);<br>            <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-built_in\">strcmp</span>(temp-&gt;dish_name , <span class=\"hljs-string\">&quot;-1&quot;</span>)!=<span class=\"hljs-number\">0</span>)<br>            &#123;<br>                <span class=\"hljs-built_in\">fscanf</span>(fp_recommend, <span class=\"hljs-string\">&quot;%s &quot;</span>, temp-&gt;dish_name);<br>            &#125;<br>            cnt++;<br>        &#125;<br>    <span class=\"hljs-built_in\">fscanf</span>(fp_recommend, <span class=\"hljs-string\">&quot;%s &quot;</span>, temp-&gt;dish_name);<br>    <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-built_in\">strcmp</span>(temp-&gt;dish_name ,<span class=\"hljs-string\">&quot;-1&quot;</span>)!=<span class=\"hljs-number\">0</span>)<br>    &#123;<br>        p = (RECOMMEND *)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-keyword\">sizeof</span>(RECOMMEND));<br>        <span class=\"hljs-built_in\">strcpy</span>(p-&gt;dish_name, temp-&gt;dish_name);<br>        last-&gt;next = p;<br>        last = last-&gt;next;<br>        last-&gt;next=<span class=\"hljs-literal\">NULL</span>;<br>        <span class=\"hljs-built_in\">fscanf</span>(fp_recommend, <span class=\"hljs-string\">&quot;%s &quot;</span>, temp-&gt;dish_name);<br>    &#125;<br>\tfclose(fp_recommend);<br>\t<span class=\"hljs-keyword\">return</span> head;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>读取推荐菜品链表也是类似。<br>得到的链表全都包括头结点（里链表也是），不包含结尾的-1，只要通过-&gt;-&gt;就能访问hh。<br>总之，结束了~</p>\n"},{"title":"微信开发者工具和gitee实现多人协作","date":"2022-03-26T16:00:00.000Z","_content":"\n将代码上传到码云实现多人合作开发。\n\n<h1>1. gitee</h1>\n\n首先进入gitee，注册一个账号。\n\n新建一个仓库：\n\n![image-20220327012843219](https://img-blog.csdnimg.cn/5abc8daf23a342a3906c4111e0b2d950.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n输入仓库名称，设置为私有，初始化、模板、分支模型都可以不添加。\n\n点击创建，就建好了一个新的仓库。\n\n![image-20220327013057263](https://img-blog.csdnimg.cn/0f17a2379dd44d23a084ad3df7373c6d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n这里可以看到仓库的https地址，一会会用到。\n\n因为一会直接将小程序代码文件放进来，暂时先不用添加文件。\n\n<h1>2. git</h1>\n\ngit是一个开源的分布式版本控制系统，可以高效地实现版本控制。\n\n<h2>下载</h2>\n\n[从官网上下载git](https://git-scm.com/downloads)。\n\n<h2>注册</h2>\n\n下载完成后在任意目录下右键，都会出现git GUI here和git Bash here.\n\n点击git Bash here，在当前目录下开启命令行：\n\n![image-20220327013749178](https://img-blog.csdnimg.cn/2896c2473b5c4d428995b6deb13f0e81.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_14,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n输入：\n\n```\ngit config --global user.name '要注册的git用户名，不可以是中文'\ngit config --global user.email 'gitee的邮箱'\n```\n\n注册完成。\n\n<h2>克隆远程仓库</h2>\n\n首先新建一个想要放克隆下来的仓库内容的文件夹，进入该文件夹下。可以直接双击打开文件夹后右键git Bash here，也可以在命令行中使用cd进入文件夹目录下。\n\n复制新建仓库的https地址：\n\n```\ngit clong '仓库的https地址，如https://github.com/username/try.git'\n```\n\n如果克隆的是有内容的仓库，这时就应该可以看到文件夹内出现了仓库里的文件。\n\n仓库是空，可能会出现warning字样，问题不大。\n\n然后就可以对内容进行一些修改，项目的开发。\n\n<h2>推送</h2>\n\n修改完后要将本地的代码推送到远程仓库。首先提交到本地仓库。通过add添加要提交的文件：\n\n```\ngit add .\n```\n\nadd后面加.的意思是把所有做过修改的文件都添加。如果只想添加部分新修改的文件，add后面根具体的文件名即可。\n\n再将添加的文件提交：\n\n```\ngit commit -m '备注，如：提交了app.json文件'\n```\n\n若出现`1 file changed`之类的字样，说明成功提交到了本地仓库。\n\n最后输入以下代码提交：\n\n```\ngit push origin master\n```\n\ngitee默认分支是master，github默认分支是main，需要先修改分支为main后提交`git branch -M main`\n\n出现'done'的字样说明成功。\n\n回到码云仓库，刷新一下，就可以看到新增的文件，以及还会显示commit的内容。\n\n![image-20220327015550566](https://img-blog.csdnimg.cn/97f5848e7a34432fbc24d38f3846595c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_16,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n*这里出现了不同的commit，是博主在不同时间做的不同修改。*\n\n<h1>3. 微信开发者工具</h1>\n\n通过微信开发者工具，可以不使用命令行操作，直接拉取、推送代码。\n\n打开对应小程序文件夹，点击右上角版本管理，左侧栏如下：\n\n![image-20220327015735281](https://img-blog.csdnimg.cn/d0e8f12d8b954f11bdd936a70434fe2a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_7,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n首先要在设置中进行认证。点击设置--网络和认证\n\n![image-20220327015821950](https://img-blog.csdnimg.cn/ab9f812446f34fab95604669296032c3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_19,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n输入码云的gitee账号和密码。\n\n博主和朋友尝试将代码上传到github上时，一直在这里有问题。明明用户名和密码正确，推送却会卡住或者显示认证失败。而换成码云就非常顺利。因此更建议使用码云新建仓库、上传代码。\n\n然后在 远程 中新建仓库信息\n\n![image-20220327020101940](https://img-blog.csdnimg.cn/812100ec678b42e1985baf1e9357ab2d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_11,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n名称就是仓库名称，url是https的仓库地址。\n\n设置完成后就可以点击左上角抓取远程仓库内容到本地仓库。\n\n\n\n对于修改后的文件以及提交，在工作区进行：\n\n![image-20220327020242959](https://img-blog.csdnimg.cn/d24162c54f604021b31b77586716a8c1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_18,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n这里右边上面勾选文件，就相当于git里的add添加文件。下面的提交就相当于commit。输入信息后点击提交，就上传到本地仓库了。\n\n然后点击左上角推送，**不要推送到新的分支，勾选中间项：推送到一下远程分支**。这一部相当于git的push。\n\n![image-20220327020458850](https://img-blog.csdnimg.cn/ec5c7bc3581a457cb4ccf654aa10e995.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_15,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n点击确定，出现对号就说明成功。接着可以在仓库中刷新看到新的修改。\n\n","source":"_posts/微信开发者工具和gitee实现多人协作.md","raw":"---\ntitle: 微信开发者工具和gitee实现多人协作\ndate: 2022-03-27\ntags: problems\ncategory: projects\n---\n\n将代码上传到码云实现多人合作开发。\n\n<h1>1. gitee</h1>\n\n首先进入gitee，注册一个账号。\n\n新建一个仓库：\n\n![image-20220327012843219](https://img-blog.csdnimg.cn/5abc8daf23a342a3906c4111e0b2d950.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n输入仓库名称，设置为私有，初始化、模板、分支模型都可以不添加。\n\n点击创建，就建好了一个新的仓库。\n\n![image-20220327013057263](https://img-blog.csdnimg.cn/0f17a2379dd44d23a084ad3df7373c6d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n这里可以看到仓库的https地址，一会会用到。\n\n因为一会直接将小程序代码文件放进来，暂时先不用添加文件。\n\n<h1>2. git</h1>\n\ngit是一个开源的分布式版本控制系统，可以高效地实现版本控制。\n\n<h2>下载</h2>\n\n[从官网上下载git](https://git-scm.com/downloads)。\n\n<h2>注册</h2>\n\n下载完成后在任意目录下右键，都会出现git GUI here和git Bash here.\n\n点击git Bash here，在当前目录下开启命令行：\n\n![image-20220327013749178](https://img-blog.csdnimg.cn/2896c2473b5c4d428995b6deb13f0e81.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_14,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n输入：\n\n```\ngit config --global user.name '要注册的git用户名，不可以是中文'\ngit config --global user.email 'gitee的邮箱'\n```\n\n注册完成。\n\n<h2>克隆远程仓库</h2>\n\n首先新建一个想要放克隆下来的仓库内容的文件夹，进入该文件夹下。可以直接双击打开文件夹后右键git Bash here，也可以在命令行中使用cd进入文件夹目录下。\n\n复制新建仓库的https地址：\n\n```\ngit clong '仓库的https地址，如https://github.com/username/try.git'\n```\n\n如果克隆的是有内容的仓库，这时就应该可以看到文件夹内出现了仓库里的文件。\n\n仓库是空，可能会出现warning字样，问题不大。\n\n然后就可以对内容进行一些修改，项目的开发。\n\n<h2>推送</h2>\n\n修改完后要将本地的代码推送到远程仓库。首先提交到本地仓库。通过add添加要提交的文件：\n\n```\ngit add .\n```\n\nadd后面加.的意思是把所有做过修改的文件都添加。如果只想添加部分新修改的文件，add后面根具体的文件名即可。\n\n再将添加的文件提交：\n\n```\ngit commit -m '备注，如：提交了app.json文件'\n```\n\n若出现`1 file changed`之类的字样，说明成功提交到了本地仓库。\n\n最后输入以下代码提交：\n\n```\ngit push origin master\n```\n\ngitee默认分支是master，github默认分支是main，需要先修改分支为main后提交`git branch -M main`\n\n出现'done'的字样说明成功。\n\n回到码云仓库，刷新一下，就可以看到新增的文件，以及还会显示commit的内容。\n\n![image-20220327015550566](https://img-blog.csdnimg.cn/97f5848e7a34432fbc24d38f3846595c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_16,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n*这里出现了不同的commit，是博主在不同时间做的不同修改。*\n\n<h1>3. 微信开发者工具</h1>\n\n通过微信开发者工具，可以不使用命令行操作，直接拉取、推送代码。\n\n打开对应小程序文件夹，点击右上角版本管理，左侧栏如下：\n\n![image-20220327015735281](https://img-blog.csdnimg.cn/d0e8f12d8b954f11bdd936a70434fe2a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_7,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n首先要在设置中进行认证。点击设置--网络和认证\n\n![image-20220327015821950](https://img-blog.csdnimg.cn/ab9f812446f34fab95604669296032c3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_19,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n输入码云的gitee账号和密码。\n\n博主和朋友尝试将代码上传到github上时，一直在这里有问题。明明用户名和密码正确，推送却会卡住或者显示认证失败。而换成码云就非常顺利。因此更建议使用码云新建仓库、上传代码。\n\n然后在 远程 中新建仓库信息\n\n![image-20220327020101940](https://img-blog.csdnimg.cn/812100ec678b42e1985baf1e9357ab2d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_11,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n名称就是仓库名称，url是https的仓库地址。\n\n设置完成后就可以点击左上角抓取远程仓库内容到本地仓库。\n\n\n\n对于修改后的文件以及提交，在工作区进行：\n\n![image-20220327020242959](https://img-blog.csdnimg.cn/d24162c54f604021b31b77586716a8c1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_18,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n这里右边上面勾选文件，就相当于git里的add添加文件。下面的提交就相当于commit。输入信息后点击提交，就上传到本地仓库了。\n\n然后点击左上角推送，**不要推送到新的分支，勾选中间项：推送到一下远程分支**。这一部相当于git的push。\n\n![image-20220327020458850](https://img-blog.csdnimg.cn/ec5c7bc3581a457cb4ccf654aa10e995.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_15,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n点击确定，出现对号就说明成功。接着可以在仓库中刷新看到新的修改。\n\n","slug":"微信开发者工具和gitee实现多人协作","published":1,"updated":"2022-04-18T03:36:46.885Z","_id":"cl186hpxq0000vgv2fovs52rg","comments":1,"layout":"post","photos":[],"link":"","content":"<p>将代码上传到码云实现多人合作开发。</p>\n<h1>1. gitee</h1>\n\n<p>首先进入gitee，注册一个账号。</p>\n<p>新建一个仓库：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/5abc8daf23a342a3906c4111e0b2d950.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"image-20220327012843219\"></p>\n<p>输入仓库名称，设置为私有，初始化、模板、分支模型都可以不添加。</p>\n<p>点击创建，就建好了一个新的仓库。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/0f17a2379dd44d23a084ad3df7373c6d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"image-20220327013057263\"></p>\n<p>这里可以看到仓库的https地址，一会会用到。</p>\n<p>因为一会直接将小程序代码文件放进来，暂时先不用添加文件。</p>\n<h1>2. git</h1>\n\n<p>git是一个开源的分布式版本控制系统，可以高效地实现版本控制。</p>\n<h2>下载</h2>\n\n<p><a href=\"https://git-scm.com/downloads\">从官网上下载git</a>。</p>\n<h2>注册</h2>\n\n<p>下载完成后在任意目录下右键，都会出现git GUI here和git Bash here.</p>\n<p>点击git Bash here，在当前目录下开启命令行：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2896c2473b5c4d428995b6deb13f0e81.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_14,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"image-20220327013749178\"></p>\n<p>输入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">git config --global user.name &#x27;要注册的git用户名，不可以是中文&#x27;<br>git config --global user.email &#x27;gitee的邮箱&#x27;<br></code></pre></td></tr></table></figure>\n\n<p>注册完成。</p>\n<h2>克隆远程仓库</h2>\n\n<p>首先新建一个想要放克隆下来的仓库内容的文件夹，进入该文件夹下。可以直接双击打开文件夹后右键git Bash here，也可以在命令行中使用cd进入文件夹目录下。</p>\n<p>复制新建仓库的https地址：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">git clong &#x27;仓库的https地址，如https://github.com/username/try.git&#x27;<br></code></pre></td></tr></table></figure>\n\n<p>如果克隆的是有内容的仓库，这时就应该可以看到文件夹内出现了仓库里的文件。</p>\n<p>仓库是空，可能会出现warning字样，问题不大。</p>\n<p>然后就可以对内容进行一些修改，项目的开发。</p>\n<h2>推送</h2>\n\n<p>修改完后要将本地的代码推送到远程仓库。首先提交到本地仓库。通过add添加要提交的文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">git add .<br></code></pre></td></tr></table></figure>\n\n<p>add后面加.的意思是把所有做过修改的文件都添加。如果只想添加部分新修改的文件，add后面根具体的文件名即可。</p>\n<p>再将添加的文件提交：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">git commit -m &#x27;备注，如：提交了app.json文件&#x27;<br></code></pre></td></tr></table></figure>\n\n<p>若出现<code>1 file changed</code>之类的字样，说明成功提交到了本地仓库。</p>\n<p>最后输入以下代码提交：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">git push origin master<br></code></pre></td></tr></table></figure>\n\n<p>gitee默认分支是master，github默认分支是main，需要先修改分支为main后提交<code>git branch -M main</code></p>\n<p>出现’done’的字样说明成功。</p>\n<p>回到码云仓库，刷新一下，就可以看到新增的文件，以及还会显示commit的内容。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/97f5848e7a34432fbc24d38f3846595c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_16,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"image-20220327015550566\"></p>\n<p><em>这里出现了不同的commit，是博主在不同时间做的不同修改。</em></p>\n<h1>3. 微信开发者工具</h1>\n\n<p>通过微信开发者工具，可以不使用命令行操作，直接拉取、推送代码。</p>\n<p>打开对应小程序文件夹，点击右上角版本管理，左侧栏如下：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/d0e8f12d8b954f11bdd936a70434fe2a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_7,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"image-20220327015735281\"></p>\n<p>首先要在设置中进行认证。点击设置–网络和认证</p>\n<p><img src=\"https://img-blog.csdnimg.cn/ab9f812446f34fab95604669296032c3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_19,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"image-20220327015821950\"></p>\n<p>输入码云的gitee账号和密码。</p>\n<p>博主和朋友尝试将代码上传到github上时，一直在这里有问题。明明用户名和密码正确，推送却会卡住或者显示认证失败。而换成码云就非常顺利。因此更建议使用码云新建仓库、上传代码。</p>\n<p>然后在 远程 中新建仓库信息</p>\n<p><img src=\"https://img-blog.csdnimg.cn/812100ec678b42e1985baf1e9357ab2d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_11,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"image-20220327020101940\"></p>\n<p>名称就是仓库名称，url是https的仓库地址。</p>\n<p>设置完成后就可以点击左上角抓取远程仓库内容到本地仓库。</p>\n<p>对于修改后的文件以及提交，在工作区进行：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/d24162c54f604021b31b77586716a8c1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_18,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"image-20220327020242959\"></p>\n<p>这里右边上面勾选文件，就相当于git里的add添加文件。下面的提交就相当于commit。输入信息后点击提交，就上传到本地仓库了。</p>\n<p>然后点击左上角推送，<strong>不要推送到新的分支，勾选中间项：推送到一下远程分支</strong>。这一部相当于git的push。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/ec5c7bc3581a457cb4ccf654aa10e995.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_15,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"image-20220327020458850\"></p>\n<p>点击确定，出现对号就说明成功。接着可以在仓库中刷新看到新的修改。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>将代码上传到码云实现多人合作开发。</p>\n<h1>1. gitee</h1>\n\n<p>首先进入gitee，注册一个账号。</p>\n<p>新建一个仓库：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/5abc8daf23a342a3906c4111e0b2d950.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"image-20220327012843219\"></p>\n<p>输入仓库名称，设置为私有，初始化、模板、分支模型都可以不添加。</p>\n<p>点击创建，就建好了一个新的仓库。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/0f17a2379dd44d23a084ad3df7373c6d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"image-20220327013057263\"></p>\n<p>这里可以看到仓库的https地址，一会会用到。</p>\n<p>因为一会直接将小程序代码文件放进来，暂时先不用添加文件。</p>\n<h1>2. git</h1>\n\n<p>git是一个开源的分布式版本控制系统，可以高效地实现版本控制。</p>\n<h2>下载</h2>\n\n<p><a href=\"https://git-scm.com/downloads\">从官网上下载git</a>。</p>\n<h2>注册</h2>\n\n<p>下载完成后在任意目录下右键，都会出现git GUI here和git Bash here.</p>\n<p>点击git Bash here，在当前目录下开启命令行：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2896c2473b5c4d428995b6deb13f0e81.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_14,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"image-20220327013749178\"></p>\n<p>输入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">git config --global user.name &#x27;要注册的git用户名，不可以是中文&#x27;<br>git config --global user.email &#x27;gitee的邮箱&#x27;<br></code></pre></td></tr></table></figure>\n\n<p>注册完成。</p>\n<h2>克隆远程仓库</h2>\n\n<p>首先新建一个想要放克隆下来的仓库内容的文件夹，进入该文件夹下。可以直接双击打开文件夹后右键git Bash here，也可以在命令行中使用cd进入文件夹目录下。</p>\n<p>复制新建仓库的https地址：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">git clong &#x27;仓库的https地址，如https://github.com/username/try.git&#x27;<br></code></pre></td></tr></table></figure>\n\n<p>如果克隆的是有内容的仓库，这时就应该可以看到文件夹内出现了仓库里的文件。</p>\n<p>仓库是空，可能会出现warning字样，问题不大。</p>\n<p>然后就可以对内容进行一些修改，项目的开发。</p>\n<h2>推送</h2>\n\n<p>修改完后要将本地的代码推送到远程仓库。首先提交到本地仓库。通过add添加要提交的文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">git add .<br></code></pre></td></tr></table></figure>\n\n<p>add后面加.的意思是把所有做过修改的文件都添加。如果只想添加部分新修改的文件，add后面根具体的文件名即可。</p>\n<p>再将添加的文件提交：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">git commit -m &#x27;备注，如：提交了app.json文件&#x27;<br></code></pre></td></tr></table></figure>\n\n<p>若出现<code>1 file changed</code>之类的字样，说明成功提交到了本地仓库。</p>\n<p>最后输入以下代码提交：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">git push origin master<br></code></pre></td></tr></table></figure>\n\n<p>gitee默认分支是master，github默认分支是main，需要先修改分支为main后提交<code>git branch -M main</code></p>\n<p>出现’done’的字样说明成功。</p>\n<p>回到码云仓库，刷新一下，就可以看到新增的文件，以及还会显示commit的内容。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/97f5848e7a34432fbc24d38f3846595c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_16,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"image-20220327015550566\"></p>\n<p><em>这里出现了不同的commit，是博主在不同时间做的不同修改。</em></p>\n<h1>3. 微信开发者工具</h1>\n\n<p>通过微信开发者工具，可以不使用命令行操作，直接拉取、推送代码。</p>\n<p>打开对应小程序文件夹，点击右上角版本管理，左侧栏如下：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/d0e8f12d8b954f11bdd936a70434fe2a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_7,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"image-20220327015735281\"></p>\n<p>首先要在设置中进行认证。点击设置–网络和认证</p>\n<p><img src=\"https://img-blog.csdnimg.cn/ab9f812446f34fab95604669296032c3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_19,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"image-20220327015821950\"></p>\n<p>输入码云的gitee账号和密码。</p>\n<p>博主和朋友尝试将代码上传到github上时，一直在这里有问题。明明用户名和密码正确，推送却会卡住或者显示认证失败。而换成码云就非常顺利。因此更建议使用码云新建仓库、上传代码。</p>\n<p>然后在 远程 中新建仓库信息</p>\n<p><img src=\"https://img-blog.csdnimg.cn/812100ec678b42e1985baf1e9357ab2d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_11,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"image-20220327020101940\"></p>\n<p>名称就是仓库名称，url是https的仓库地址。</p>\n<p>设置完成后就可以点击左上角抓取远程仓库内容到本地仓库。</p>\n<p>对于修改后的文件以及提交，在工作区进行：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/d24162c54f604021b31b77586716a8c1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_18,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"image-20220327020242959\"></p>\n<p>这里右边上面勾选文件，就相当于git里的add添加文件。下面的提交就相当于commit。输入信息后点击提交，就上传到本地仓库了。</p>\n<p>然后点击左上角推送，<strong>不要推送到新的分支，勾选中间项：推送到一下远程分支</strong>。这一部相当于git的push。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/ec5c7bc3581a457cb4ccf654aa10e995.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JCo56eR5aGU6LWE5rex5bmy5ZGY,size_15,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"image-20220327020458850\"></p>\n<p>点击确定，出现对号就说明成功。接着可以在仓库中刷新看到新的修改。</p>\n"},{"title":"Java 学习博客_1 介绍与安装","date":"2022-04-13T16:00:00.000Z","_content":"\n以黑马程序员网课为主。\n\n## 介绍\n\nJava是一个可以跨平台的语言，借助Java虚拟机（Java Virtual Machine, JVM）能够在任意操作系统（operating system, OS）上运行。\n\nJVM: Java Virtual Machine，在 JRE 的 bin 目录下。JVM 本质上是一个程序，使得 Java 在不同平台上运行时不需要重新编译，只需要执行保存在某字节码文件（.class）中的指令，不管什么平台，只要装有相应平台的 JVM ，字节码文件就可以在该平台上运行。\n\nJRE: Java Runtime Environment，运行只需要 JRE 就够了。\n\nJDK: Java Development Kit，Java 程序开发工具包。\n\n![123](https://s1.328888.xyz/2022/04/14/iUcNe.png)\n\n尽管 JRE 对于运行 java 文件已经足够，作为学习肯定还是要下载 JDK 的~\n\nJDK 的安装目录如下：\n\n| JDK目录名称 | 说明                                |\n| ----------- | ----------------------------------- |\n| bin         | 存放工具命令，如：javac, java, etc. |\n| conf        | 配置文件                            |\n| include     | 某些平台特定的头文件                |\n| jmods       | 模块                                |\n| legal       | 授权文档                            |\n| lib         | 补充 JAR 包                         |\n| 其他        | 说明型文档                          |\n\n## 在 DOS 窗口下操作命令\n\n在一开始没有使用 IDEA 等集成开发环境的时候，直接在 DOS ( Disk Operating System ) 窗口运行。Windows 通过 `win+R` 打开运行窗口，输入 `cmd` 进入 DOS 窗口。\n\n常用的DOS窗口命令：\n\n| 操作                   | 说明                                                         |\n| ---------------------- | ------------------------------------------------------------ |\n| `盘符名称`+`:`，如`D:` | 切换到该盘                                                   |\n| `dir`                  | 查看当前路径下的内容                                         |\n| `cd 目录`，如`cd java` | 进入当前路径下的一个单级目录（cd 是 change directory 的意思） |\n| `cd ..`                | 回退到上一级目录                                             |\n| `cd 目录1\\目录2\\..`    | 一次性进入多级目录                                           |\n| `cd \\`                 | 回退到盘符目录                                               |\n| `cls`                  | 清屏                                                         |\n| `exit`                 | 退出 DOS 窗口                                                |\n\n## 配置 PATH 环境变量\n\n不得不说虽然之前学习其他语言的时候也做过很多次配置 PATH 环境变量的操作，但是这次才算理解一些意义。\n\n开发 Java 的时候是肯定会用到 JDK 里的开发工具的，比如编译的 `javac` ，运行的 `java`。\n\n但是没有配置环境变量的时候，cmd 无法直接使用 javac 文件，因为不知道 `javac.exe` 的路径。\n\n所以需要输入 `\"JDK文件的目录\\bin\\javac.exe\" 需要编译的文件的目录\\需要编译的文件.java` （可以把 javac 和 java 文件直接拖进去，就会自动生成目录）相当麻烦。\n\n配置环境变量之后，直接在 cmd 窗口里输入 `javac 需要编译的文件.java` 就能编译。\n\n配置方法：（ Windows 系统）\n\n① 此电脑 -- 属性 -- 高级系统设置 -- 环境变量，新建一个用户变量（建议命名和 Java 相关），并放入 JDK 文件夹的路径\n\n② 在下方系统变量中选中 Path 变量 -- 编辑 -- 新建 -- 命名（建议命名和 Java 相关），并放入 JDK 内 bin 文件夹的路径。\n\n最后在DOS中输入`javac`，如果显示使用 javac 的提示信息说明配置成功。","source":"_posts/Java 学习博客_1 介绍与安装.md","raw":"---\ntitle: Java 学习博客_1 介绍与安装\ndate: 2022-04-14\ntags: study\ncategory: java\n---\n\n以黑马程序员网课为主。\n\n## 介绍\n\nJava是一个可以跨平台的语言，借助Java虚拟机（Java Virtual Machine, JVM）能够在任意操作系统（operating system, OS）上运行。\n\nJVM: Java Virtual Machine，在 JRE 的 bin 目录下。JVM 本质上是一个程序，使得 Java 在不同平台上运行时不需要重新编译，只需要执行保存在某字节码文件（.class）中的指令，不管什么平台，只要装有相应平台的 JVM ，字节码文件就可以在该平台上运行。\n\nJRE: Java Runtime Environment，运行只需要 JRE 就够了。\n\nJDK: Java Development Kit，Java 程序开发工具包。\n\n![123](https://s1.328888.xyz/2022/04/14/iUcNe.png)\n\n尽管 JRE 对于运行 java 文件已经足够，作为学习肯定还是要下载 JDK 的~\n\nJDK 的安装目录如下：\n\n| JDK目录名称 | 说明                                |\n| ----------- | ----------------------------------- |\n| bin         | 存放工具命令，如：javac, java, etc. |\n| conf        | 配置文件                            |\n| include     | 某些平台特定的头文件                |\n| jmods       | 模块                                |\n| legal       | 授权文档                            |\n| lib         | 补充 JAR 包                         |\n| 其他        | 说明型文档                          |\n\n## 在 DOS 窗口下操作命令\n\n在一开始没有使用 IDEA 等集成开发环境的时候，直接在 DOS ( Disk Operating System ) 窗口运行。Windows 通过 `win+R` 打开运行窗口，输入 `cmd` 进入 DOS 窗口。\n\n常用的DOS窗口命令：\n\n| 操作                   | 说明                                                         |\n| ---------------------- | ------------------------------------------------------------ |\n| `盘符名称`+`:`，如`D:` | 切换到该盘                                                   |\n| `dir`                  | 查看当前路径下的内容                                         |\n| `cd 目录`，如`cd java` | 进入当前路径下的一个单级目录（cd 是 change directory 的意思） |\n| `cd ..`                | 回退到上一级目录                                             |\n| `cd 目录1\\目录2\\..`    | 一次性进入多级目录                                           |\n| `cd \\`                 | 回退到盘符目录                                               |\n| `cls`                  | 清屏                                                         |\n| `exit`                 | 退出 DOS 窗口                                                |\n\n## 配置 PATH 环境变量\n\n不得不说虽然之前学习其他语言的时候也做过很多次配置 PATH 环境变量的操作，但是这次才算理解一些意义。\n\n开发 Java 的时候是肯定会用到 JDK 里的开发工具的，比如编译的 `javac` ，运行的 `java`。\n\n但是没有配置环境变量的时候，cmd 无法直接使用 javac 文件，因为不知道 `javac.exe` 的路径。\n\n所以需要输入 `\"JDK文件的目录\\bin\\javac.exe\" 需要编译的文件的目录\\需要编译的文件.java` （可以把 javac 和 java 文件直接拖进去，就会自动生成目录）相当麻烦。\n\n配置环境变量之后，直接在 cmd 窗口里输入 `javac 需要编译的文件.java` 就能编译。\n\n配置方法：（ Windows 系统）\n\n① 此电脑 -- 属性 -- 高级系统设置 -- 环境变量，新建一个用户变量（建议命名和 Java 相关），并放入 JDK 文件夹的路径\n\n② 在下方系统变量中选中 Path 变量 -- 编辑 -- 新建 -- 命名（建议命名和 Java 相关），并放入 JDK 内 bin 文件夹的路径。\n\n最后在DOS中输入`javac`，如果显示使用 javac 的提示信息说明配置成功。","slug":"Java 学习博客_1 介绍与安装","published":1,"updated":"2022-04-18T03:37:11.098Z","_id":"cl245sb4z0000s0v20g663k5p","comments":1,"layout":"post","photos":[],"link":"","content":"<p>以黑马程序员网课为主。</p>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>Java是一个可以跨平台的语言，借助Java虚拟机（Java Virtual Machine, JVM）能够在任意操作系统（operating system, OS）上运行。</p>\n<p>JVM: Java Virtual Machine，在 JRE 的 bin 目录下。JVM 本质上是一个程序，使得 Java 在不同平台上运行时不需要重新编译，只需要执行保存在某字节码文件（.class）中的指令，不管什么平台，只要装有相应平台的 JVM ，字节码文件就可以在该平台上运行。</p>\n<p>JRE: Java Runtime Environment，运行只需要 JRE 就够了。</p>\n<p>JDK: Java Development Kit，Java 程序开发工具包。</p>\n<p><img src=\"https://s1.328888.xyz/2022/04/14/iUcNe.png\" alt=\"123\"></p>\n<p>尽管 JRE 对于运行 java 文件已经足够，作为学习肯定还是要下载 JDK 的~</p>\n<p>JDK 的安装目录如下：</p>\n<table>\n<thead>\n<tr>\n<th>JDK目录名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>bin</td>\n<td>存放工具命令，如：javac, java, etc.</td>\n</tr>\n<tr>\n<td>conf</td>\n<td>配置文件</td>\n</tr>\n<tr>\n<td>include</td>\n<td>某些平台特定的头文件</td>\n</tr>\n<tr>\n<td>jmods</td>\n<td>模块</td>\n</tr>\n<tr>\n<td>legal</td>\n<td>授权文档</td>\n</tr>\n<tr>\n<td>lib</td>\n<td>补充 JAR 包</td>\n</tr>\n<tr>\n<td>其他</td>\n<td>说明型文档</td>\n</tr>\n</tbody></table>\n<h2 id=\"在-DOS-窗口下操作命令\"><a href=\"#在-DOS-窗口下操作命令\" class=\"headerlink\" title=\"在 DOS 窗口下操作命令\"></a>在 DOS 窗口下操作命令</h2><p>在一开始没有使用 IDEA 等集成开发环境的时候，直接在 DOS ( Disk Operating System ) 窗口运行。Windows 通过 <code>win+R</code> 打开运行窗口，输入 <code>cmd</code> 进入 DOS 窗口。</p>\n<p>常用的DOS窗口命令：</p>\n<table>\n<thead>\n<tr>\n<th>操作</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>盘符名称</code>+<code>:</code>，如<code>D:</code></td>\n<td>切换到该盘</td>\n</tr>\n<tr>\n<td><code>dir</code></td>\n<td>查看当前路径下的内容</td>\n</tr>\n<tr>\n<td><code>cd 目录</code>，如<code>cd java</code></td>\n<td>进入当前路径下的一个单级目录（cd 是 change directory 的意思）</td>\n</tr>\n<tr>\n<td><code>cd ..</code></td>\n<td>回退到上一级目录</td>\n</tr>\n<tr>\n<td><code>cd 目录1\\目录2\\..</code></td>\n<td>一次性进入多级目录</td>\n</tr>\n<tr>\n<td><code>cd \\</code></td>\n<td>回退到盘符目录</td>\n</tr>\n<tr>\n<td><code>cls</code></td>\n<td>清屏</td>\n</tr>\n<tr>\n<td><code>exit</code></td>\n<td>退出 DOS 窗口</td>\n</tr>\n</tbody></table>\n<h2 id=\"配置-PATH-环境变量\"><a href=\"#配置-PATH-环境变量\" class=\"headerlink\" title=\"配置 PATH 环境变量\"></a>配置 PATH 环境变量</h2><p>不得不说虽然之前学习其他语言的时候也做过很多次配置 PATH 环境变量的操作，但是这次才算理解一些意义。</p>\n<p>开发 Java 的时候是肯定会用到 JDK 里的开发工具的，比如编译的 <code>javac</code> ，运行的 <code>java</code>。</p>\n<p>但是没有配置环境变量的时候，cmd 无法直接使用 javac 文件，因为不知道 <code>javac.exe</code> 的路径。</p>\n<p>所以需要输入 <code>&quot;JDK文件的目录\\bin\\javac.exe&quot; 需要编译的文件的目录\\需要编译的文件.java</code> （可以把 javac 和 java 文件直接拖进去，就会自动生成目录）相当麻烦。</p>\n<p>配置环境变量之后，直接在 cmd 窗口里输入 <code>javac 需要编译的文件.java</code> 就能编译。</p>\n<p>配置方法：（ Windows 系统）</p>\n<p>① 此电脑 – 属性 – 高级系统设置 – 环境变量，新建一个用户变量（建议命名和 Java 相关），并放入 JDK 文件夹的路径</p>\n<p>② 在下方系统变量中选中 Path 变量 – 编辑 – 新建 – 命名（建议命名和 Java 相关），并放入 JDK 内 bin 文件夹的路径。</p>\n<p>最后在DOS中输入<code>javac</code>，如果显示使用 javac 的提示信息说明配置成功。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>以黑马程序员网课为主。</p>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>Java是一个可以跨平台的语言，借助Java虚拟机（Java Virtual Machine, JVM）能够在任意操作系统（operating system, OS）上运行。</p>\n<p>JVM: Java Virtual Machine，在 JRE 的 bin 目录下。JVM 本质上是一个程序，使得 Java 在不同平台上运行时不需要重新编译，只需要执行保存在某字节码文件（.class）中的指令，不管什么平台，只要装有相应平台的 JVM ，字节码文件就可以在该平台上运行。</p>\n<p>JRE: Java Runtime Environment，运行只需要 JRE 就够了。</p>\n<p>JDK: Java Development Kit，Java 程序开发工具包。</p>\n<p><img src=\"https://s1.328888.xyz/2022/04/14/iUcNe.png\" alt=\"123\"></p>\n<p>尽管 JRE 对于运行 java 文件已经足够，作为学习肯定还是要下载 JDK 的~</p>\n<p>JDK 的安装目录如下：</p>\n<table>\n<thead>\n<tr>\n<th>JDK目录名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>bin</td>\n<td>存放工具命令，如：javac, java, etc.</td>\n</tr>\n<tr>\n<td>conf</td>\n<td>配置文件</td>\n</tr>\n<tr>\n<td>include</td>\n<td>某些平台特定的头文件</td>\n</tr>\n<tr>\n<td>jmods</td>\n<td>模块</td>\n</tr>\n<tr>\n<td>legal</td>\n<td>授权文档</td>\n</tr>\n<tr>\n<td>lib</td>\n<td>补充 JAR 包</td>\n</tr>\n<tr>\n<td>其他</td>\n<td>说明型文档</td>\n</tr>\n</tbody></table>\n<h2 id=\"在-DOS-窗口下操作命令\"><a href=\"#在-DOS-窗口下操作命令\" class=\"headerlink\" title=\"在 DOS 窗口下操作命令\"></a>在 DOS 窗口下操作命令</h2><p>在一开始没有使用 IDEA 等集成开发环境的时候，直接在 DOS ( Disk Operating System ) 窗口运行。Windows 通过 <code>win+R</code> 打开运行窗口，输入 <code>cmd</code> 进入 DOS 窗口。</p>\n<p>常用的DOS窗口命令：</p>\n<table>\n<thead>\n<tr>\n<th>操作</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>盘符名称</code>+<code>:</code>，如<code>D:</code></td>\n<td>切换到该盘</td>\n</tr>\n<tr>\n<td><code>dir</code></td>\n<td>查看当前路径下的内容</td>\n</tr>\n<tr>\n<td><code>cd 目录</code>，如<code>cd java</code></td>\n<td>进入当前路径下的一个单级目录（cd 是 change directory 的意思）</td>\n</tr>\n<tr>\n<td><code>cd ..</code></td>\n<td>回退到上一级目录</td>\n</tr>\n<tr>\n<td><code>cd 目录1\\目录2\\..</code></td>\n<td>一次性进入多级目录</td>\n</tr>\n<tr>\n<td><code>cd \\</code></td>\n<td>回退到盘符目录</td>\n</tr>\n<tr>\n<td><code>cls</code></td>\n<td>清屏</td>\n</tr>\n<tr>\n<td><code>exit</code></td>\n<td>退出 DOS 窗口</td>\n</tr>\n</tbody></table>\n<h2 id=\"配置-PATH-环境变量\"><a href=\"#配置-PATH-环境变量\" class=\"headerlink\" title=\"配置 PATH 环境变量\"></a>配置 PATH 环境变量</h2><p>不得不说虽然之前学习其他语言的时候也做过很多次配置 PATH 环境变量的操作，但是这次才算理解一些意义。</p>\n<p>开发 Java 的时候是肯定会用到 JDK 里的开发工具的，比如编译的 <code>javac</code> ，运行的 <code>java</code>。</p>\n<p>但是没有配置环境变量的时候，cmd 无法直接使用 javac 文件，因为不知道 <code>javac.exe</code> 的路径。</p>\n<p>所以需要输入 <code>&quot;JDK文件的目录\\bin\\javac.exe&quot; 需要编译的文件的目录\\需要编译的文件.java</code> （可以把 javac 和 java 文件直接拖进去，就会自动生成目录）相当麻烦。</p>\n<p>配置环境变量之后，直接在 cmd 窗口里输入 <code>javac 需要编译的文件.java</code> 就能编译。</p>\n<p>配置方法：（ Windows 系统）</p>\n<p>① 此电脑 – 属性 – 高级系统设置 – 环境变量，新建一个用户变量（建议命名和 Java 相关），并放入 JDK 文件夹的路径</p>\n<p>② 在下方系统变量中选中 Path 变量 – 编辑 – 新建 – 命名（建议命名和 Java 相关），并放入 JDK 内 bin 文件夹的路径。</p>\n<p>最后在DOS中输入<code>javac</code>，如果显示使用 javac 的提示信息说明配置成功。</p>\n"},{"title":"Java 学习博客_2 入门——基础语法","date":"2022-04-13T16:00:00.000Z","_content":"\n## HelloWorld 案例\n\n学习的时候除了直接用记事本编辑，推荐使用 Notepad++ 。使用 Notepad++ 前需要设置：`设置 -- 首选项 -- 新建 -- 默认语言：Java -- 编码 ANSI`。\n\n新建一个 HelloWorld.java 文件，通过记事本或 Notepad++ 编辑内容：\n\n```java\npublic class HelloWorld { //这里的 class 类名必须和文件名一致\n    public static void main(String[] args) { //main 方法\n        System.out.println(\"Hello World!\"); // 单独输出一行的意思。注意大小写不可以出错\n    }\n}\n```\n\n然后在DOS窗口中进入当前文件所在目录，输入命令：\n\n```\njavac HelloWorld.java //编译\njava HelloWorld //运行\n```\n\n这里可见，java 和 C、C++ 一样，属于编译型语言（一次性翻译全部源程序，然后执行机器语言程序），而不是解释型语言（源程序逐条翻译并执行）。\n\n如果顺利运行，就会输出 `Hello World!`。\n\n## Java 基础语法——主要与C语言比较有哪些不同\n\n### 注释\n\n单行注释 `//` 、多行注释 `/* */` 都和C一样。还有一个文件注释 `/** */`暂时用不到，之后了解。\n\n### 关键字\n\n字母全部小写。\n\n###### 数据类型：\n\n整数型：byte, short, int, long\n\n浮点型：float, double\n\n字符型：char\n\n布尔型：boolean\n\n变量的定义和 c 相似，`int a=10;` 不能重复定义和未初始化就使用。\n\n```java\nlong l=1000000L;\nfloat f=1.235F; //防止 long 类型和 float 类型不兼容\n```\n\n标识符命名：数字、字母（区分大小写）、_、$ 组成，数字不能开头。\n\n*命名规范：*\n\n*方法和变量：一个单词时，首字母大写；标识符由多个单词组成时：小驼峰命名法*\n\n*类名：大驼峰命名法*\n\n### 运算符\n\n+，-，*，/，%，\n\n+=，-=，*=，/=，%=（隐含了强制类型转换）\n\n++，--\n\n==，>=，<=，>，<，!=\n\n? : \n\n&，|，^，!（逻辑运算符）\n\n&&，||（短路逻辑运算符，如果左边足以判断表达式的结果，右边就不会执行）\n\n与 C 不同的是，Java 里的 + 号可以进行字符串拼接。字符串变量碰到其他类型变量就会拼接。\n\n```java\n1+99+\"string\" //\"100string\"\n\"string\"+1+99 //\"string199\"，从左往右计算\n```\n\n\n\n## 类型转换\n\n自动类型转换：把小范围的变量赋值给大范围的变量\n\n数据范围从小到大：\n\n![DataTypeRange](https://s1.328888.xyz/2022/04/14/iX6sR.png)\n\n算术表达式中包含多个基本数据类型的值时，整个算术表达式的类型就会自动提升。\n\n强制类型转换：赋值运算符中隐含。\n\n```java\nshort s=10;\t\t\ns+=10;\t\t\t//正常\ns=s+10;\t\t\t//错，因为右边发生了自动类型转换，变成了int型\ns=(short)(s+10);//也可以\n```\n\n\n\n\n\n","source":"_posts/Java 学习博客_2 入门——基础语法.md","raw":"---\ntitle: Java 学习博客_2 入门——基础语法\ndate: 2022-04-14\ntags: study\ncategory: java\n---\n\n## HelloWorld 案例\n\n学习的时候除了直接用记事本编辑，推荐使用 Notepad++ 。使用 Notepad++ 前需要设置：`设置 -- 首选项 -- 新建 -- 默认语言：Java -- 编码 ANSI`。\n\n新建一个 HelloWorld.java 文件，通过记事本或 Notepad++ 编辑内容：\n\n```java\npublic class HelloWorld { //这里的 class 类名必须和文件名一致\n    public static void main(String[] args) { //main 方法\n        System.out.println(\"Hello World!\"); // 单独输出一行的意思。注意大小写不可以出错\n    }\n}\n```\n\n然后在DOS窗口中进入当前文件所在目录，输入命令：\n\n```\njavac HelloWorld.java //编译\njava HelloWorld //运行\n```\n\n这里可见，java 和 C、C++ 一样，属于编译型语言（一次性翻译全部源程序，然后执行机器语言程序），而不是解释型语言（源程序逐条翻译并执行）。\n\n如果顺利运行，就会输出 `Hello World!`。\n\n## Java 基础语法——主要与C语言比较有哪些不同\n\n### 注释\n\n单行注释 `//` 、多行注释 `/* */` 都和C一样。还有一个文件注释 `/** */`暂时用不到，之后了解。\n\n### 关键字\n\n字母全部小写。\n\n###### 数据类型：\n\n整数型：byte, short, int, long\n\n浮点型：float, double\n\n字符型：char\n\n布尔型：boolean\n\n变量的定义和 c 相似，`int a=10;` 不能重复定义和未初始化就使用。\n\n```java\nlong l=1000000L;\nfloat f=1.235F; //防止 long 类型和 float 类型不兼容\n```\n\n标识符命名：数字、字母（区分大小写）、_、$ 组成，数字不能开头。\n\n*命名规范：*\n\n*方法和变量：一个单词时，首字母大写；标识符由多个单词组成时：小驼峰命名法*\n\n*类名：大驼峰命名法*\n\n### 运算符\n\n+，-，*，/，%，\n\n+=，-=，*=，/=，%=（隐含了强制类型转换）\n\n++，--\n\n==，>=，<=，>，<，!=\n\n? : \n\n&，|，^，!（逻辑运算符）\n\n&&，||（短路逻辑运算符，如果左边足以判断表达式的结果，右边就不会执行）\n\n与 C 不同的是，Java 里的 + 号可以进行字符串拼接。字符串变量碰到其他类型变量就会拼接。\n\n```java\n1+99+\"string\" //\"100string\"\n\"string\"+1+99 //\"string199\"，从左往右计算\n```\n\n\n\n## 类型转换\n\n自动类型转换：把小范围的变量赋值给大范围的变量\n\n数据范围从小到大：\n\n![DataTypeRange](https://s1.328888.xyz/2022/04/14/iX6sR.png)\n\n算术表达式中包含多个基本数据类型的值时，整个算术表达式的类型就会自动提升。\n\n强制类型转换：赋值运算符中隐含。\n\n```java\nshort s=10;\t\t\ns+=10;\t\t\t//正常\ns=s+10;\t\t\t//错，因为右边发生了自动类型转换，变成了int型\ns=(short)(s+10);//也可以\n```\n\n\n\n\n\n","slug":"Java 学习博客_2 入门——基础语法","published":1,"updated":"2022-04-18T03:37:18.637Z","_id":"cl245sb560001s0v2bzx12eg8","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"HelloWorld-案例\"><a href=\"#HelloWorld-案例\" class=\"headerlink\" title=\"HelloWorld 案例\"></a>HelloWorld 案例</h2><p>学习的时候除了直接用记事本编辑，推荐使用 Notepad++ 。使用 Notepad++ 前需要设置：<code>设置 -- 首选项 -- 新建 -- 默认语言：Java -- 编码 ANSI</code>。</p>\n<p>新建一个 HelloWorld.java 文件，通过记事本或 Notepad++ 编辑内容：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">HelloWorld</span> &#123; <span class=\"hljs-comment\">//这里的 class 类名必须和文件名一致</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123; <span class=\"hljs-comment\">//main 方法</span><br>        System.out.println(<span class=\"hljs-string\">&quot;Hello World!&quot;</span>); <span class=\"hljs-comment\">// 单独输出一行的意思。注意大小写不可以出错</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>然后在DOS窗口中进入当前文件所在目录，输入命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">javac HelloWorld.java //编译<br>java HelloWorld //运行<br></code></pre></td></tr></table></figure>\n\n<p>这里可见，java 和 C、C++ 一样，属于编译型语言（一次性翻译全部源程序，然后执行机器语言程序），而不是解释型语言（源程序逐条翻译并执行）。</p>\n<p>如果顺利运行，就会输出 <code>Hello World!</code>。</p>\n<h2 id=\"Java-基础语法——主要与C语言比较有哪些不同\"><a href=\"#Java-基础语法——主要与C语言比较有哪些不同\" class=\"headerlink\" title=\"Java 基础语法——主要与C语言比较有哪些不同\"></a>Java 基础语法——主要与C语言比较有哪些不同</h2><h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><p>单行注释 <code>//</code> 、多行注释 <code>/* */</code> 都和C一样。还有一个文件注释 <code>/** */</code>暂时用不到，之后了解。</p>\n<h3 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h3><p>字母全部小写。</p>\n<h6 id=\"数据类型：\"><a href=\"#数据类型：\" class=\"headerlink\" title=\"数据类型：\"></a>数据类型：</h6><p>整数型：byte, short, int, long</p>\n<p>浮点型：float, double</p>\n<p>字符型：char</p>\n<p>布尔型：boolean</p>\n<p>变量的定义和 c 相似，<code>int a=10;</code> 不能重复定义和未初始化就使用。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-type\">long</span> l=<span class=\"hljs-number\">1000000L</span>;<br><span class=\"hljs-type\">float</span> f=<span class=\"hljs-number\">1.235F</span>; <span class=\"hljs-comment\">//防止 long 类型和 float 类型不兼容</span><br></code></pre></td></tr></table></figure>\n\n<p>标识符命名：数字、字母（区分大小写）、_、$ 组成，数字不能开头。</p>\n<p><em>命名规范：</em></p>\n<p><em>方法和变量：一个单词时，首字母大写；标识符由多个单词组成时：小驼峰命名法</em></p>\n<p><em>类名：大驼峰命名法</em></p>\n<h3 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h3><p>+，-，*，/，%，</p>\n<p>+=，-=，*=，/=，%=（隐含了强制类型转换）</p>\n<p>++，–</p>\n<p>==，&gt;=，&lt;=，&gt;，&lt;，!=</p>\n<p>? : </p>\n<p>&amp;，|，^，!（逻辑运算符）</p>\n<p>&amp;&amp;，||（短路逻辑运算符，如果左边足以判断表达式的结果，右边就不会执行）</p>\n<p>与 C 不同的是，Java 里的 + 号可以进行字符串拼接。字符串变量碰到其他类型变量就会拼接。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-number\">1</span>+<span class=\"hljs-number\">99</span>+<span class=\"hljs-string\">&quot;string&quot;</span> <span class=\"hljs-comment\">//&quot;100string&quot;</span><br><span class=\"hljs-string\">&quot;string&quot;</span>+<span class=\"hljs-number\">1</span>+<span class=\"hljs-number\">99</span> <span class=\"hljs-comment\">//&quot;string199&quot;，从左往右计算</span><br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h2><p>自动类型转换：把小范围的变量赋值给大范围的变量</p>\n<p>数据范围从小到大：</p>\n<p><img src=\"https://s1.328888.xyz/2022/04/14/iX6sR.png\" alt=\"DataTypeRange\"></p>\n<p>算术表达式中包含多个基本数据类型的值时，整个算术表达式的类型就会自动提升。</p>\n<p>强制类型转换：赋值运算符中隐含。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-type\">short</span> s=<span class=\"hljs-number\">10</span>;\t\t<br>s+=<span class=\"hljs-number\">10</span>;\t\t\t<span class=\"hljs-comment\">//正常</span><br>s=s+<span class=\"hljs-number\">10</span>;\t\t\t<span class=\"hljs-comment\">//错，因为右边发生了自动类型转换，变成了int型</span><br>s=(<span class=\"hljs-type\">short</span>)(s+<span class=\"hljs-number\">10</span>);<span class=\"hljs-comment\">//也可以</span><br></code></pre></td></tr></table></figure>\n\n\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"HelloWorld-案例\"><a href=\"#HelloWorld-案例\" class=\"headerlink\" title=\"HelloWorld 案例\"></a>HelloWorld 案例</h2><p>学习的时候除了直接用记事本编辑，推荐使用 Notepad++ 。使用 Notepad++ 前需要设置：<code>设置 -- 首选项 -- 新建 -- 默认语言：Java -- 编码 ANSI</code>。</p>\n<p>新建一个 HelloWorld.java 文件，通过记事本或 Notepad++ 编辑内容：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">HelloWorld</span> &#123; <span class=\"hljs-comment\">//这里的 class 类名必须和文件名一致</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123; <span class=\"hljs-comment\">//main 方法</span><br>        System.out.println(<span class=\"hljs-string\">&quot;Hello World!&quot;</span>); <span class=\"hljs-comment\">// 单独输出一行的意思。注意大小写不可以出错</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>然后在DOS窗口中进入当前文件所在目录，输入命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">javac HelloWorld.java //编译<br>java HelloWorld //运行<br></code></pre></td></tr></table></figure>\n\n<p>这里可见，java 和 C、C++ 一样，属于编译型语言（一次性翻译全部源程序，然后执行机器语言程序），而不是解释型语言（源程序逐条翻译并执行）。</p>\n<p>如果顺利运行，就会输出 <code>Hello World!</code>。</p>\n<h2 id=\"Java-基础语法——主要与C语言比较有哪些不同\"><a href=\"#Java-基础语法——主要与C语言比较有哪些不同\" class=\"headerlink\" title=\"Java 基础语法——主要与C语言比较有哪些不同\"></a>Java 基础语法——主要与C语言比较有哪些不同</h2><h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><p>单行注释 <code>//</code> 、多行注释 <code>/* */</code> 都和C一样。还有一个文件注释 <code>/** */</code>暂时用不到，之后了解。</p>\n<h3 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h3><p>字母全部小写。</p>\n<h6 id=\"数据类型：\"><a href=\"#数据类型：\" class=\"headerlink\" title=\"数据类型：\"></a>数据类型：</h6><p>整数型：byte, short, int, long</p>\n<p>浮点型：float, double</p>\n<p>字符型：char</p>\n<p>布尔型：boolean</p>\n<p>变量的定义和 c 相似，<code>int a=10;</code> 不能重复定义和未初始化就使用。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-type\">long</span> l=<span class=\"hljs-number\">1000000L</span>;<br><span class=\"hljs-type\">float</span> f=<span class=\"hljs-number\">1.235F</span>; <span class=\"hljs-comment\">//防止 long 类型和 float 类型不兼容</span><br></code></pre></td></tr></table></figure>\n\n<p>标识符命名：数字、字母（区分大小写）、_、$ 组成，数字不能开头。</p>\n<p><em>命名规范：</em></p>\n<p><em>方法和变量：一个单词时，首字母大写；标识符由多个单词组成时：小驼峰命名法</em></p>\n<p><em>类名：大驼峰命名法</em></p>\n<h3 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h3><p>+，-，*，/，%，</p>\n<p>+=，-=，*=，/=，%=（隐含了强制类型转换）</p>\n<p>++，–</p>\n<p>==，&gt;=，&lt;=，&gt;，&lt;，!=</p>\n<p>? : </p>\n<p>&amp;，|，^，!（逻辑运算符）</p>\n<p>&amp;&amp;，||（短路逻辑运算符，如果左边足以判断表达式的结果，右边就不会执行）</p>\n<p>与 C 不同的是，Java 里的 + 号可以进行字符串拼接。字符串变量碰到其他类型变量就会拼接。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-number\">1</span>+<span class=\"hljs-number\">99</span>+<span class=\"hljs-string\">&quot;string&quot;</span> <span class=\"hljs-comment\">//&quot;100string&quot;</span><br><span class=\"hljs-string\">&quot;string&quot;</span>+<span class=\"hljs-number\">1</span>+<span class=\"hljs-number\">99</span> <span class=\"hljs-comment\">//&quot;string199&quot;，从左往右计算</span><br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h2><p>自动类型转换：把小范围的变量赋值给大范围的变量</p>\n<p>数据范围从小到大：</p>\n<p><img src=\"https://s1.328888.xyz/2022/04/14/iX6sR.png\" alt=\"DataTypeRange\"></p>\n<p>算术表达式中包含多个基本数据类型的值时，整个算术表达式的类型就会自动提升。</p>\n<p>强制类型转换：赋值运算符中隐含。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-type\">short</span> s=<span class=\"hljs-number\">10</span>;\t\t<br>s+=<span class=\"hljs-number\">10</span>;\t\t\t<span class=\"hljs-comment\">//正常</span><br>s=s+<span class=\"hljs-number\">10</span>;\t\t\t<span class=\"hljs-comment\">//错，因为右边发生了自动类型转换，变成了int型</span><br>s=(<span class=\"hljs-type\">short</span>)(s+<span class=\"hljs-number\">10</span>);<span class=\"hljs-comment\">//也可以</span><br></code></pre></td></tr></table></figure>\n\n\n\n\n\n"},{"title":"ER 和 EER 模型","date":"2022-04-17T16:00:00.000Z","_content":"\n本文思路主要来源于[骆昊jackfrued 老师的网课](https://www.bilibili.com/video/BV1rP4y157jW?spm_id_from=333.999.0.0)\n仅供本人学习参考，未做其他用途！\n\n在此也建议读者通过老师的课程学习。\n\n## 介绍\n\n为什么要有 ER 图和 EER 图的存在？\n\n**真正做项目、设计数据库时，**实际并没有这么简单，比如还有很多用户看不到、但为了方便 DBA 使用而创建的字段。如 id，一般还会有两条 Date 字段（一表示这条记录被创建的时间，二表示这条记录最后更新的时间），以及预留一个 VARCHAR / json 字段；还有一些其他注意事项（比如 auto-increment 约束其实开发中不常用，更多使用算法比如分布式 ID 生成算法（如 SnowFlake……）当然对课程来说这并不重要）**是不可能一上来就写 SQL 语句的，需要先设计表的结构和表之间的关系。**\n\nER 图（Entity Relationship, 实体关系）因此出现。下图是一个 ER 图的示例，其中矩形框代表：表（也就是实体），椭圆框代表：表中的字段（实体的属性），菱形框代表：关系，在连接线上表明了关系的重数。\n\n![百度百科图片](https://img-blog.csdnimg.cn/img_convert/e154bec557baf860b9da8b406aa2b411.png)\n\n相较于大段的 SQL 建表语句，只要能看懂 ER 图，表的结构、关系一目了然。\n\nWorkbench 等工具支持画 ER 图，甚至画好后可以自动生成 SQL 语句建表。不过 Workbench 中的图是 EER 图（扩展的ER 图）\n\n![EER 图示例](https://img-blog.csdnimg.cn/img_convert/b7d05f2614049fce76e68e0121c805a0.png)\n\n相比普通 ER 图确实感觉清晰了很多，而且每个字段可以添加 PK、NN、UQ、DEFAULT、FOREIGN KEY 等。\n\n在 EER 图下，点击 DATABASE - FORWARD ENGINEER 正向工程，可以选择要生成的表、字段，生成 SQL 语句建立表。\n\n*自动生成的 SQL 语句中，外键下方有两句话`ON DELETE NO ACTION` `ON UPDATE NO ACTION`，意为：当外键参考的主键修改/删除时，外键所在的表会受到什么样的影响？——不采取任何行动。建议去掉这两句话。如果去掉，就不能随便修改/删除外键在使用的主键。*\n\n同样地，在 SQL 语句页面，点击DATABASE - REVERSE ENGINEER 反向工程，可以根据表的结构生成 EER 图。","source":"_posts/ER 和 EER 模型.md","raw":"---\ntitle: ER 和 EER 模型\ndate: 2022-04-18\ntags: problems\ncategory: database\n---\n\n本文思路主要来源于[骆昊jackfrued 老师的网课](https://www.bilibili.com/video/BV1rP4y157jW?spm_id_from=333.999.0.0)\n仅供本人学习参考，未做其他用途！\n\n在此也建议读者通过老师的课程学习。\n\n## 介绍\n\n为什么要有 ER 图和 EER 图的存在？\n\n**真正做项目、设计数据库时，**实际并没有这么简单，比如还有很多用户看不到、但为了方便 DBA 使用而创建的字段。如 id，一般还会有两条 Date 字段（一表示这条记录被创建的时间，二表示这条记录最后更新的时间），以及预留一个 VARCHAR / json 字段；还有一些其他注意事项（比如 auto-increment 约束其实开发中不常用，更多使用算法比如分布式 ID 生成算法（如 SnowFlake……）当然对课程来说这并不重要）**是不可能一上来就写 SQL 语句的，需要先设计表的结构和表之间的关系。**\n\nER 图（Entity Relationship, 实体关系）因此出现。下图是一个 ER 图的示例，其中矩形框代表：表（也就是实体），椭圆框代表：表中的字段（实体的属性），菱形框代表：关系，在连接线上表明了关系的重数。\n\n![百度百科图片](https://img-blog.csdnimg.cn/img_convert/e154bec557baf860b9da8b406aa2b411.png)\n\n相较于大段的 SQL 建表语句，只要能看懂 ER 图，表的结构、关系一目了然。\n\nWorkbench 等工具支持画 ER 图，甚至画好后可以自动生成 SQL 语句建表。不过 Workbench 中的图是 EER 图（扩展的ER 图）\n\n![EER 图示例](https://img-blog.csdnimg.cn/img_convert/b7d05f2614049fce76e68e0121c805a0.png)\n\n相比普通 ER 图确实感觉清晰了很多，而且每个字段可以添加 PK、NN、UQ、DEFAULT、FOREIGN KEY 等。\n\n在 EER 图下，点击 DATABASE - FORWARD ENGINEER 正向工程，可以选择要生成的表、字段，生成 SQL 语句建立表。\n\n*自动生成的 SQL 语句中，外键下方有两句话`ON DELETE NO ACTION` `ON UPDATE NO ACTION`，意为：当外键参考的主键修改/删除时，外键所在的表会受到什么样的影响？——不采取任何行动。建议去掉这两句话。如果去掉，就不能随便修改/删除外键在使用的主键。*\n\n同样地，在 SQL 语句页面，点击DATABASE - REVERSE ENGINEER 反向工程，可以根据表的结构生成 EER 图。","slug":"ER 和 EER 模型","published":1,"updated":"2022-04-18T03:36:53.447Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2462ezt0000cov23aq000t3","content":"<p>本文思路主要来源于<a href=\"https://www.bilibili.com/video/BV1rP4y157jW?spm_id_from=333.999.0.0\">骆昊jackfrued 老师的网课</a><br>仅供本人学习参考，未做其他用途！</p>\n<p>在此也建议读者通过老师的课程学习。</p>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>为什么要有 ER 图和 EER 图的存在？</p>\n<p><strong>真正做项目、设计数据库时，</strong>实际并没有这么简单，比如还有很多用户看不到、但为了方便 DBA 使用而创建的字段。如 id，一般还会有两条 Date 字段（一表示这条记录被创建的时间，二表示这条记录最后更新的时间），以及预留一个 VARCHAR / json 字段；还有一些其他注意事项（比如 auto-increment 约束其实开发中不常用，更多使用算法比如分布式 ID 生成算法（如 SnowFlake……）当然对课程来说这并不重要）<strong>是不可能一上来就写 SQL 语句的，需要先设计表的结构和表之间的关系。</strong></p>\n<p>ER 图（Entity Relationship, 实体关系）因此出现。下图是一个 ER 图的示例，其中矩形框代表：表（也就是实体），椭圆框代表：表中的字段（实体的属性），菱形框代表：关系，在连接线上表明了关系的重数。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/e154bec557baf860b9da8b406aa2b411.png\" alt=\"百度百科图片\"></p>\n<p>相较于大段的 SQL 建表语句，只要能看懂 ER 图，表的结构、关系一目了然。</p>\n<p>Workbench 等工具支持画 ER 图，甚至画好后可以自动生成 SQL 语句建表。不过 Workbench 中的图是 EER 图（扩展的ER 图）</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/b7d05f2614049fce76e68e0121c805a0.png\" alt=\"EER 图示例\"></p>\n<p>相比普通 ER 图确实感觉清晰了很多，而且每个字段可以添加 PK、NN、UQ、DEFAULT、FOREIGN KEY 等。</p>\n<p>在 EER 图下，点击 DATABASE - FORWARD ENGINEER 正向工程，可以选择要生成的表、字段，生成 SQL 语句建立表。</p>\n<p><em>自动生成的 SQL 语句中，外键下方有两句话<code>ON DELETE NO ACTION</code> <code>ON UPDATE NO ACTION</code>，意为：当外键参考的主键修改/删除时，外键所在的表会受到什么样的影响？——不采取任何行动。建议去掉这两句话。如果去掉，就不能随便修改/删除外键在使用的主键。</em></p>\n<p>同样地，在 SQL 语句页面，点击DATABASE - REVERSE ENGINEER 反向工程，可以根据表的结构生成 EER 图。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>本文思路主要来源于<a href=\"https://www.bilibili.com/video/BV1rP4y157jW?spm_id_from=333.999.0.0\">骆昊jackfrued 老师的网课</a><br>仅供本人学习参考，未做其他用途！</p>\n<p>在此也建议读者通过老师的课程学习。</p>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>为什么要有 ER 图和 EER 图的存在？</p>\n<p><strong>真正做项目、设计数据库时，</strong>实际并没有这么简单，比如还有很多用户看不到、但为了方便 DBA 使用而创建的字段。如 id，一般还会有两条 Date 字段（一表示这条记录被创建的时间，二表示这条记录最后更新的时间），以及预留一个 VARCHAR / json 字段；还有一些其他注意事项（比如 auto-increment 约束其实开发中不常用，更多使用算法比如分布式 ID 生成算法（如 SnowFlake……）当然对课程来说这并不重要）<strong>是不可能一上来就写 SQL 语句的，需要先设计表的结构和表之间的关系。</strong></p>\n<p>ER 图（Entity Relationship, 实体关系）因此出现。下图是一个 ER 图的示例，其中矩形框代表：表（也就是实体），椭圆框代表：表中的字段（实体的属性），菱形框代表：关系，在连接线上表明了关系的重数。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/e154bec557baf860b9da8b406aa2b411.png\" alt=\"百度百科图片\"></p>\n<p>相较于大段的 SQL 建表语句，只要能看懂 ER 图，表的结构、关系一目了然。</p>\n<p>Workbench 等工具支持画 ER 图，甚至画好后可以自动生成 SQL 语句建表。不过 Workbench 中的图是 EER 图（扩展的ER 图）</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/b7d05f2614049fce76e68e0121c805a0.png\" alt=\"EER 图示例\"></p>\n<p>相比普通 ER 图确实感觉清晰了很多，而且每个字段可以添加 PK、NN、UQ、DEFAULT、FOREIGN KEY 等。</p>\n<p>在 EER 图下，点击 DATABASE - FORWARD ENGINEER 正向工程，可以选择要生成的表、字段，生成 SQL 语句建立表。</p>\n<p><em>自动生成的 SQL 语句中，外键下方有两句话<code>ON DELETE NO ACTION</code> <code>ON UPDATE NO ACTION</code>，意为：当外键参考的主键修改/删除时，外键所在的表会受到什么样的影响？——不采取任何行动。建议去掉这两句话。如果去掉，就不能随便修改/删除外键在使用的主键。</em></p>\n<p>同样地，在 SQL 语句页面，点击DATABASE - REVERSE ENGINEER 反向工程，可以根据表的结构生成 EER 图。</p>\n"},{"title":"Mysql Command Line Client 的使用，及常用命令","Date":"2022-04-17T16:00:00.000Z","_content":"\nMysql Command Line Client 是官方提供的客户端。之前一直直接用 Windows 的命令提示符窗口输入 Mysql 语句，不知道两者具体区别在哪里。不过还是重新安装了一个尝试一下。\n\n## 安装\n\nMYSQL 文件夹里自带有 Installer，在里面选中对应电脑版本的 Mysql Server 下载即可。\n\n## 配置\n\n由于安装目录和 Mysql 不一致，缺少配置文件 my.ini 导致 Mysql Command Line Client 一开始无法使用。直接把 Mysql 里的 my.ini 复制到 Mysql Server 目录下就可以了。\n\n## 常用命令\n\n其实在 cmd 窗口中登录 mysql 时也会给出相应的命令提示，只是当时没有仔细研究。正好借使用 Mysql Command Line Client 的机会了解一下常用的命令。\n\n开始菜单中出现了两种不同的 Mysql Command Line Client 窗口，其中一种支持 Unicode ，一种不支持。打开后即会提示输入登录密码，登录后就和 cmd 窗口中操作基本一致。\n\n| 命令                             | 作用                                                |\n| -------------------------------- | --------------------------------------------------- |\n| \\h, \\?, ?                        | 获取帮助                                            |\n| \\c                               | 清除前面输入的内容（内容输入有误时使用）            |\n| \\R                               | 修改 每次输入命令前左侧的提示样式（默认：'mysql>'） |\n| ? 需要查看帮助的命令;            | 显示该命令的帮助（如：? show）                      |\n| show databases;                  | 查看所有数据库                                      |\n| use '数据库名';                  | 选中某个数据库                                      |\n| （选中某个数据库后）show tables; | 查看当前数据库中所有表                              |\n| exit / quit                      | 退出                                                |","source":"_posts/Mysql Command Line Client 的使用，及常用命令.md","raw":"---\ntitle: Mysql Command Line Client 的使用，及常用命令\nDate: 2022-04-18\ntags: study\ncategory: tools\n---\n\nMysql Command Line Client 是官方提供的客户端。之前一直直接用 Windows 的命令提示符窗口输入 Mysql 语句，不知道两者具体区别在哪里。不过还是重新安装了一个尝试一下。\n\n## 安装\n\nMYSQL 文件夹里自带有 Installer，在里面选中对应电脑版本的 Mysql Server 下载即可。\n\n## 配置\n\n由于安装目录和 Mysql 不一致，缺少配置文件 my.ini 导致 Mysql Command Line Client 一开始无法使用。直接把 Mysql 里的 my.ini 复制到 Mysql Server 目录下就可以了。\n\n## 常用命令\n\n其实在 cmd 窗口中登录 mysql 时也会给出相应的命令提示，只是当时没有仔细研究。正好借使用 Mysql Command Line Client 的机会了解一下常用的命令。\n\n开始菜单中出现了两种不同的 Mysql Command Line Client 窗口，其中一种支持 Unicode ，一种不支持。打开后即会提示输入登录密码，登录后就和 cmd 窗口中操作基本一致。\n\n| 命令                             | 作用                                                |\n| -------------------------------- | --------------------------------------------------- |\n| \\h, \\?, ?                        | 获取帮助                                            |\n| \\c                               | 清除前面输入的内容（内容输入有误时使用）            |\n| \\R                               | 修改 每次输入命令前左侧的提示样式（默认：'mysql>'） |\n| ? 需要查看帮助的命令;            | 显示该命令的帮助（如：? show）                      |\n| show databases;                  | 查看所有数据库                                      |\n| use '数据库名';                  | 选中某个数据库                                      |\n| （选中某个数据库后）show tables; | 查看当前数据库中所有表                              |\n| exit / quit                      | 退出                                                |","slug":"Mysql Command Line Client 的使用，及常用命令","published":1,"date":"2022-04-18T03:31:43.820Z","updated":"2022-04-18T03:37:32.364Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2462f060003cov2fahrfq16","content":"<p>Mysql Command Line Client 是官方提供的客户端。之前一直直接用 Windows 的命令提示符窗口输入 Mysql 语句，不知道两者具体区别在哪里。不过还是重新安装了一个尝试一下。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>MYSQL 文件夹里自带有 Installer，在里面选中对应电脑版本的 Mysql Server 下载即可。</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>由于安装目录和 Mysql 不一致，缺少配置文件 my.ini 导致 Mysql Command Line Client 一开始无法使用。直接把 Mysql 里的 my.ini 复制到 Mysql Server 目录下就可以了。</p>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><p>其实在 cmd 窗口中登录 mysql 时也会给出相应的命令提示，只是当时没有仔细研究。正好借使用 Mysql Command Line Client 的机会了解一下常用的命令。</p>\n<p>开始菜单中出现了两种不同的 Mysql Command Line Client 窗口，其中一种支持 Unicode ，一种不支持。打开后即会提示输入登录密码，登录后就和 cmd 窗口中操作基本一致。</p>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>\\h, ?, ?</td>\n<td>获取帮助</td>\n</tr>\n<tr>\n<td>\\c</td>\n<td>清除前面输入的内容（内容输入有误时使用）</td>\n</tr>\n<tr>\n<td>\\R</td>\n<td>修改 每次输入命令前左侧的提示样式（默认：’mysql&gt;’）</td>\n</tr>\n<tr>\n<td>? 需要查看帮助的命令;</td>\n<td>显示该命令的帮助（如：? show）</td>\n</tr>\n<tr>\n<td>show databases;</td>\n<td>查看所有数据库</td>\n</tr>\n<tr>\n<td>use ‘数据库名’;</td>\n<td>选中某个数据库</td>\n</tr>\n<tr>\n<td>（选中某个数据库后）show tables;</td>\n<td>查看当前数据库中所有表</td>\n</tr>\n<tr>\n<td>exit / quit</td>\n<td>退出</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<p>Mysql Command Line Client 是官方提供的客户端。之前一直直接用 Windows 的命令提示符窗口输入 Mysql 语句，不知道两者具体区别在哪里。不过还是重新安装了一个尝试一下。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>MYSQL 文件夹里自带有 Installer，在里面选中对应电脑版本的 Mysql Server 下载即可。</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>由于安装目录和 Mysql 不一致，缺少配置文件 my.ini 导致 Mysql Command Line Client 一开始无法使用。直接把 Mysql 里的 my.ini 复制到 Mysql Server 目录下就可以了。</p>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><p>其实在 cmd 窗口中登录 mysql 时也会给出相应的命令提示，只是当时没有仔细研究。正好借使用 Mysql Command Line Client 的机会了解一下常用的命令。</p>\n<p>开始菜单中出现了两种不同的 Mysql Command Line Client 窗口，其中一种支持 Unicode ，一种不支持。打开后即会提示输入登录密码，登录后就和 cmd 窗口中操作基本一致。</p>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>\\h, ?, ?</td>\n<td>获取帮助</td>\n</tr>\n<tr>\n<td>\\c</td>\n<td>清除前面输入的内容（内容输入有误时使用）</td>\n</tr>\n<tr>\n<td>\\R</td>\n<td>修改 每次输入命令前左侧的提示样式（默认：’mysql&gt;’）</td>\n</tr>\n<tr>\n<td>? 需要查看帮助的命令;</td>\n<td>显示该命令的帮助（如：? show）</td>\n</tr>\n<tr>\n<td>show databases;</td>\n<td>查看所有数据库</td>\n</tr>\n<tr>\n<td>use ‘数据库名’;</td>\n<td>选中某个数据库</td>\n</tr>\n<tr>\n<td>（选中某个数据库后）show tables;</td>\n<td>查看当前数据库中所有表</td>\n</tr>\n<tr>\n<td>exit / quit</td>\n<td>退出</td>\n</tr>\n</tbody></table>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl2462ezt0000cov23aq000t3","category_id":"cl2462ezy0001cov23z9kghje","_id":"cl2462f0b0008cov218pwchji"},{"post_id":"cl245sb4z0000s0v20g663k5p","category_id":"cl2462f070004cov2f9020e3s","_id":"cl2462f0g000dcov2606a4zhq"},{"post_id":"cl245sb560001s0v2bzx12eg8","category_id":"cl2462f070004cov2f9020e3s","_id":"cl2462f0j000icov23u5gdlgh"},{"post_id":"cl040g0ku0001r8v26vv7bdwz","category_id":"cl2462f0g000ccov2hjrr11h0","_id":"cl2462f0j000kcov220v0gul9"},{"post_id":"cl040g0kp0000r8v2920taes1","category_id":"cl2462f0g000ccov2hjrr11h0","_id":"cl2462f0k000ocov2495o67vk"},{"post_id":"cl2462f060003cov2fahrfq16","category_id":"cl2462f0j000hcov2hcphgv5i","_id":"cl2462f0m000scov22my51nxv"},{"post_id":"cl03y1b0800003wv2hx8mg9y2","category_id":"cl2462f0k000mcov26it14oyd","_id":"cl2462f0m000vcov28zfm7mdy"},{"post_id":"cl04122ju0001pgv2ah9oewd6","category_id":"cl2462f0g000ccov2hjrr11h0","_id":"cl2462f0n000ycov27eb89p5u"},{"post_id":"cl02m4pyp0001fsv2bf156buq","category_id":"cl2462f0g000ccov2hjrr11h0","_id":"cl2462f0n0010cov2ansa1ucs"},{"post_id":"cl186hpxq0000vgv2fovs52rg","category_id":"cl2462f0n000xcov207lw48bg","_id":"cl2462f0o0011cov2epbr8rp4"}],"PostTag":[{"post_id":"cl040g0kp0000r8v2920taes1","tag_id":"cl2462f030002cov2h2e3992b","_id":"cl2462f090006cov2b1374lg0"},{"post_id":"cl2462ezt0000cov23aq000t3","tag_id":"cl2462f030002cov2h2e3992b","_id":"cl2462f0a0007cov27mgoggnh"},{"post_id":"cl245sb4z0000s0v20g663k5p","tag_id":"cl2462f080005cov2dtzoajqo","_id":"cl2462f0e000bcov23wmohuhb"},{"post_id":"cl245sb560001s0v2bzx12eg8","tag_id":"cl2462f080005cov2dtzoajqo","_id":"cl2462f0i000fcov2gkdw9n6k"},{"post_id":"cl186hpxq0000vgv2fovs52rg","tag_id":"cl2462f030002cov2h2e3992b","_id":"cl2462f0j000jcov24st5ds2k"},{"post_id":"cl040g0ku0001r8v26vv7bdwz","tag_id":"cl2462f030002cov2h2e3992b","_id":"cl2462f0k000ncov2bkzha7wn"},{"post_id":"cl2462f060003cov2fahrfq16","tag_id":"cl2462f080005cov2dtzoajqo","_id":"cl2462f0k000pcov23chp68zr"},{"post_id":"cl03y1b0800003wv2hx8mg9y2","tag_id":"cl2462f0j000gcov29et333mz","_id":"cl2462f0m000tcov26n0v92l6"},{"post_id":"cl04122ju0001pgv2ah9oewd6","tag_id":"cl2462f0j000gcov29et333mz","_id":"cl2462f0m000wcov2g011c60h"},{"post_id":"cl02m4pyp0001fsv2bf156buq","tag_id":"cl2462f0j000gcov29et333mz","_id":"cl2462f0n000zcov2bik6aciv"}],"Tag":[{"name":"code","_id":"cl03y1b0f00023wv20897ccu4"},{"name":"projects","_id":"cl186hpxu0001vgv2hv4qcxhe"},{"name":"problems","_id":"cl2462f030002cov2h2e3992b"},{"name":"study","_id":"cl2462f080005cov2dtzoajqo"},{"name":"homework","_id":"cl2462f0j000gcov29et333mz"}]}}